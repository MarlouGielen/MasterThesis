{
    "nb_idx": 12,
    "nb_name": "d0012",
    "filename": "d01.ipynb",
    "filepath": "data/data_Kaggle/raw/d01.ipynb",
    "source": "import seaborn as sns \nimport matplotlib.pyplot as plt\nfrom fastai.imports import *\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session \n # Load the training dataset\ntrain_df = pd.read_csv('/kaggle/input/titanic/train.csv')\n\n# Load the testing dataset\ntest_df = pd.read_csv('/kaggle/input/titanic/test.csv') \n ## Initial Data Exploration \n train_df.head() \n train_df.describe() \n train_df.isnull().sum() \n ## Exploratory Data Analysis\nYou can observe that the survival rates for females was significantly higher than males even though there are more males than females on board the Titanic. \n fig, (ax1, ax2) = plt.subplots(1, 2)\nsns.barplot(x='Sex',y='Survived',data=train_df, ax = ax1)\nax1.set_title('Survival Rate by Gender')\nsns.countplot(x='Sex', data=train_df, ax=ax2)\nax2.set_title('Count of Gender')\nplt.tight_layout()\nplt.show() \n Analyzing the Passenger class against the survival, you can see that class 1 has the highest survival rate as it is the only class that has the most survivals out of the 3 classes. Perhaps higher class passengers had higher prioritization compared to other classes, thus having quicker access to lifeboats during the evacuation process. \n sns.countplot(x='Pclass', hue='Survived', data=train_df)\nplt.show() \n # Select only numeric columns for the correlation matrix\nnumeric_df = train_df.select_dtypes(include=[np.number])\n\ncorrelation_matrix = numeric_df.corr()\nsns.heatmap(correlation_matrix, annot=True, fmt=\".2f\", cmap='coolwarm')\nplt.show() \n ## Data Cleaning\nBased on the initial data exploration, there are missing values in the 'Age', 'Cabin' and 'Embarked' columns. Given the limited data, I would not want to drop any rows. For the 'Age' column, I will replace with the median value. For the 'Cabin' column, I will extract the first letter and treat it as a category on its own, for missing values I will put it under 'Unknown'. As for the 'Embarked' column, I will just replace with the mode.\n \n def clean_data(df):\n    # Replace missing 'Age' values with the median age\n    df['Age'].fillna(df['Age'].median(), inplace=True)\n    \n    # Replace missing 'Fare' value with the median value\n    df['Fare'].fillna(df['Fare'].median(), inplace=True)\n    \n    # Extract the first letter of the 'Cabin' and treat missing values as 'Unknown'\n    df['Cabin'] = df['Cabin'].apply(lambda x: x[0] if pd.notnull(x) else 'Unknown')\n    \n    # Replace missing 'Embarked' values with the mode\n    embarked_mode = df['Embarked'].mode()[0]\n    df['Embarked'].fillna(embarked_mode, inplace=True)\n    \n    return df \n train_df = clean_data(train_df) \n train_df.isnull().sum() \n # Apply the same steps to the testing data\ntest_df = clean_data(test_df) \n ## Data Preprocessing\nHere I create a function to preproces my data. <br>\nFor 'Sex' column, I convert it into a numerical format.<br>\nFor 'Fare' column, I normalized it using log to reduce skewness. <br>\nCreated a 'FamilySize' column that adds up 'SibSp' and 'Parch' column. <br>\nCreated a 'Solo' column if the passenger does not have any family members abroad the Titanic. <br>\nOne-hot encoded 'Embarked' and 'Cabin' column. <br>\nDropped columns not needed for model training. \n def preprocess_data(df):\n    # Convert the 'Sex' column to numerical format (female: 1, male: 0)\n    df['Sex'] = df['Sex'].map({'female': 1, 'male': 0}).astype(int)\n    \n    # Apply log transformation to the 'Fare' column to reduce skewness\n    df['Fare_Log'] = np.log(df['Fare'] + 1)\n    \n    # Create 'FamilySize' feature\n    df['FamilySize'] = df['SibSp'] + df['Parch'] + 1\n    \n    # Create 'Solo' feature\n    df['Solo'] = 0\n    df.loc[df['FamilySize'] == 1, 'Solo'] = 1\n    \n    # Encode 'Embarked' with one-hot encoding\n    embarked_dummies = pd.get_dummies(df['Embarked'], prefix='Embarked')\n    df = pd.concat([df, embarked_dummies], axis=1)\n    \n    # One-hot encode 'Cabin' column\n    cabin_dummies = pd.get_dummies(df['Cabin'], prefix='Cabin')\n    df = pd.concat([df, cabin_dummies], axis=1)\n    \n    # Drop columns that are not needed anymore and also dropped columns that are not needed for model training\n    df.drop(['PassengerId','Name', 'Ticket', 'Fare', 'Embarked', 'Cabin'], axis=1, inplace=True)\n    \n    return df \n train_df = preprocess_data(train_df) \n train_df.info() \n test_df = preprocess_data(test_df) \n test_df.info() \n # List of all possible categories for the 'Cabin' feature from the training set\ncabin_categories = ['Cabin_A', 'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T', 'Cabin_Unknown']\n\nfor category in cabin_categories:\n    if category not in test_df.columns:\n        test_df[category] = 0 \n # Define the new order of the columns where Cabin_Unknown is to come after Cabin_T\ncolumn_order = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare_Log',\n                'FamilySize', 'Solo', 'Embarked_C', 'Embarked_Q', 'Embarked_S', 'Cabin_A',\n                'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T',\n                'Cabin_Unknown']\n\ntest_df = test_df[column_order] \n test_df.info() \n ## Building a Random Forest Model \n # separate features and target\nX = train_df.drop('Survived', axis=1) \ny = train_df['Survived']               \n from sklearn.model_selection import train_test_split\n\n# Split the data - 80% for training and 20% for validation\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42) \n from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_jobs=-1, random_state=42)\n\n# Train the model\nrf.fit(X_train, y_train) \n ## Evaluate Random Forest Model performance \n from sklearn.metrics import ConfusionMatrixDisplay, classification_report\n\n# Generate predictions on the validation set\ny_pred = rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.title('Confusion Matrix')\nplt.show() \n class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report) \n # Retrieve feature importances from the model\nfeature_importances = rf.feature_importances_\n\nimportances = pd.Series(feature_importances, index=X_train.columns)\n\n# Sort the feature importances in descending order\nsorted_importances = importances.sort_values(ascending=False)\n\n# Plot the feature importances\nsorted_importances.plot(kind='bar')\nplt.title('Feature Importances')\nplt.xlabel('Features')\nplt.ylabel('Importance')\nplt.show() \n ## Fine-tune Random Forest Model using GridSearchCV \n from sklearn.model_selection import GridSearchCV\n\nparam_grid = {\n    'n_estimators': [100, 150, 200],\n    'criterion':['gini','entropy'],\n    'max_depth': [10, 15, 20],\n    'min_samples_split': [2, 3, 4],\n    'min_samples_leaf': [2, 3, 4],\n    'bootstrap': [True, False]\n} \n rf_ft = RandomForestClassifier(random_state=42)\n\n# Initialize  GridSearchCV \ngrid_search = GridSearchCV(estimator=rf_ft, param_grid=param_grid, cv=5, n_jobs=-1, verbose=2)\n \n # Fit the grid search to the data\ngrid_search.fit(X_train, y_train) \n # Get the best parameters\nbest_params = grid_search.best_params_\nprint(f\"Best parameters: {best_params}\") \n # Train the best model\nbest_rf = grid_search.best_estimator_\n\n# Evaluate on the test data\nbest_rf_accuracy = best_rf.score(X_valid, y_valid)\nprint(f\"Test accuracy of the best model: {best_rf_accuracy}\") \n # Use the best model to make predictions on the validation set\ny_pred = best_rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.show() \n class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report) \n ## Submit on test dataset \n test_pred = best_rf.predict(test_df) \n test_df = pd.read_csv('/kaggle/input/titanic/test.csv')\nsubmission_rf = test_df[['PassengerId']].copy()\nsubmission_rf['Survived'] = test_pred \n submission_rf.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")",
    "code_source": "import seaborn as sns \nimport matplotlib.pyplot as plt\nfrom fastai.imports import *\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session \n # Load the training dataset\ntrain_df = pd.read_csv('/kaggle/input/titanic/train.csv')\n\n# Load the testing dataset\ntest_df = pd.read_csv('/kaggle/input/titanic/test.csv') \n train_df.head() \n train_df.describe() \n train_df.isnull().sum() \n fig, (ax1, ax2) = plt.subplots(1, 2)\nsns.barplot(x='Sex',y='Survived',data=train_df, ax = ax1)\nax1.set_title('Survival Rate by Gender')\nsns.countplot(x='Sex', data=train_df, ax=ax2)\nax2.set_title('Count of Gender')\nplt.tight_layout()\nplt.show() \n sns.countplot(x='Pclass', hue='Survived', data=train_df)\nplt.show() \n # Select only numeric columns for the correlation matrix\nnumeric_df = train_df.select_dtypes(include=[np.number])\n\ncorrelation_matrix = numeric_df.corr()\nsns.heatmap(correlation_matrix, annot=True, fmt=\".2f\", cmap='coolwarm')\nplt.show() \n def clean_data(df):\n    # Replace missing 'Age' values with the median age\n    df['Age'].fillna(df['Age'].median(), inplace=True)\n    \n    # Replace missing 'Fare' value with the median value\n    df['Fare'].fillna(df['Fare'].median(), inplace=True)\n    \n    # Extract the first letter of the 'Cabin' and treat missing values as 'Unknown'\n    df['Cabin'] = df['Cabin'].apply(lambda x: x[0] if pd.notnull(x) else 'Unknown')\n    \n    # Replace missing 'Embarked' values with the mode\n    embarked_mode = df['Embarked'].mode()[0]\n    df['Embarked'].fillna(embarked_mode, inplace=True)\n    \n    return df \n train_df = clean_data(train_df) \n train_df.isnull().sum() \n # Apply the same steps to the testing data\ntest_df = clean_data(test_df) \n def preprocess_data(df):\n    # Convert the 'Sex' column to numerical format (female: 1, male: 0)\n    df['Sex'] = df['Sex'].map({'female': 1, 'male': 0}).astype(int)\n    \n    # Apply log transformation to the 'Fare' column to reduce skewness\n    df['Fare_Log'] = np.log(df['Fare'] + 1)\n    \n    # Create 'FamilySize' feature\n    df['FamilySize'] = df['SibSp'] + df['Parch'] + 1\n    \n    # Create 'Solo' feature\n    df['Solo'] = 0\n    df.loc[df['FamilySize'] == 1, 'Solo'] = 1\n    \n    # Encode 'Embarked' with one-hot encoding\n    embarked_dummies = pd.get_dummies(df['Embarked'], prefix='Embarked')\n    df = pd.concat([df, embarked_dummies], axis=1)\n    \n    # One-hot encode 'Cabin' column\n    cabin_dummies = pd.get_dummies(df['Cabin'], prefix='Cabin')\n    df = pd.concat([df, cabin_dummies], axis=1)\n    \n    # Drop columns that are not needed anymore and also dropped columns that are not needed for model training\n    df.drop(['PassengerId','Name', 'Ticket', 'Fare', 'Embarked', 'Cabin'], axis=1, inplace=True)\n    \n    return df \n train_df = preprocess_data(train_df) \n train_df.info() \n test_df = preprocess_data(test_df) \n test_df.info() \n # List of all possible categories for the 'Cabin' feature from the training set\ncabin_categories = ['Cabin_A', 'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T', 'Cabin_Unknown']\n\nfor category in cabin_categories:\n    if category not in test_df.columns:\n        test_df[category] = 0 \n # Define the new order of the columns where Cabin_Unknown is to come after Cabin_T\ncolumn_order = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare_Log',\n                'FamilySize', 'Solo', 'Embarked_C', 'Embarked_Q', 'Embarked_S', 'Cabin_A',\n                'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T',\n                'Cabin_Unknown']\n\ntest_df = test_df[column_order] \n test_df.info() \n # separate features and target\nX = train_df.drop('Survived', axis=1) \ny = train_df['Survived']               \n from sklearn.model_selection import train_test_split\n\n# Split the data - 80% for training and 20% for validation\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42) \n from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_jobs=-1, random_state=42)\n\n# Train the model\nrf.fit(X_train, y_train) \n from sklearn.metrics import ConfusionMatrixDisplay, classification_report\n\n# Generate predictions on the validation set\ny_pred = rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.title('Confusion Matrix')\nplt.show() \n class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report) \n # Retrieve feature importances from the model\nfeature_importances = rf.feature_importances_\n\nimportances = pd.Series(feature_importances, index=X_train.columns)\n\n# Sort the feature importances in descending order\nsorted_importances = importances.sort_values(ascending=False)\n\n# Plot the feature importances\nsorted_importances.plot(kind='bar')\nplt.title('Feature Importances')\nplt.xlabel('Features')\nplt.ylabel('Importance')\nplt.show() \n from sklearn.model_selection import GridSearchCV\n\nparam_grid = {\n    'n_estimators': [100, 150, 200],\n    'criterion':['gini','entropy'],\n    'max_depth': [10, 15, 20],\n    'min_samples_split': [2, 3, 4],\n    'min_samples_leaf': [2, 3, 4],\n    'bootstrap': [True, False]\n} \n rf_ft = RandomForestClassifier(random_state=42)\n\n# Initialize  GridSearchCV \ngrid_search = GridSearchCV(estimator=rf_ft, param_grid=param_grid, cv=5, n_jobs=-1, verbose=2)\n \n # Fit the grid search to the data\ngrid_search.fit(X_train, y_train) \n # Get the best parameters\nbest_params = grid_search.best_params_\nprint(f\"Best parameters: {best_params}\") \n # Train the best model\nbest_rf = grid_search.best_estimator_\n\n# Evaluate on the test data\nbest_rf_accuracy = best_rf.score(X_valid, y_valid)\nprint(f\"Test accuracy of the best model: {best_rf_accuracy}\") \n # Use the best model to make predictions on the validation set\ny_pred = best_rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.show() \n class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report) \n test_pred = best_rf.predict(test_df) \n test_df = pd.read_csv('/kaggle/input/titanic/test.csv')\nsubmission_rf = test_df[['PassengerId']].copy()\nsubmission_rf['Survived'] = test_pred \n submission_rf.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")",
    "markdown_source": "## Initial Data Exploration \n ## Exploratory Data Analysis\nYou can observe that the survival rates for females was significantly higher than males even though there are more males than females on board the Titanic. \n Analyzing the Passenger class against the survival, you can see that class 1 has the highest survival rate as it is the only class that has the most survivals out of the 3 classes. Perhaps higher class passengers had higher prioritization compared to other classes, thus having quicker access to lifeboats during the evacuation process. \n ## Data Cleaning\nBased on the initial data exploration, there are missing values in the 'Age', 'Cabin' and 'Embarked' columns. Given the limited data, I would not want to drop any rows. For the 'Age' column, I will replace with the median value. For the 'Cabin' column, I will extract the first letter and treat it as a category on its own, for missing values I will put it under 'Unknown'. As for the 'Embarked' column, I will just replace with the mode.\n \n ## Data Preprocessing\nHere I create a function to preproces my data. <br>\nFor 'Sex' column, I convert it into a numerical format.<br>\nFor 'Fare' column, I normalized it using log to reduce skewness. <br>\nCreated a 'FamilySize' column that adds up 'SibSp' and 'Parch' column. <br>\nCreated a 'Solo' column if the passenger does not have any family members abroad the Titanic. <br>\nOne-hot encoded 'Embarked' and 'Cabin' column. <br>\nDropped columns not needed for model training. \n ## Building a Random Forest Model \n ## Evaluate Random Forest Model performance \n ## Fine-tune Random Forest Model using GridSearchCV \n ## Submit on test dataset",
    "n_cells": 45,
    "n_code_cells": 36,
    "n_markdown_cells": 9,
    "n_raw_cells": 0,
    "n_outputs": 36,
    "r_code_cells": 0.8,
    "r_markdown_cells": 0.2,
    "r_raw_cells": 0.0,
    "r_outputs": 1.0,
    "n_exceptions": 0,
    "r_exceptions": 0.0,
    "n_lines": 199,
    "n_lines_code": 180,
    "n_lines_markdown": 19,
    "lines_per_cell": [
        14,
        5,
        1,
        1,
        1,
        1,
        2,
        7,
        1,
        2,
        6,
        3,
        15,
        1,
        1,
        2,
        8,
        26,
        1,
        1,
        1,
        1,
        6,
        7,
        1,
        1,
        3,
        4,
        6,
        1,
        9,
        3,
        14,
        1,
        10,
        5,
        2,
        3,
        6,
        6,
        3,
        1,
        1,
        3,
        2
    ],
    "lines_per_code_cell": [
        14,
        5,
        1,
        1,
        1,
        7,
        2,
        6,
        15,
        1,
        1,
        2,
        26,
        1,
        1,
        1,
        1,
        6,
        7,
        1,
        3,
        4,
        6,
        9,
        3,
        14,
        10,
        5,
        2,
        3,
        6,
        6,
        3,
        1,
        3,
        2
    ],
    "lines_per_markdown_cell": [
        1,
        2,
        1,
        3,
        8,
        1,
        1,
        1,
        1
    ],
    "ave_lines_per_cell": 4.4222222222222225,
    "ave_lines_per_code_cell": 5.0,
    "ave_lines_per_markdown_cell": 2.111111111111111,
    "max_lines_per_cell": 26,
    "max_lines_per_code_cell": 26,
    "max_lines_per_markdown_cell": 8,
    "min_lines_per_cell": 1,
    "min_lines_per_code_cell": 1,
    "min_lines_per_markdown_cell": 1,
    "n_chars": 8393,
    "n_chars_code": 6761,
    "n_chars_markdown": 1632,
    "chars_per_cell": [
        678,
        169,
        27,
        15,
        19,
        23,
        184,
        244,
        336,
        67,
        236,
        456,
        599,
        31,
        23,
        72,
        477,
        1034,
        36,
        15,
        34,
        14,
        309,
        402,
        14,
        33,
        108,
        204,
        152,
        43,
        301,
        107,
        434,
        51,
        272,
        172,
        67,
        105,
        202,
        219,
        107,
        25,
        36,
        141,
        100
    ],
    "chars_per_code_cell": [
        678,
        169,
        15,
        19,
        23,
        244,
        67,
        236,
        599,
        31,
        23,
        72,
        1034,
        36,
        15,
        34,
        14,
        309,
        402,
        14,
        108,
        204,
        152,
        301,
        107,
        434,
        272,
        172,
        67,
        105,
        202,
        219,
        107,
        36,
        141,
        100
    ],
    "chars_per_markdown_cell": [
        27,
        184,
        336,
        456,
        477,
        33,
        43,
        51,
        25
    ],
    "ave_chars_per_line": 42.175879396984925,
    "ave_chars_per_cell": 186.51111111111112,
    "ave_chars_per_code_cell": 187.80555555555554,
    "ave_chars_per_markdown_cell": 181.33333333333334,
    "max_chars_per_cell": 1034,
    "max_chars_per_code_cell": 1034,
    "max_chars_per_markdownell": 477,
    "min_chars_per_cell": 14,
    "min_chars_per_code_cell": 14,
    "min_chars_per_markdown_cell": 25,
    "r_lines_code": 0.9045226130653267,
    "r_lines_markdown": 0.09547738693467336,
    "r_chars_markdown": 0.1944477540807816,
    "r_chars_code": 0.8055522459192184,
    "all_cells": [
        {
            "source": "import seaborn as sns \nimport matplotlib.pyplot as plt\nfrom fastai.imports import *\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session",
            "mc_idx": 0,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.024390243902439025,
                "Data_Transform": 0.04878048780487805,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.04878048780487805,
                "Debug": 0.0,
                "Data_Export": 0.0975609756097561,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 4
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "matplotlib": 1
                },
                "Data_Transform": {
                    ".join(": 1,
                    ".join": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "matplotlib": 1,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {
                    "write": 2,
                    "save": 2
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/kaggle/input/titanic/train.csv\n/kaggle/input/titanic/test.csv\n/kaggle/input/titanic/gender_submission.csv\n"
                    ]
                },
                "mc_idx": 0,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "# Load the training dataset\ntrain_df = pd.read_csv('/kaggle/input/titanic/train.csv')\n\n# Load the testing dataset\ntest_df = pd.read_csv('/kaggle/input/titanic/test.csv')",
            "mc_idx": 1,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.1,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4,
                    "dataset": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {
                    "testing": 1
                },
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    1,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 1,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 0
            }
        },
        {
            "source": "## Initial Data Exploration",
            "mc_idx": 2,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_df.head()",
            "mc_idx": 3,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                  Name     Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Thayer)  female  38.0      1   \n2                               Heikkinen, Miss. Laina  female  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                             Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  "
                    ]
                },
                "mc_idx": 3,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.describe()",
            "mc_idx": 4,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".describe(": 1,
                    "describe": 1,
                    ".describe": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    3,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "       PassengerId    Survived      Pclass         Age       SibSp  \\\ncount   891.000000  891.000000  891.000000  714.000000  891.000000   \nmean    446.000000    0.383838    2.308642   29.699118    0.523008   \nstd     257.353842    0.486592    0.836071   14.526497    1.102743   \nmin       1.000000    0.000000    1.000000    0.420000    0.000000   \n25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n75%     668.500000    1.000000    3.000000   38.000000    1.000000   \nmax     891.000000    1.000000    3.000000   80.000000    8.000000   \n\n            Parch        Fare  \ncount  891.000000  891.000000  \nmean     0.381594   32.204208  \nstd      0.806057   49.693429  \nmin      0.000000    0.000000  \n25%      0.000000    7.910400  \n50%      0.000000   14.454200  \n75%      0.000000   31.000000  \nmax      6.000000  512.329200  "
                    ]
                },
                "mc_idx": 4,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.isnull().sum()",
            "mc_idx": 5,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64"
                    ]
                },
                "mc_idx": 5,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "## Exploratory Data Analysis\nYou can observe that the survival rates for females was significantly higher than males even though there are more males than females on board the Titanic.",
            "mc_idx": 6,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "fig, (ax1, ax2) = plt.subplots(1, 2)\nsns.barplot(x='Sex',y='Survived',data=train_df, ax = ax1)\nax1.set_title('Survival Rate by Gender')\nsns.countplot(x='Sex', data=train_df, ax=ax2)\nax2.set_title('Count of Gender')\nplt.tight_layout()\nplt.show()",
            "mc_idx": 7,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c005_o000_image_0.png",
                    5,
                    0,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 7,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 0
            }
        },
        {
            "source": "Analyzing the Passenger class against the survival, you can see that class 1 has the highest survival rate as it is the only class that has the most survivals out of the 3 classes. Perhaps higher class passengers had higher prioritization compared to other classes, thus having quicker access to lifeboats during the evacuation process.",
            "mc_idx": 8,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "sns.countplot(x='Pclass', hue='Survived', data=train_df)\nplt.show()",
            "mc_idx": 9,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c006_o000_image_1.png",
                    6,
                    0,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 1 Axes>"
                    ]
                },
                "mc_idx": 9,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "# Select only numeric columns for the correlation matrix\nnumeric_df = train_df.select_dtypes(include=[np.number])\n\ncorrelation_matrix = numeric_df.corr()\nsns.heatmap(correlation_matrix, annot=True, fmt=\".2f\", cmap='coolwarm')\nplt.show()",
            "mc_idx": 10,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.14285714285714285,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.42857142857142855,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".corr": 2,
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1,
                    "dtypes": 1,
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c007_o000_image_2.png",
                    7,
                    0,
                    2
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 0
            }
        },
        {
            "source": "## Data Cleaning\nBased on the initial data exploration, there are missing values in the 'Age', 'Cabin' and 'Embarked' columns. Given the limited data, I would not want to drop any rows. For the 'Age' column, I will replace with the median value. For the 'Cabin' column, I will extract the first letter and treat it as a category on its own, for missing values I will put it under 'Unknown'. As for the 'Embarked' column, I will just replace with the mode.\n",
            "mc_idx": 11,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "def clean_data(df):\n    # Replace missing 'Age' values with the median age\n    df['Age'].fillna(df['Age'].median(), inplace=True)\n    \n    # Replace missing 'Fare' value with the median value\n    df['Fare'].fillna(df['Fare'].median(), inplace=True)\n    \n    # Extract the first letter of the 'Cabin' and treat missing values as 'Unknown'\n    df['Cabin'] = df['Cabin'].apply(lambda x: x[0] if pd.notnull(x) else 'Unknown')\n    \n    # Replace missing 'Embarked' values with the mode\n    embarked_mode = df['Embarked'].mode()[0]\n    df['Embarked'].fillna(embarked_mode, inplace=True)\n    \n    return df",
            "mc_idx": 12,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.1111111111111111,
                "Exploratory_Data_Analysis": 0.7777777777777778,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 1
                },
                "Exploratory_Data_Analysis": {
                    "missing values": 1,
                    ".median": 4,
                    ".notnull": 1,
                    ".mode": 1
                },
                "Data_Transform": {
                    ".fillna(": 3,
                    ".apply(": 1,
                    ".fillna": 3,
                    ".apply": 1,
                    ".mod": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    8,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 0
            }
        },
        {
            "source": "train_df = clean_data(train_df)",
            "mc_idx": 13,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    9,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 13,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.isnull().sum()",
            "mc_idx": 14,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId    0\nSurvived       0\nPclass         0\nName           0\nSex            0\nAge            0\nSibSp          0\nParch          0\nTicket         0\nFare           0\nCabin          0\nEmbarked       0\ndtype: int64"
                    ]
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "# Apply the same steps to the testing data\ntest_df = clean_data(test_df)",
            "mc_idx": 15,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Debug",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 1.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {
                    "testing": 1
                },
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 15,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "## Data Preprocessing\nHere I create a function to preproces my data. <br>\nFor 'Sex' column, I convert it into a numerical format.<br>\nFor 'Fare' column, I normalized it using log to reduce skewness. <br>\nCreated a 'FamilySize' column that adds up 'SibSp' and 'Parch' column. <br>\nCreated a 'Solo' column if the passenger does not have any family members abroad the Titanic. <br>\nOne-hot encoded 'Embarked' and 'Cabin' column. <br>\nDropped columns not needed for model training.",
            "mc_idx": 16,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "def preprocess_data(df):\n    # Convert the 'Sex' column to numerical format (female: 1, male: 0)\n    df['Sex'] = df['Sex'].map({'female': 1, 'male': 0}).astype(int)\n    \n    # Apply log transformation to the 'Fare' column to reduce skewness\n    df['Fare_Log'] = np.log(df['Fare'] + 1)\n    \n    # Create 'FamilySize' feature\n    df['FamilySize'] = df['SibSp'] + df['Parch'] + 1\n    \n    # Create 'Solo' feature\n    df['Solo'] = 0\n    df.loc[df['FamilySize'] == 1, 'Solo'] = 1\n    \n    # Encode 'Embarked' with one-hot encoding\n    embarked_dummies = pd.get_dummies(df['Embarked'], prefix='Embarked')\n    df = pd.concat([df, embarked_dummies], axis=1)\n    \n    # One-hot encode 'Cabin' column\n    cabin_dummies = pd.get_dummies(df['Cabin'], prefix='Cabin')\n    df = pd.concat([df, cabin_dummies], axis=1)\n    \n    # Drop columns that are not needed anymore and also dropped columns that are not needed for model training\n    df.drop(['PassengerId','Name', 'Ticket', 'Fare', 'Embarked', 'Cabin'], axis=1, inplace=True)\n    \n    return df",
            "mc_idx": 17,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.16666666666666666,
                "Exploratory_Data_Analysis": 0.4166666666666667,
                "Data_Transform": 1.0,
                "Model_Train": 0.16666666666666666,
                "Model_Evaluation": 0.08333333333333333,
                "Model_Interpretation": 0.08333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "preprocess_data": 2
                },
                "Exploratory_Data_Analysis": {
                    "columns": 2,
                    "size": 3
                },
                "Data_Transform": {
                    ".concat(": 2,
                    ".map(": 1,
                    "transform": 1,
                    ".astype(": 1,
                    ".drop": 1,
                    ".map": 1,
                    ".concat": 2,
                    ".get_dummies": 2,
                    ".log": 1
                },
                "Model_Train": {
                    "model training": 1,
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    12,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 0
            }
        },
        {
            "source": "train_df = preprocess_data(train_df)",
            "mc_idx": 18,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "preprocess_data": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 18,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.info()",
            "mc_idx": 19,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    14,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 21 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Survived       891 non-null    int64  \n 1   Pclass         891 non-null    int64  \n 2   Sex            891 non-null    int64  \n 3   Age            891 non-null    float64\n 4   SibSp          891 non-null    int64  \n 5   Parch          891 non-null    int64  \n 6   Fare_Log       891 non-null    float64\n 7   FamilySize     891 non-null    int64  \n 8   Solo           891 non-null    int64  \n 9   Embarked_C     891 non-null    bool   \n 10  Embarked_Q     891 non-null    bool   \n 11  Embarked_S     891 non-null    bool   \n 12  Cabin_A        891 non-null    bool   \n 13  Cabin_B        891 non-null    bool   \n 14  Cabin_C        891 non-null    bool   \n 15  Cabin_D        891 non-null    bool   \n 16  Cabin_E        891 non-null    bool   \n 17  Cabin_F        891 non-null    bool   \n 18  Cabin_G        891 non-null    bool   \n 19  Cabin_T        891 non-null    bool   \n 20  Cabin_Unknown  891 non-null    bool   \ndtypes: bool(12), float64(2), int64(7)\nmemory usage: 73.2 KB\n"
                    ]
                },
                "mc_idx": 19,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 0
            }
        },
        {
            "source": "test_df = preprocess_data(test_df)",
            "mc_idx": 20,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "preprocess_data": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    15,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 20,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.info()",
            "mc_idx": 21,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 19 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Pclass         418 non-null    int64  \n 1   Sex            418 non-null    int64  \n 2   Age            418 non-null    float64\n 3   SibSp          418 non-null    int64  \n 4   Parch          418 non-null    int64  \n 5   Fare_Log       418 non-null    float64\n 6   FamilySize     418 non-null    int64  \n 7   Solo           418 non-null    int64  \n 8   Embarked_C     418 non-null    bool   \n 9   Embarked_Q     418 non-null    bool   \n 10  Embarked_S     418 non-null    bool   \n 11  Cabin_A        418 non-null    bool   \n 12  Cabin_B        418 non-null    bool   \n 13  Cabin_C        418 non-null    bool   \n 14  Cabin_D        418 non-null    bool   \n 15  Cabin_E        418 non-null    bool   \n 16  Cabin_F        418 non-null    bool   \n 17  Cabin_G        418 non-null    bool   \n 18  Cabin_Unknown  418 non-null    bool   \ndtypes: bool(11), float64(2), int64(6)\nmemory usage: 30.7 KB\n"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "# List of all possible categories for the 'Cabin' feature from the training set\ncabin_categories = ['Cabin_A', 'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T', 'Cabin_Unknown']\n\nfor category in cabin_categories:\n    if category not in test_df.columns:\n        test_df[category] = 0",
            "mc_idx": 22,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    17,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 22,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "# Define the new order of the columns where Cabin_Unknown is to come after Cabin_T\ncolumn_order = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare_Log',\n                'FamilySize', 'Solo', 'Embarked_C', 'Embarked_Q', 'Embarked_S', 'Cabin_A',\n                'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T',\n                'Cabin_Unknown']\n\ntest_df = test_df[column_order]",
            "mc_idx": 23,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    18,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.info()",
            "mc_idx": 24,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    19,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 20 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Pclass         418 non-null    int64  \n 1   Sex            418 non-null    int64  \n 2   Age            418 non-null    float64\n 3   SibSp          418 non-null    int64  \n 4   Parch          418 non-null    int64  \n 5   Fare_Log       418 non-null    float64\n 6   FamilySize     418 non-null    int64  \n 7   Solo           418 non-null    int64  \n 8   Embarked_C     418 non-null    bool   \n 9   Embarked_Q     418 non-null    bool   \n 10  Embarked_S     418 non-null    bool   \n 11  Cabin_A        418 non-null    bool   \n 12  Cabin_B        418 non-null    bool   \n 13  Cabin_C        418 non-null    bool   \n 14  Cabin_D        418 non-null    bool   \n 15  Cabin_E        418 non-null    bool   \n 16  Cabin_F        418 non-null    bool   \n 17  Cabin_G        418 non-null    bool   \n 18  Cabin_T        418 non-null    int64  \n 19  Cabin_Unknown  418 non-null    bool   \ndtypes: bool(11), float64(2), int64(7)\nmemory usage: 34.0 KB\n"
                    ]
                },
                "mc_idx": 24,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "## Building a Random Forest Model",
            "mc_idx": 25,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# separate features and target\nX = train_df.drop('Survived', axis=1) \ny = train_df['Survived']              ",
            "mc_idx": 26,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 26,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.model_selection import train_test_split\n\n# Split the data - 80% for training and 20% for validation\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)",
            "mc_idx": 27,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.2,
                "Data_Transform": 0.1,
                "Model_Train": 0.4,
                "Model_Evaluation": 0.1,
                "Model_Interpretation": 0.1,
                "Hyperparameter_Tuning": 0.2,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 1,
                    ".mode": 1
                },
                "Data_Transform": {
                    ".mod": 1
                },
                "Model_Train": {
                    "train_test_split": 2,
                    "model": 1,
                    "model_selection": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {
                    "train_test_split": 2
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    21,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 27,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_jobs=-1, random_state=42)\n\n# Train the model\nrf.fit(X_train, y_train)",
            "mc_idx": 28,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.6,
                "Model_Evaluation": 0.1,
                "Model_Interpretation": 0.1,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    ".fit(": 1,
                    "model": 1,
                    "randomforestclassifier": 4
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "RandomForestClassifier(n_jobs=-1, random_state=42)"
                    ]
                },
                "mc_idx": 28,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "## Evaluate Random Forest Model performance",
            "mc_idx": 29,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "from sklearn.metrics import ConfusionMatrixDisplay, classification_report\n\n# Generate predictions on the validation set\ny_pred = rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.title('Confusion Matrix')\nplt.show()",
            "mc_idx": 30,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.2727272727272727,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10,
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "classification_report": 2,
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c023_o000_image_3.png",
                    23,
                    0,
                    3
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report)",
            "mc_idx": 31,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "classification_report": 2
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    24,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.81      0.82      0.82       105\n           1       0.74      0.73      0.73        74\n\n    accuracy                           0.78       179\n   macro avg       0.78      0.77      0.77       179\nweighted avg       0.78      0.78      0.78       179\n\n"
                    ]
                },
                "mc_idx": 31,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 0
            }
        },
        {
            "source": "# Retrieve feature importances from the model\nfeature_importances = rf.feature_importances_\n\nimportances = pd.Series(feature_importances, index=X_train.columns)\n\n# Sort the feature importances in descending order\nsorted_importances = importances.sort_values(ascending=False)\n\n# Plot the feature importances\nsorted_importances.plot(kind='bar')\nplt.title('Feature Importances')\nplt.xlabel('Features')\nplt.ylabel('Importance')\nplt.show()",
            "mc_idx": 32,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Interpretation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.14285714285714285,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.42857142857142855,
                "Data_Transform": 0.14285714285714285,
                "Model_Train": 0.14285714285714285,
                "Model_Evaluation": 0.14285714285714285,
                "Model_Interpretation": 1.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.14285714285714285,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".plot(": 2,
                    "columns": 1
                },
                "Data_Transform": {
                    ".sort_values": 1
                },
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "feature_importances_": 2,
                    "feature importance": 4,
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c025_o000_image_4.png",
                    25,
                    0,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 1 Axes>"
                    ]
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 0
            }
        },
        {
            "source": "## Fine-tune Random Forest Model using GridSearchCV",
            "mc_idx": 33,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "from sklearn.model_selection import GridSearchCV\n\nparam_grid = {\n    'n_estimators': [100, 150, 200],\n    'criterion':['gini','entropy'],\n    'max_depth': [10, 15, 20],\n    'min_samples_split': [2, 3, 4],\n    'min_samples_leaf': [2, 3, 4],\n    'bootstrap': [True, False]\n}",
            "mc_idx": 34,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.1,
                "Data_Transform": 0.1,
                "Model_Train": 0.2,
                "Model_Evaluation": 0.1,
                "Model_Interpretation": 0.1,
                "Hyperparameter_Tuning": 0.5,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mode": 1
                },
                "Data_Transform": {
                    ".mod": 1
                },
                "Model_Train": {
                    "model": 1,
                    "model_selection": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {
                    "gridsearchcv": 3,
                    "param_grid": 1,
                    "param": 1
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    26,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 34,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "rf_ft = RandomForestClassifier(random_state=42)\n\n# Initialize  GridSearchCV \ngrid_search = GridSearchCV(estimator=rf_ft, param_grid=param_grid, cv=5, n_jobs=-1, verbose=2)\n",
            "mc_idx": 35,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Hyperparameter_Tuning",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.2,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 1.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "randomforestclassifier": 2
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {
                    "gridsearchcv": 6,
                    "param_grid": 2,
                    "param": 2
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    27,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 35,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "# Fit the grid search to the data\ngrid_search.fit(X_train, y_train)",
            "mc_idx": 36,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    ".fit(": 1
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    28,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Fitting 5 folds for each of 324 candidates, totalling 1620 fits\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   1.1s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.3s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.2s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n",
                        "GridSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42), n_jobs=-1,\n             param_grid={'bootstrap': [True, False],\n                         'criterion': ['gini', 'entropy'],\n                         'max_depth': [10, 15, 20],\n                         'min_samples_leaf': [2, 3, 4],\n                         'min_samples_split': [2, 3, 4],\n                         'n_estimators': [100, 150, 200]},\n             verbose=2)"
                    ]
                },
                "mc_idx": 36,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 1
            }
        },
        {
            "source": "# Get the best parameters\nbest_params = grid_search.best_params_\nprint(f\"Best parameters: {best_params}\")",
            "mc_idx": 37,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Hyperparameter_Tuning",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 1.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {
                    "param": 5
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Best parameters: {'bootstrap': True, 'criterion': 'entropy', 'max_depth': 20, 'min_samples_leaf': 2, 'min_samples_split': 2, 'n_estimators': 100}\n"
                    ]
                },
                "mc_idx": 37,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "# Train the best model\nbest_rf = grid_search.best_estimator_\n\n# Evaluate on the test data\nbest_rf_accuracy = best_rf.score(X_valid, y_valid)\nprint(f\"Test accuracy of the best model: {best_rf_accuracy}\")",
            "mc_idx": 38,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.6666666666666666,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.6666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 2
                },
                "Model_Evaluation": {
                    "model": 2,
                    ".score(": 1
                },
                "Model_Interpretation": {
                    "model": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    30,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Test accuracy of the best model: 0.8100558659217877\n"
                    ]
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "# Use the best model to make predictions on the validation set\ny_pred = best_rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.show()",
            "mc_idx": 39,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.5,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c031_o000_image_5.png",
                    31,
                    0,
                    5
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 39,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report)",
            "mc_idx": 40,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "classification_report": 2
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    32,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.82      0.87      0.84       105\n           1       0.79      0.73      0.76        74\n\n    accuracy                           0.81       179\n   macro avg       0.81      0.80      0.80       179\nweighted avg       0.81      0.81      0.81       179\n\n"
                    ]
                },
                "mc_idx": 40,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 0
            }
        },
        {
            "source": "## Submit on test dataset",
            "mc_idx": 41,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "test_pred = best_rf.predict(test_df)",
            "mc_idx": 42,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "test_df = pd.read_csv('/kaggle/input/titanic/test.csv')\nsubmission_rf = test_df[['PassengerId']].copy()\nsubmission_rf['Survived'] = test_pred",
            "mc_idx": 43,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 2,
                    "pd.read_": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 43,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "submission_rf.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")",
            "mc_idx": 44,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "save": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Your submission was successfully saved!\n"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        }
    ],
    "code_cells": [
        {
            "source": "import seaborn as sns \nimport matplotlib.pyplot as plt\nfrom fastai.imports import *\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session",
            "mc_idx": 0,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.024390243902439025,
                "Data_Transform": 0.04878048780487805,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.04878048780487805,
                "Debug": 0.0,
                "Data_Export": 0.0975609756097561,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 4
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "matplotlib": 1
                },
                "Data_Transform": {
                    ".join(": 1,
                    ".join": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "matplotlib": 1,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {
                    "write": 2,
                    "save": 2
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/kaggle/input/titanic/train.csv\n/kaggle/input/titanic/test.csv\n/kaggle/input/titanic/gender_submission.csv\n"
                    ]
                },
                "mc_idx": 0,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "# Load the training dataset\ntrain_df = pd.read_csv('/kaggle/input/titanic/train.csv')\n\n# Load the testing dataset\ntest_df = pd.read_csv('/kaggle/input/titanic/test.csv')",
            "mc_idx": 1,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.1,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4,
                    "dataset": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {
                    "testing": 1
                },
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    1,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 1,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 3,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                  Name     Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Thayer)  female  38.0      1   \n2                               Heikkinen, Miss. Laina  female  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                             Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  "
                    ]
                },
                "mc_idx": 3,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.describe()",
            "mc_idx": 4,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".describe(": 1,
                    "describe": 1,
                    ".describe": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    3,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "       PassengerId    Survived      Pclass         Age       SibSp  \\\ncount   891.000000  891.000000  891.000000  714.000000  891.000000   \nmean    446.000000    0.383838    2.308642   29.699118    0.523008   \nstd     257.353842    0.486592    0.836071   14.526497    1.102743   \nmin       1.000000    0.000000    1.000000    0.420000    0.000000   \n25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n75%     668.500000    1.000000    3.000000   38.000000    1.000000   \nmax     891.000000    1.000000    3.000000   80.000000    8.000000   \n\n            Parch        Fare  \ncount  891.000000  891.000000  \nmean     0.381594   32.204208  \nstd      0.806057   49.693429  \nmin      0.000000    0.000000  \n25%      0.000000    7.910400  \n50%      0.000000   14.454200  \n75%      0.000000   31.000000  \nmax      6.000000  512.329200  "
                    ]
                },
                "mc_idx": 4,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.isnull().sum()",
            "mc_idx": 5,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64"
                    ]
                },
                "mc_idx": 5,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "fig, (ax1, ax2) = plt.subplots(1, 2)\nsns.barplot(x='Sex',y='Survived',data=train_df, ax = ax1)\nax1.set_title('Survival Rate by Gender')\nsns.countplot(x='Sex', data=train_df, ax=ax2)\nax2.set_title('Count of Gender')\nplt.tight_layout()\nplt.show()",
            "mc_idx": 7,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c005_o000_image_0.png",
                    5,
                    0,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 7,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 0
            }
        },
        {
            "source": "sns.countplot(x='Pclass', hue='Survived', data=train_df)\nplt.show()",
            "mc_idx": 9,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c006_o000_image_1.png",
                    6,
                    0,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 1 Axes>"
                    ]
                },
                "mc_idx": 9,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "# Select only numeric columns for the correlation matrix\nnumeric_df = train_df.select_dtypes(include=[np.number])\n\ncorrelation_matrix = numeric_df.corr()\nsns.heatmap(correlation_matrix, annot=True, fmt=\".2f\", cmap='coolwarm')\nplt.show()",
            "mc_idx": 10,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.14285714285714285,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.42857142857142855,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".corr": 2,
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1,
                    "dtypes": 1,
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c007_o000_image_2.png",
                    7,
                    0,
                    2
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 0
            }
        },
        {
            "source": "def clean_data(df):\n    # Replace missing 'Age' values with the median age\n    df['Age'].fillna(df['Age'].median(), inplace=True)\n    \n    # Replace missing 'Fare' value with the median value\n    df['Fare'].fillna(df['Fare'].median(), inplace=True)\n    \n    # Extract the first letter of the 'Cabin' and treat missing values as 'Unknown'\n    df['Cabin'] = df['Cabin'].apply(lambda x: x[0] if pd.notnull(x) else 'Unknown')\n    \n    # Replace missing 'Embarked' values with the mode\n    embarked_mode = df['Embarked'].mode()[0]\n    df['Embarked'].fillna(embarked_mode, inplace=True)\n    \n    return df",
            "mc_idx": 12,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.1111111111111111,
                "Exploratory_Data_Analysis": 0.7777777777777778,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 1
                },
                "Exploratory_Data_Analysis": {
                    "missing values": 1,
                    ".median": 4,
                    ".notnull": 1,
                    ".mode": 1
                },
                "Data_Transform": {
                    ".fillna(": 3,
                    ".apply(": 1,
                    ".fillna": 3,
                    ".apply": 1,
                    ".mod": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    8,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 0
            }
        },
        {
            "source": "train_df = clean_data(train_df)",
            "mc_idx": 13,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    9,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 13,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.isnull().sum()",
            "mc_idx": 14,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId    0\nSurvived       0\nPclass         0\nName           0\nSex            0\nAge            0\nSibSp          0\nParch          0\nTicket         0\nFare           0\nCabin          0\nEmbarked       0\ndtype: int64"
                    ]
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "# Apply the same steps to the testing data\ntest_df = clean_data(test_df)",
            "mc_idx": 15,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Debug",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 1.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {
                    "testing": 1
                },
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 15,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "def preprocess_data(df):\n    # Convert the 'Sex' column to numerical format (female: 1, male: 0)\n    df['Sex'] = df['Sex'].map({'female': 1, 'male': 0}).astype(int)\n    \n    # Apply log transformation to the 'Fare' column to reduce skewness\n    df['Fare_Log'] = np.log(df['Fare'] + 1)\n    \n    # Create 'FamilySize' feature\n    df['FamilySize'] = df['SibSp'] + df['Parch'] + 1\n    \n    # Create 'Solo' feature\n    df['Solo'] = 0\n    df.loc[df['FamilySize'] == 1, 'Solo'] = 1\n    \n    # Encode 'Embarked' with one-hot encoding\n    embarked_dummies = pd.get_dummies(df['Embarked'], prefix='Embarked')\n    df = pd.concat([df, embarked_dummies], axis=1)\n    \n    # One-hot encode 'Cabin' column\n    cabin_dummies = pd.get_dummies(df['Cabin'], prefix='Cabin')\n    df = pd.concat([df, cabin_dummies], axis=1)\n    \n    # Drop columns that are not needed anymore and also dropped columns that are not needed for model training\n    df.drop(['PassengerId','Name', 'Ticket', 'Fare', 'Embarked', 'Cabin'], axis=1, inplace=True)\n    \n    return df",
            "mc_idx": 17,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.16666666666666666,
                "Exploratory_Data_Analysis": 0.4166666666666667,
                "Data_Transform": 1.0,
                "Model_Train": 0.16666666666666666,
                "Model_Evaluation": 0.08333333333333333,
                "Model_Interpretation": 0.08333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "preprocess_data": 2
                },
                "Exploratory_Data_Analysis": {
                    "columns": 2,
                    "size": 3
                },
                "Data_Transform": {
                    ".concat(": 2,
                    ".map(": 1,
                    "transform": 1,
                    ".astype(": 1,
                    ".drop": 1,
                    ".map": 1,
                    ".concat": 2,
                    ".get_dummies": 2,
                    ".log": 1
                },
                "Model_Train": {
                    "model training": 1,
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    12,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 0
            }
        },
        {
            "source": "train_df = preprocess_data(train_df)",
            "mc_idx": 18,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "preprocess_data": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 18,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.info()",
            "mc_idx": 19,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    14,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 21 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Survived       891 non-null    int64  \n 1   Pclass         891 non-null    int64  \n 2   Sex            891 non-null    int64  \n 3   Age            891 non-null    float64\n 4   SibSp          891 non-null    int64  \n 5   Parch          891 non-null    int64  \n 6   Fare_Log       891 non-null    float64\n 7   FamilySize     891 non-null    int64  \n 8   Solo           891 non-null    int64  \n 9   Embarked_C     891 non-null    bool   \n 10  Embarked_Q     891 non-null    bool   \n 11  Embarked_S     891 non-null    bool   \n 12  Cabin_A        891 non-null    bool   \n 13  Cabin_B        891 non-null    bool   \n 14  Cabin_C        891 non-null    bool   \n 15  Cabin_D        891 non-null    bool   \n 16  Cabin_E        891 non-null    bool   \n 17  Cabin_F        891 non-null    bool   \n 18  Cabin_G        891 non-null    bool   \n 19  Cabin_T        891 non-null    bool   \n 20  Cabin_Unknown  891 non-null    bool   \ndtypes: bool(12), float64(2), int64(7)\nmemory usage: 73.2 KB\n"
                    ]
                },
                "mc_idx": 19,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 0
            }
        },
        {
            "source": "test_df = preprocess_data(test_df)",
            "mc_idx": 20,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "preprocess_data": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    15,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 20,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.info()",
            "mc_idx": 21,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 19 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Pclass         418 non-null    int64  \n 1   Sex            418 non-null    int64  \n 2   Age            418 non-null    float64\n 3   SibSp          418 non-null    int64  \n 4   Parch          418 non-null    int64  \n 5   Fare_Log       418 non-null    float64\n 6   FamilySize     418 non-null    int64  \n 7   Solo           418 non-null    int64  \n 8   Embarked_C     418 non-null    bool   \n 9   Embarked_Q     418 non-null    bool   \n 10  Embarked_S     418 non-null    bool   \n 11  Cabin_A        418 non-null    bool   \n 12  Cabin_B        418 non-null    bool   \n 13  Cabin_C        418 non-null    bool   \n 14  Cabin_D        418 non-null    bool   \n 15  Cabin_E        418 non-null    bool   \n 16  Cabin_F        418 non-null    bool   \n 17  Cabin_G        418 non-null    bool   \n 18  Cabin_Unknown  418 non-null    bool   \ndtypes: bool(11), float64(2), int64(6)\nmemory usage: 30.7 KB\n"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "# List of all possible categories for the 'Cabin' feature from the training set\ncabin_categories = ['Cabin_A', 'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T', 'Cabin_Unknown']\n\nfor category in cabin_categories:\n    if category not in test_df.columns:\n        test_df[category] = 0",
            "mc_idx": 22,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    17,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 22,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "# Define the new order of the columns where Cabin_Unknown is to come after Cabin_T\ncolumn_order = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare_Log',\n                'FamilySize', 'Solo', 'Embarked_C', 'Embarked_Q', 'Embarked_S', 'Cabin_A',\n                'Cabin_B', 'Cabin_C', 'Cabin_D', 'Cabin_E', 'Cabin_F', 'Cabin_G', 'Cabin_T',\n                'Cabin_Unknown']\n\ntest_df = test_df[column_order]",
            "mc_idx": 23,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    18,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.info()",
            "mc_idx": 24,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    19,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 20 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Pclass         418 non-null    int64  \n 1   Sex            418 non-null    int64  \n 2   Age            418 non-null    float64\n 3   SibSp          418 non-null    int64  \n 4   Parch          418 non-null    int64  \n 5   Fare_Log       418 non-null    float64\n 6   FamilySize     418 non-null    int64  \n 7   Solo           418 non-null    int64  \n 8   Embarked_C     418 non-null    bool   \n 9   Embarked_Q     418 non-null    bool   \n 10  Embarked_S     418 non-null    bool   \n 11  Cabin_A        418 non-null    bool   \n 12  Cabin_B        418 non-null    bool   \n 13  Cabin_C        418 non-null    bool   \n 14  Cabin_D        418 non-null    bool   \n 15  Cabin_E        418 non-null    bool   \n 16  Cabin_F        418 non-null    bool   \n 17  Cabin_G        418 non-null    bool   \n 18  Cabin_T        418 non-null    int64  \n 19  Cabin_Unknown  418 non-null    bool   \ndtypes: bool(11), float64(2), int64(7)\nmemory usage: 34.0 KB\n"
                    ]
                },
                "mc_idx": 24,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "# separate features and target\nX = train_df.drop('Survived', axis=1) \ny = train_df['Survived']              ",
            "mc_idx": 26,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 26,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.model_selection import train_test_split\n\n# Split the data - 80% for training and 20% for validation\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)",
            "mc_idx": 27,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.2,
                "Data_Transform": 0.1,
                "Model_Train": 0.4,
                "Model_Evaluation": 0.1,
                "Model_Interpretation": 0.1,
                "Hyperparameter_Tuning": 0.2,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 1,
                    ".mode": 1
                },
                "Data_Transform": {
                    ".mod": 1
                },
                "Model_Train": {
                    "train_test_split": 2,
                    "model": 1,
                    "model_selection": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {
                    "train_test_split": 2
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    21,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 27,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_jobs=-1, random_state=42)\n\n# Train the model\nrf.fit(X_train, y_train)",
            "mc_idx": 28,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.6,
                "Model_Evaluation": 0.1,
                "Model_Interpretation": 0.1,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    ".fit(": 1,
                    "model": 1,
                    "randomforestclassifier": 4
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "RandomForestClassifier(n_jobs=-1, random_state=42)"
                    ]
                },
                "mc_idx": 28,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.metrics import ConfusionMatrixDisplay, classification_report\n\n# Generate predictions on the validation set\ny_pred = rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.title('Confusion Matrix')\nplt.show()",
            "mc_idx": 30,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.2727272727272727,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10,
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "classification_report": 2,
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c023_o000_image_3.png",
                    23,
                    0,
                    3
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report)",
            "mc_idx": 31,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "classification_report": 2
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    24,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.81      0.82      0.82       105\n           1       0.74      0.73      0.73        74\n\n    accuracy                           0.78       179\n   macro avg       0.78      0.77      0.77       179\nweighted avg       0.78      0.78      0.78       179\n\n"
                    ]
                },
                "mc_idx": 31,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 0
            }
        },
        {
            "source": "# Retrieve feature importances from the model\nfeature_importances = rf.feature_importances_\n\nimportances = pd.Series(feature_importances, index=X_train.columns)\n\n# Sort the feature importances in descending order\nsorted_importances = importances.sort_values(ascending=False)\n\n# Plot the feature importances\nsorted_importances.plot(kind='bar')\nplt.title('Feature Importances')\nplt.xlabel('Features')\nplt.ylabel('Importance')\nplt.show()",
            "mc_idx": 32,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Interpretation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.14285714285714285,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.42857142857142855,
                "Data_Transform": 0.14285714285714285,
                "Model_Train": 0.14285714285714285,
                "Model_Evaluation": 0.14285714285714285,
                "Model_Interpretation": 1.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.14285714285714285,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".plot(": 2,
                    "columns": 1
                },
                "Data_Transform": {
                    ".sort_values": 1
                },
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "feature_importances_": 2,
                    "feature importance": 4,
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c025_o000_image_4.png",
                    25,
                    0,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 1 Axes>"
                    ]
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.model_selection import GridSearchCV\n\nparam_grid = {\n    'n_estimators': [100, 150, 200],\n    'criterion':['gini','entropy'],\n    'max_depth': [10, 15, 20],\n    'min_samples_split': [2, 3, 4],\n    'min_samples_leaf': [2, 3, 4],\n    'bootstrap': [True, False]\n}",
            "mc_idx": 34,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.1,
                "Data_Transform": 0.1,
                "Model_Train": 0.2,
                "Model_Evaluation": 0.1,
                "Model_Interpretation": 0.1,
                "Hyperparameter_Tuning": 0.5,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mode": 1
                },
                "Data_Transform": {
                    ".mod": 1
                },
                "Model_Train": {
                    "model": 1,
                    "model_selection": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {
                    "gridsearchcv": 3,
                    "param_grid": 1,
                    "param": 1
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    26,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 34,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "rf_ft = RandomForestClassifier(random_state=42)\n\n# Initialize  GridSearchCV \ngrid_search = GridSearchCV(estimator=rf_ft, param_grid=param_grid, cv=5, n_jobs=-1, verbose=2)\n",
            "mc_idx": 35,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Hyperparameter_Tuning",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.2,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 1.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "randomforestclassifier": 2
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {
                    "gridsearchcv": 6,
                    "param_grid": 2,
                    "param": 2
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    27,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 35,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "# Fit the grid search to the data\ngrid_search.fit(X_train, y_train)",
            "mc_idx": 36,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    ".fit(": 1
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    28,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Fitting 5 folds for each of 324 candidates, totalling 1620 fits\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   1.1s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.1s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.0s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   1.3s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   1.2s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=True, criterion=entropy, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.9s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=15, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.6s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.8s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.4s\n[CV] END bootstrap=False, criterion=gini, max_depth=20, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.4s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=10, min_samples_leaf=4, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=2, min_samples_split=4, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=3, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=3, min_samples_split=4, n_estimators=200; total time=   0.6s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   0.3s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=150; total time=   0.5s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=   0.7s\n[CV] END bootstrap=False, criterion=entropy, max_depth=15, min_samples_leaf=4, min_samples_split=3, n_estimators=100; total time=   0.4s\n",
                        "GridSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42), n_jobs=-1,\n             param_grid={'bootstrap': [True, False],\n                         'criterion': ['gini', 'entropy'],\n                         'max_depth': [10, 15, 20],\n                         'min_samples_leaf': [2, 3, 4],\n                         'min_samples_split': [2, 3, 4],\n                         'n_estimators': [100, 150, 200]},\n             verbose=2)"
                    ]
                },
                "mc_idx": 36,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 1
            }
        },
        {
            "source": "# Get the best parameters\nbest_params = grid_search.best_params_\nprint(f\"Best parameters: {best_params}\")",
            "mc_idx": 37,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Hyperparameter_Tuning",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 1.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {
                    "param": 5
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Best parameters: {'bootstrap': True, 'criterion': 'entropy', 'max_depth': 20, 'min_samples_leaf': 2, 'min_samples_split': 2, 'n_estimators': 100}\n"
                    ]
                },
                "mc_idx": 37,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "# Train the best model\nbest_rf = grid_search.best_estimator_\n\n# Evaluate on the test data\nbest_rf_accuracy = best_rf.score(X_valid, y_valid)\nprint(f\"Test accuracy of the best model: {best_rf_accuracy}\")",
            "mc_idx": 38,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.6666666666666666,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.6666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 2
                },
                "Model_Evaluation": {
                    "model": 2,
                    ".score(": 1
                },
                "Model_Interpretation": {
                    "model": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    30,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Test accuracy of the best model: 0.8100558659217877\n"
                    ]
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "# Use the best model to make predictions on the validation set\ny_pred = best_rf.predict(X_valid)\n\n# Generate the confusion matrix display\nConfusionMatrixDisplay.from_predictions(y_valid, y_pred, cmap='Blues')\nplt.show()",
            "mc_idx": 39,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.5,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0012_c031_o000_image_5.png",
                    31,
                    0,
                    5
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 39,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "class_report = classification_report(y_valid, y_pred)\nprint(\"\\nClassification Report:\")\nprint(class_report)",
            "mc_idx": 40,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "classification_report": 2
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    32,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.82      0.87      0.84       105\n           1       0.79      0.73      0.76        74\n\n    accuracy                           0.81       179\n   macro avg       0.81      0.80      0.80       179\nweighted avg       0.81      0.81      0.81       179\n\n"
                    ]
                },
                "mc_idx": 40,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 0
            }
        },
        {
            "source": "test_pred = best_rf.predict(test_df)",
            "mc_idx": 42,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "test_df = pd.read_csv('/kaggle/input/titanic/test.csv')\nsubmission_rf = test_df[['PassengerId']].copy()\nsubmission_rf['Survived'] = test_pred",
            "mc_idx": 43,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 2,
                    "pd.read_": 2
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 43,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "submission_rf.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")",
            "mc_idx": 44,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "save": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Your submission was successfully saved!\n"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        }
    ],
    "markdown_cells": [
        {
            "source": "## Initial Data Exploration",
            "mc_idx": 2,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Exploratory Data Analysis\nYou can observe that the survival rates for females was significantly higher than males even though there are more males than females on board the Titanic.",
            "mc_idx": 6,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Analyzing the Passenger class against the survival, you can see that class 1 has the highest survival rate as it is the only class that has the most survivals out of the 3 classes. Perhaps higher class passengers had higher prioritization compared to other classes, thus having quicker access to lifeboats during the evacuation process.",
            "mc_idx": 8,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Data Cleaning\nBased on the initial data exploration, there are missing values in the 'Age', 'Cabin' and 'Embarked' columns. Given the limited data, I would not want to drop any rows. For the 'Age' column, I will replace with the median value. For the 'Cabin' column, I will extract the first letter and treat it as a category on its own, for missing values I will put it under 'Unknown'. As for the 'Embarked' column, I will just replace with the mode.\n",
            "mc_idx": 11,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Data Preprocessing\nHere I create a function to preproces my data. <br>\nFor 'Sex' column, I convert it into a numerical format.<br>\nFor 'Fare' column, I normalized it using log to reduce skewness. <br>\nCreated a 'FamilySize' column that adds up 'SibSp' and 'Parch' column. <br>\nCreated a 'Solo' column if the passenger does not have any family members abroad the Titanic. <br>\nOne-hot encoded 'Embarked' and 'Cabin' column. <br>\nDropped columns not needed for model training.",
            "mc_idx": 16,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Building a Random Forest Model",
            "mc_idx": 25,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Evaluate Random Forest Model performance",
            "mc_idx": 29,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Fine-tune Random Forest Model using GridSearchCV",
            "mc_idx": 33,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## Submit on test dataset",
            "mc_idx": 41,
            "nb_idx": 12,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        }
    ],
    "sim_matrix": [
        0.9572052955627441,
        0.9286428093910217,
        0.9456838369369507,
        0.9533755779266357,
        0.909393310546875,
        0.939283013343811,
        0.954647958278656,
        0.9683343172073364,
        0.9638075232505798,
        0.9309186935424805,
        0.9541324377059937,
        0.9831835627555847,
        0.9999999403953552,
        0.9848650097846985,
        0.9768351316452026,
        0.9452745318412781,
        0.9606611132621765,
        0.939283013343811,
        0.9502535462379456,
        0.9324116706848145,
        0.9571484923362732,
        0.9683343172073364,
        0.958896815776825,
        0.9433329701423645,
        0.922346830368042,
        0.9570875763893127,
        0.9701293110847473,
        0.9585272073745728,
        0.9718921780586243,
        0.8899905681610107,
        0.9691644310951233,
        0.9458187222480774,
        0.9395381212234497,
        0.934246301651001,
        0.9595465660095215,
        0.9359407424926758,
        0.9595465660095215,
        0.964275598526001,
        0.9578603506088257,
        0.8901863098144531,
        0.907941997051239,
        0.9573093056678772,
        0.905887246131897,
        0.9571484923362732,
        0.9490846395492554,
        0.9433329701423645,
        0.9486076831817627,
        0.9395381212234497,
        0.9573705196380615,
        0.974845290184021,
        0.9478580355644226,
        0.9359407424926758,
        0.9452745318412781,
        0.9712713956832886,
        0.9385478496551514,
        0.9614021182060242,
        0.9191174507141113,
        0.9648164510726929,
        0.9579249620437622,
        0.9641338586807251,
        0.9578275084495544,
        0.9570423364639282,
        0.9832494854927063,
        0.9303016066551208,
        0.9374353885650635,
        0.9580957889556885,
        0.9153421521186829,
        0.7454084157943726,
        0.9667625427246094,
        0.9377248287200928,
        0.9608302116394043,
        0.9418429136276245,
        0.9624093174934387,
        0.9827301502227783,
        0.9588719606399536,
        0.9572311043739319,
        0.9256091117858887,
        0.9546213150024414,
        0.9409056901931763,
        0.9810127019882202,
        0.9478585124015808,
        0.9565606713294983,
        0.954002320766449,
        0.9320189952850342,
        0.9383801221847534,
        0.973723292350769,
        0.953445315361023,
        0.958896815776825,
        0.9441947340965271,
        0.9349811673164368,
        0.964275598526001,
        0.9324116706848145,
        0.934246301651001,
        0.9494180083274841,
        0.9300675392150879,
        0.905015766620636,
        0.9149637222290039,
        0.9118956923484802
    ],
    "cell_sim_matrix": [],
    "nb_order": [],
    "summary_data_VA": null
}
{
    "nb_idx": 29,
    "nb_name": "d0029",
    "filename": "d27.ipynb",
    "filepath": "data/data_Kaggle/raw/d27.ipynb",
    "source": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\n\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import StandardScaler\n\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.impute import SimpleImputer\nfrom sklearn import metrics\n\nfrom sklearn.metrics import mean_absolute_error\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, cross_validate, StratifiedKFold, RepeatedStratifiedKFold, RepeatedKFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n%matplotlib inline\n!pip install optuna\nimport optuna\n\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n!pip3 install catboost\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport time \n df_train = pd.read_csv('/kaggle/input/titanic/train.csv')\ndf_train.columns = df_train.columns.str.lower().str.replace(' ', '_')\nprint(df_train.columns)\ntrain_ids=df_train['passengerid'].values\nprint(df_train.shape)\nprint(df_train.info())\n\ndf_test = pd.read_csv('/kaggle/input/titanic/test.csv')\ndf_test.columns = df_test.columns.str.lower().str.replace(' ', '_')\ntest_ids=df_test['passengerid'].values\nprint(df_test.shape)\nprint(df_test.info())\n\ndf_train.sample(30) \n def null_count_with_percent(df):\n  total = df.isnull().sum().sort_values(ascending=False)\n  percent = (df.isnull().sum()/df.isnull().count()).sort_values(ascending=False)\n  missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n  return missing_data \n print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test)) \n **i'll drop capin because the null values are more than 40%** \n df_train=df_train.drop(columns='cabin')\ndf_test=df_test.drop(columns='cabin') \n **handle age null values** \n ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_train['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['age']=X\n\nImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['age']=X \n **handle embarked null values on train data** \n print(df_train.embarked.value_counts()) \n ImputedModule = SimpleImputer(strategy='constant', fill_value='messing').set_output(transform=\"pandas\")\nX=df_train['embarked'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['embarked']=X \n **handle fare null on test data** \n print(df_test.fare.value_counts()) \n ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['fare'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['fare']=X \n print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test)) \n **no more null data !!** \n # **EDA** \n target='survived' \n class_counts = df_train[target].value_counts()\nclass_proportions = class_counts / df_train.shape[0]\nclass_proportions = class_proportions.values.tolist()\nclass_proportions_str = [f'{prop:.2%}' for prop in class_proportions]\n\n# Set the color palette\ncolors = sns.color_palette('pastel')[0:len(class_counts)]\n\n# Plot the distribution of the target variable\nplt.figure(figsize=(8, 4))\nsns.countplot(x=target, data=df_train, palette=colors)\nplt.title('Distribution of Target Variable', fontsize=16)\nplt.xlabel(target, fontsize=14)\nplt.ylabel('Count', fontsize=14)\nplt.ylim([0, len(df_train)])\nfor i, count in enumerate(class_counts):\n    plt.text(i, count + 50, class_proportions_str[i], ha='center', fontsize=14, color='black')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nsns.despine()\nplt.show() \n def survived_bar_plot(feature):\n    plt.figure(figsize = (6,4))\n    sns.barplot(data = df_train , x = feature , y = target).set_title(f\"{feature}  \")\n    plt.show()\n    \ndef survived_table(feature):\n    return df_train[[feature, target]].groupby([feature], as_index=False).mean().sort_values(by=target, ascending=False).style.background_gradient(low=0.75,high=1)\n\ndef survived_hist_plot(feature):\n    plt.figure(figsize = (10,10))\n    sns.histplot(data = df_train , x = feature , hue = target,binwidth=5,palette = sns.color_palette([\"yellow\" , \"green\"]) ,multiple = \"stack\" ).set_title(f\"{feature} Vs \")\n    plt.show() \n df_train.columns \n survived_bar_plot('sex') \n survived_table('sex') \n survived_bar_plot('pclass') \n survived_table('pclass') \n survived_bar_plot('embarked') \n survived_table('embarked') \n survived_bar_plot('sibsp') \n survived_table('sibsp') \n survived_bar_plot('parch') \n survived_table('parch') \n survived_hist_plot('fare') \n survived_hist_plot('age') \n **age vs pclass vs target** \n plot , ax = plt.subplots(1 , 3 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==1] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==2] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==3] , x = \"age\" , hue = target,binwidth=5,ax = ax[2],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"3-Pclass\")\nplt.show() \n plot , ax = plt.subplots(1 ,2 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='male'] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-male\")\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='female'] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-female\")\nplt.show() \n # **Feature Engineering** \n df_train['family_size'] = df_train['sibsp'] + df_train['parch'] + 1\ndf_test['family_size'] = df_test['sibsp'] + df_test['parch'] + 1 \n survived_table('family_size') \n df_train['is_alone'] = df_train['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_train['family_small'] = df_train['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_train['family_med'] = df_train['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_train['family_big'] = df_train['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\n\ndf_test['is_alone'] = df_test['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_test['family_small'] = df_test['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_test['family_med'] = df_test['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_test['family_big'] = df_test['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\ndf_train=df_train.drop(columns=['family_size','parch','sibsp'])\ndf_test=df_test.drop(columns=['family_size','parch','sibsp'])\n\n \n df_train['title']=df_train.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_train['title'].value_counts() < 5)\ndf_train['title'] = df_train['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\ndf_test['title']=df_test.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_test['title'].value_counts() < 5)\ndf_test['title'] = df_test['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\n\nsurvived_table('title') \n df_train['is_mrs'] = df_train['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_train['is_miss'] = df_train['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_train['is_master'] = df_train['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\n\ndf_test['is_mrs'] = df_test['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_test['is_miss'] = df_test['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_test['is_master'] = df_test['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\ndf_train=df_train.drop(columns=['title','name'])\ndf_test=df_test.drop(columns=['title','name'])\n\n\n \n df_train=df_train.drop(columns=['ticket'])\ndf_test=df_test.drop(columns=['ticket'])\n\ndf_train \n df_train['fare_band'] = pd.qcut(df_train['fare'], 4)\ndf_train[['fare_band', target]].groupby(['fare_band'], as_index=False).mean().sort_values(by='fare_band', ascending=False) \n df_train.loc[ df_train['fare'] <= 7.91, 'fare'] = 0\ndf_train.loc[(df_train['fare'] > 7.91) & (df_train['fare'] <= 14.454), 'fare'] = 1\ndf_train.loc[(df_train['fare'] > 14.454) & (df_train['fare'] <= 31), 'fare']   = 2\ndf_train.loc[ df_train['fare'] > 31, 'fare'] = 3\ndf_train['fare'] = df_train['fare'].astype(int)\n\n\n\ndf_test.loc[ df_test['fare'] <= 7.91, 'fare'] = 0\ndf_test.loc[(df_test['fare'] > 7.91) & (df_test['fare'] <= 14.454), 'fare'] = 1\ndf_test.loc[(df_test['fare'] > 14.454) & (df_test['fare'] <= 31), 'fare']   = 2\ndf_test.loc[ df_test['fare'] > 31, 'fare'] = 3\ndf_test['fare'] = df_test['fare'].astype(int)\n\n\ndf_train=df_train.drop(columns=['fare_band'])\ndf_train \n df_train['age_band'] = pd.cut(df_train['age'], 5)\ndf_train[['age_band', target]].groupby(['age_band'], as_index=False).mean().sort_values(by='age_band', ascending=True) \n df_train.loc[ df_train['age'] <= 16, 'age'] = 0\ndf_train.loc[(df_train['age'] > 16) & (df_train['age'] <= 32), 'age'] = 1\ndf_train.loc[(df_train['age'] > 32) & (df_train['age'] <= 48), 'age'] = 2\ndf_train.loc[(df_train['age'] > 48) & (df_train['age'] <= 64), 'age'] = 3\ndf_train.loc[ df_train['age'] > 64, 'age']\n\ndf_test.loc[ df_test['age'] <= 16, 'age'] = 0\ndf_test.loc[(df_test['age'] > 16) & (df_test['age'] <= 32), 'age'] = 1\ndf_test.loc[(df_test['age'] > 32) & (df_test['age'] <= 48), 'age'] = 2\ndf_test.loc[(df_test['age'] > 48) & (df_test['age'] <= 64), 'age'] = 3\ndf_test.loc[ df_test['age'] > 64, 'age']\n\ndf_train=df_train.drop(columns=['age_band']) \n df_train.to_csv('train_backup.csv')\ndf_test.to_csv('test_backup.csv') \n **One Hot Encoding** \n cat_feat=['sex','embarked','pclass']\n\ncats_encoded=[]\n\nfor cat in cat_feat:\n  df_train[cat]= df_train[cat].astype('category')\n  df_train[cat+'_encoded'] = df_train[cat].cat.codes\n    \n  df_test[cat]= df_test[cat].astype('category')\n  df_test[cat+'_encoded'] = df_test[cat].cat.codes\n    \n  cats_encoded.append(cat+\"_encoded\")\n\n\none_hot_encoded_data = pd.get_dummies(df_train[cats_encoded], columns =cats_encoded)\ndf_train[one_hot_encoded_data.columns]=one_hot_encoded_data.values\ndf_train=df_train.drop(columns=cat_feat)\ndf_train=df_train.drop(columns=cats_encoded)\n\none_hot_encoded_data_test = pd.get_dummies(df_test[cats_encoded], columns =cats_encoded)\ndf_test[one_hot_encoded_data_test.columns]=one_hot_encoded_data_test.values\ndf_test=df_test.drop(columns=cat_feat)\ndf_test=df_test.drop(columns=cats_encoded)\n\n\n\nprint(df_train.shape)\nprint(df_train.columns)\n\nprint(df_test.shape)\nprint(df_test.columns)\n \n df_train.embarked_encoded_3.value_counts() \n **embarked_encoded_3 in train data is the null values i handled ,ill drop it** \n df_train=df_train.drop(columns='embarked_encoded_3')\n\nprint(df_train.shape)\n\nprint(df_test.shape)\n \n df_train \n **Correlation between data and target** \n plt.figure(figsize=(15,13))\ncor = df_train.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.CMRmap_r)\nplt.show() \n # selected \ndf_tra=df_train.copy() \n **VERY GOOD !! I have good correlations with the target** \n # **Split data to train and test** \n X=df_train[df_train.columns.difference(['passengerid',target])].values\nprint(X.shape)\nY=df_train[target].values\nprint(Y.shape) \n # Modelling \n from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay,roc_auc_score\n\nparam ={'lambda': 1.2475525176000515,\n        'learning_rate': 0.05,\n        \"objective\": \"binary:logistic\",\n        'colsample_bytree': 0.9,\n        'subsample': 1.0, \n        'max_depth': 2,\n        'min_child_weight': 3,\n        \"eval_metric\": \"auc\"\n        \n       }\n\n\n\n\ndef xgboost_bin_classif(X, y, test_size=0.2, random_state=42, num_round=100):\n\n    # Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n\n    # Create DMatrix for XGBoost\n    dtrain = xgb.DMatrix(X_train, label=y_train)\n    dtest = xgb.DMatrix(X_test, label=y_test)\n\n    watchlist = [(dtrain, 'train'), (dtest, 'eval')]\n\n\n    num_round = 5000\n    evals_result = {}\n    bst = xgb.train(params=param, dtrain=dtrain, num_boost_round=num_round,\n                    evals_result=evals_result,\n                    maximize=False, obj=None,\n                    evals=watchlist, verbose_eval=200)\n    y_pred = bst.predict(dtest)\n    test_auc = roc_auc_score(y_test, y_pred)\n    print(f\"auc: {test_auc}\")\n    percentiles = np.arange(1, 100, 1)\n    base_rate = (y == 1).sum() / y.shape[0]\n    \n    \n    results = []\n    for i,percentile in enumerate(percentiles):\n        cutoff = np.percentile(y_pred, percentile)\n        predictions = np.where(y_pred >= cutoff, 1, 0)\n        cm = confusion_matrix(y_test, predictions, labels=[0,1]).copy()\n\n        tp = cm[0,0]\n        precision = tp / cm[:,0].sum()\n        recall = tp / cm[0,:].sum()\n        accuracy = cm.diagonal().sum() / cm.sum()\n        f1score = 2 * (precision * recall) / (precision + recall)\n        lift = precision/base_rate\n\n        res = dict(\n            percentile=percentile,\n            cutoff = cutoff,\n            precision=precision,\n            recall=recall,\n            lift=lift,\n            f1score=f1score,\n            accuracy=accuracy,\n        )\n\n        results.append(res)\n    \n    results = pd.DataFrame(results)\n    cut_off=0.415098\n    predictions = np.where(y_pred > cut_off, 1, 0)\n    cm = confusion_matrix(y_test, predictions, labels=[1,0])\n\n    # df_result = pd.DataFrame({\n    # 'target': y_test,\n    # 'predected': y_pred\n    #  })\n\n\n\n\n    return bst,test_auc,results,cm  \n bst,auc,results,cm=xgboost_bin_classif(X,Y) \n disp = ConfusionMatrixDisplay(confusion_matrix=cm,\n                              display_labels=[1,0])\ndisp.plot() \n x = results[results.percentile.isin( np.arange(0, 100, 5) )]\nx.set_index(\"percentile\") \n submission_test =bst.predict(xgb.DMatrix(df_test[df_test.columns.difference(['passengerid'])].values))\n \n cut_off=0.415098\npredictions = np.where(submission_test > cut_off, 1, 0)\n \n pd.Series(predictions).value_counts() \n # Submission \n print(predictions.shape)\n\nsub=pd.read_csv('/kaggle/input/titanic/gender_submission.csv')\n\n# Add predictions\nsub['Survived']=predictions\n\nsub.to_csv('submission.csv', index=False)",
    "code_source": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\n\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import StandardScaler\n\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.impute import SimpleImputer\nfrom sklearn import metrics\n\nfrom sklearn.metrics import mean_absolute_error\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, cross_validate, StratifiedKFold, RepeatedStratifiedKFold, RepeatedKFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n%matplotlib inline\n!pip install optuna\nimport optuna\n\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n!pip3 install catboost\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport time \n df_train = pd.read_csv('/kaggle/input/titanic/train.csv')\ndf_train.columns = df_train.columns.str.lower().str.replace(' ', '_')\nprint(df_train.columns)\ntrain_ids=df_train['passengerid'].values\nprint(df_train.shape)\nprint(df_train.info())\n\ndf_test = pd.read_csv('/kaggle/input/titanic/test.csv')\ndf_test.columns = df_test.columns.str.lower().str.replace(' ', '_')\ntest_ids=df_test['passengerid'].values\nprint(df_test.shape)\nprint(df_test.info())\n\ndf_train.sample(30) \n def null_count_with_percent(df):\n  total = df.isnull().sum().sort_values(ascending=False)\n  percent = (df.isnull().sum()/df.isnull().count()).sort_values(ascending=False)\n  missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n  return missing_data \n print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test)) \n df_train=df_train.drop(columns='cabin')\ndf_test=df_test.drop(columns='cabin') \n ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_train['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['age']=X\n\nImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['age']=X \n print(df_train.embarked.value_counts()) \n ImputedModule = SimpleImputer(strategy='constant', fill_value='messing').set_output(transform=\"pandas\")\nX=df_train['embarked'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['embarked']=X \n print(df_test.fare.value_counts()) \n ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['fare'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['fare']=X \n print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test)) \n target='survived' \n class_counts = df_train[target].value_counts()\nclass_proportions = class_counts / df_train.shape[0]\nclass_proportions = class_proportions.values.tolist()\nclass_proportions_str = [f'{prop:.2%}' for prop in class_proportions]\n\n# Set the color palette\ncolors = sns.color_palette('pastel')[0:len(class_counts)]\n\n# Plot the distribution of the target variable\nplt.figure(figsize=(8, 4))\nsns.countplot(x=target, data=df_train, palette=colors)\nplt.title('Distribution of Target Variable', fontsize=16)\nplt.xlabel(target, fontsize=14)\nplt.ylabel('Count', fontsize=14)\nplt.ylim([0, len(df_train)])\nfor i, count in enumerate(class_counts):\n    plt.text(i, count + 50, class_proportions_str[i], ha='center', fontsize=14, color='black')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nsns.despine()\nplt.show() \n def survived_bar_plot(feature):\n    plt.figure(figsize = (6,4))\n    sns.barplot(data = df_train , x = feature , y = target).set_title(f\"{feature}  \")\n    plt.show()\n    \ndef survived_table(feature):\n    return df_train[[feature, target]].groupby([feature], as_index=False).mean().sort_values(by=target, ascending=False).style.background_gradient(low=0.75,high=1)\n\ndef survived_hist_plot(feature):\n    plt.figure(figsize = (10,10))\n    sns.histplot(data = df_train , x = feature , hue = target,binwidth=5,palette = sns.color_palette([\"yellow\" , \"green\"]) ,multiple = \"stack\" ).set_title(f\"{feature} Vs \")\n    plt.show() \n df_train.columns \n survived_bar_plot('sex') \n survived_table('sex') \n survived_bar_plot('pclass') \n survived_table('pclass') \n survived_bar_plot('embarked') \n survived_table('embarked') \n survived_bar_plot('sibsp') \n survived_table('sibsp') \n survived_bar_plot('parch') \n survived_table('parch') \n survived_hist_plot('fare') \n survived_hist_plot('age') \n plot , ax = plt.subplots(1 , 3 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==1] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==2] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==3] , x = \"age\" , hue = target,binwidth=5,ax = ax[2],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"3-Pclass\")\nplt.show() \n plot , ax = plt.subplots(1 ,2 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='male'] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-male\")\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='female'] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-female\")\nplt.show() \n df_train['family_size'] = df_train['sibsp'] + df_train['parch'] + 1\ndf_test['family_size'] = df_test['sibsp'] + df_test['parch'] + 1 \n survived_table('family_size') \n df_train['is_alone'] = df_train['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_train['family_small'] = df_train['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_train['family_med'] = df_train['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_train['family_big'] = df_train['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\n\ndf_test['is_alone'] = df_test['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_test['family_small'] = df_test['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_test['family_med'] = df_test['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_test['family_big'] = df_test['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\ndf_train=df_train.drop(columns=['family_size','parch','sibsp'])\ndf_test=df_test.drop(columns=['family_size','parch','sibsp'])\n\n \n df_train['title']=df_train.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_train['title'].value_counts() < 5)\ndf_train['title'] = df_train['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\ndf_test['title']=df_test.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_test['title'].value_counts() < 5)\ndf_test['title'] = df_test['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\n\nsurvived_table('title') \n df_train['is_mrs'] = df_train['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_train['is_miss'] = df_train['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_train['is_master'] = df_train['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\n\ndf_test['is_mrs'] = df_test['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_test['is_miss'] = df_test['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_test['is_master'] = df_test['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\ndf_train=df_train.drop(columns=['title','name'])\ndf_test=df_test.drop(columns=['title','name'])\n\n\n \n df_train=df_train.drop(columns=['ticket'])\ndf_test=df_test.drop(columns=['ticket'])\n\ndf_train \n df_train['fare_band'] = pd.qcut(df_train['fare'], 4)\ndf_train[['fare_band', target]].groupby(['fare_band'], as_index=False).mean().sort_values(by='fare_band', ascending=False) \n df_train.loc[ df_train['fare'] <= 7.91, 'fare'] = 0\ndf_train.loc[(df_train['fare'] > 7.91) & (df_train['fare'] <= 14.454), 'fare'] = 1\ndf_train.loc[(df_train['fare'] > 14.454) & (df_train['fare'] <= 31), 'fare']   = 2\ndf_train.loc[ df_train['fare'] > 31, 'fare'] = 3\ndf_train['fare'] = df_train['fare'].astype(int)\n\n\n\ndf_test.loc[ df_test['fare'] <= 7.91, 'fare'] = 0\ndf_test.loc[(df_test['fare'] > 7.91) & (df_test['fare'] <= 14.454), 'fare'] = 1\ndf_test.loc[(df_test['fare'] > 14.454) & (df_test['fare'] <= 31), 'fare']   = 2\ndf_test.loc[ df_test['fare'] > 31, 'fare'] = 3\ndf_test['fare'] = df_test['fare'].astype(int)\n\n\ndf_train=df_train.drop(columns=['fare_band'])\ndf_train \n df_train['age_band'] = pd.cut(df_train['age'], 5)\ndf_train[['age_band', target]].groupby(['age_band'], as_index=False).mean().sort_values(by='age_band', ascending=True) \n df_train.loc[ df_train['age'] <= 16, 'age'] = 0\ndf_train.loc[(df_train['age'] > 16) & (df_train['age'] <= 32), 'age'] = 1\ndf_train.loc[(df_train['age'] > 32) & (df_train['age'] <= 48), 'age'] = 2\ndf_train.loc[(df_train['age'] > 48) & (df_train['age'] <= 64), 'age'] = 3\ndf_train.loc[ df_train['age'] > 64, 'age']\n\ndf_test.loc[ df_test['age'] <= 16, 'age'] = 0\ndf_test.loc[(df_test['age'] > 16) & (df_test['age'] <= 32), 'age'] = 1\ndf_test.loc[(df_test['age'] > 32) & (df_test['age'] <= 48), 'age'] = 2\ndf_test.loc[(df_test['age'] > 48) & (df_test['age'] <= 64), 'age'] = 3\ndf_test.loc[ df_test['age'] > 64, 'age']\n\ndf_train=df_train.drop(columns=['age_band']) \n df_train.to_csv('train_backup.csv')\ndf_test.to_csv('test_backup.csv') \n cat_feat=['sex','embarked','pclass']\n\ncats_encoded=[]\n\nfor cat in cat_feat:\n  df_train[cat]= df_train[cat].astype('category')\n  df_train[cat+'_encoded'] = df_train[cat].cat.codes\n    \n  df_test[cat]= df_test[cat].astype('category')\n  df_test[cat+'_encoded'] = df_test[cat].cat.codes\n    \n  cats_encoded.append(cat+\"_encoded\")\n\n\none_hot_encoded_data = pd.get_dummies(df_train[cats_encoded], columns =cats_encoded)\ndf_train[one_hot_encoded_data.columns]=one_hot_encoded_data.values\ndf_train=df_train.drop(columns=cat_feat)\ndf_train=df_train.drop(columns=cats_encoded)\n\none_hot_encoded_data_test = pd.get_dummies(df_test[cats_encoded], columns =cats_encoded)\ndf_test[one_hot_encoded_data_test.columns]=one_hot_encoded_data_test.values\ndf_test=df_test.drop(columns=cat_feat)\ndf_test=df_test.drop(columns=cats_encoded)\n\n\n\nprint(df_train.shape)\nprint(df_train.columns)\n\nprint(df_test.shape)\nprint(df_test.columns)\n \n df_train.embarked_encoded_3.value_counts() \n df_train=df_train.drop(columns='embarked_encoded_3')\n\nprint(df_train.shape)\n\nprint(df_test.shape)\n \n df_train \n plt.figure(figsize=(15,13))\ncor = df_train.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.CMRmap_r)\nplt.show() \n # selected \ndf_tra=df_train.copy() \n X=df_train[df_train.columns.difference(['passengerid',target])].values\nprint(X.shape)\nY=df_train[target].values\nprint(Y.shape) \n from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay,roc_auc_score\n\nparam ={'lambda': 1.2475525176000515,\n        'learning_rate': 0.05,\n        \"objective\": \"binary:logistic\",\n        'colsample_bytree': 0.9,\n        'subsample': 1.0, \n        'max_depth': 2,\n        'min_child_weight': 3,\n        \"eval_metric\": \"auc\"\n        \n       }\n\n\n\n\ndef xgboost_bin_classif(X, y, test_size=0.2, random_state=42, num_round=100):\n\n    # Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n\n    # Create DMatrix for XGBoost\n    dtrain = xgb.DMatrix(X_train, label=y_train)\n    dtest = xgb.DMatrix(X_test, label=y_test)\n\n    watchlist = [(dtrain, 'train'), (dtest, 'eval')]\n\n\n    num_round = 5000\n    evals_result = {}\n    bst = xgb.train(params=param, dtrain=dtrain, num_boost_round=num_round,\n                    evals_result=evals_result,\n                    maximize=False, obj=None,\n                    evals=watchlist, verbose_eval=200)\n    y_pred = bst.predict(dtest)\n    test_auc = roc_auc_score(y_test, y_pred)\n    print(f\"auc: {test_auc}\")\n    percentiles = np.arange(1, 100, 1)\n    base_rate = (y == 1).sum() / y.shape[0]\n    \n    \n    results = []\n    for i,percentile in enumerate(percentiles):\n        cutoff = np.percentile(y_pred, percentile)\n        predictions = np.where(y_pred >= cutoff, 1, 0)\n        cm = confusion_matrix(y_test, predictions, labels=[0,1]).copy()\n\n        tp = cm[0,0]\n        precision = tp / cm[:,0].sum()\n        recall = tp / cm[0,:].sum()\n        accuracy = cm.diagonal().sum() / cm.sum()\n        f1score = 2 * (precision * recall) / (precision + recall)\n        lift = precision/base_rate\n\n        res = dict(\n            percentile=percentile,\n            cutoff = cutoff,\n            precision=precision,\n            recall=recall,\n            lift=lift,\n            f1score=f1score,\n            accuracy=accuracy,\n        )\n\n        results.append(res)\n    \n    results = pd.DataFrame(results)\n    cut_off=0.415098\n    predictions = np.where(y_pred > cut_off, 1, 0)\n    cm = confusion_matrix(y_test, predictions, labels=[1,0])\n\n    # df_result = pd.DataFrame({\n    # 'target': y_test,\n    # 'predected': y_pred\n    #  })\n\n\n\n\n    return bst,test_auc,results,cm  \n bst,auc,results,cm=xgboost_bin_classif(X,Y) \n disp = ConfusionMatrixDisplay(confusion_matrix=cm,\n                              display_labels=[1,0])\ndisp.plot() \n x = results[results.percentile.isin( np.arange(0, 100, 5) )]\nx.set_index(\"percentile\") \n submission_test =bst.predict(xgb.DMatrix(df_test[df_test.columns.difference(['passengerid'])].values))\n \n cut_off=0.415098\npredictions = np.where(submission_test > cut_off, 1, 0)\n \n pd.Series(predictions).value_counts() \n print(predictions.shape)\n\nsub=pd.read_csv('/kaggle/input/titanic/gender_submission.csv')\n\n# Add predictions\nsub['Survived']=predictions\n\nsub.to_csv('submission.csv', index=False)",
    "markdown_source": "**i'll drop capin because the null values are more than 40%** \n **handle age null values** \n **handle embarked null values on train data** \n **handle fare null on test data** \n **no more null data !!** \n # **EDA** \n **age vs pclass vs target** \n # **Feature Engineering** \n **One Hot Encoding** \n **embarked_encoded_3 in train data is the null values i handled ,ill drop it** \n **Correlation between data and target** \n **VERY GOOD !! I have good correlations with the target** \n # **Split data to train and test** \n # Modelling \n # Submission",
    "n_cells": 70,
    "n_code_cells": 55,
    "n_markdown_cells": 15,
    "n_raw_cells": 0,
    "n_outputs": 55,
    "r_code_cells": 0.7857142857142857,
    "r_markdown_cells": 0.21428571428571427,
    "r_raw_cells": 0.0,
    "r_outputs": 1.0,
    "n_exceptions": 0,
    "r_exceptions": 0.0,
    "n_lines": 396,
    "n_lines_code": 381,
    "n_lines_markdown": 15,
    "lines_per_cell": [
        41,
        14,
        5,
        2,
        1,
        2,
        1,
        11,
        1,
        1,
        5,
        1,
        1,
        5,
        2,
        1,
        1,
        1,
        21,
        12,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        5,
        4,
        1,
        2,
        1,
        17,
        10,
        16,
        4,
        2,
        17,
        2,
        13,
        2,
        1,
        32,
        1,
        1,
        6,
        1,
        1,
        4,
        2,
        1,
        1,
        4,
        1,
        80,
        1,
        3,
        2,
        2,
        3,
        1,
        1,
        8
    ],
    "lines_per_code_cell": [
        41,
        14,
        5,
        2,
        2,
        11,
        1,
        5,
        1,
        5,
        2,
        1,
        21,
        12,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        5,
        4,
        2,
        1,
        17,
        10,
        16,
        4,
        2,
        17,
        2,
        13,
        2,
        32,
        1,
        6,
        1,
        4,
        2,
        4,
        80,
        1,
        3,
        2,
        2,
        3,
        1,
        8
    ],
    "lines_per_markdown_cell": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
    ],
    "ave_lines_per_cell": 5.6571428571428575,
    "ave_lines_per_code_cell": 6.927272727272728,
    "ave_lines_per_markdown_cell": 1.0,
    "max_lines_per_cell": 80,
    "max_lines_per_code_cell": 80,
    "max_lines_per_markdown_cell": 1,
    "min_lines_per_cell": 1,
    "min_lines_per_code_cell": 1,
    "min_lines_per_markdown_cell": 1,
    "n_chars": 14784,
    "n_chars_code": 14283,
    "n_chars_markdown": 501,
    "chars_per_cell": [
        1418,
        465,
        272,
        80,
        61,
        77,
        26,
        386,
        45,
        39,
        229,
        33,
        34,
        193,
        80,
        24,
        9,
        17,
        797,
        618,
        16,
        24,
        21,
        27,
        24,
        29,
        26,
        26,
        23,
        26,
        23,
        26,
        25,
        27,
        650,
        456,
        25,
        132,
        29,
        824,
        477,
        575,
        93,
        175,
        677,
        168,
        659,
        69,
        20,
        908,
        42,
        78,
        98,
        8,
        39,
        111,
        34,
        57,
        34,
        126,
        11,
        2317,
        43,
        114,
        86,
        103,
        73,
        37,
        12,
        178
    ],
    "chars_per_code_cell": [
        1418,
        465,
        272,
        80,
        77,
        386,
        39,
        229,
        34,
        193,
        80,
        17,
        797,
        618,
        16,
        24,
        21,
        27,
        24,
        29,
        26,
        26,
        23,
        26,
        23,
        26,
        25,
        650,
        456,
        132,
        29,
        824,
        477,
        575,
        93,
        175,
        677,
        168,
        659,
        69,
        908,
        42,
        98,
        8,
        111,
        34,
        126,
        2317,
        43,
        114,
        86,
        103,
        73,
        37,
        178
    ],
    "chars_per_markdown_cell": [
        61,
        26,
        45,
        33,
        24,
        9,
        27,
        25,
        20,
        78,
        39,
        57,
        34,
        11,
        12
    ],
    "ave_chars_per_line": 37.333333333333336,
    "ave_chars_per_cell": 211.2,
    "ave_chars_per_code_cell": 259.6909090909091,
    "ave_chars_per_markdown_cell": 33.4,
    "max_chars_per_cell": 2317,
    "max_chars_per_code_cell": 2317,
    "max_chars_per_markdownell": 78,
    "min_chars_per_cell": 8,
    "min_chars_per_code_cell": 8,
    "min_chars_per_markdown_cell": 9,
    "r_lines_code": 0.9621212121212122,
    "r_lines_markdown": 0.03787878787878788,
    "r_chars_markdown": 0.033887987012987016,
    "r_chars_code": 0.966112012987013,
    "all_cells": [
        {
            "source": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\n\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import StandardScaler\n\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.impute import SimpleImputer\nfrom sklearn import metrics\n\nfrom sklearn.metrics import mean_absolute_error\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, cross_validate, StratifiedKFold, RepeatedStratifiedKFold, RepeatedKFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n%matplotlib inline\n!pip install optuna\nimport optuna\n\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n!pip3 install catboost\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport time",
            "mc_idx": 0,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.009259259259259259,
                "Data_Transform": 0.06172839506172839,
                "Model_Train": 0.046296296296296294,
                "Model_Evaluation": 0.030864197530864196,
                "Model_Interpretation": 0.006172839506172839,
                "Hyperparameter_Tuning": 0.037037037037037035,
                "Visualization": 0.009259259259259259,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 32
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "matplotlib": 2,
                    ".mode": 1
                },
                "Data_Transform": {
                    "transform": 6,
                    "columntransformer": 4,
                    "standardscaler": 1,
                    "functiontransformer": 2,
                    "powertransformer": 2,
                    "repeat": 2,
                    ".mod": 1,
                    ".compose": 2
                },
                "Model_Train": {
                    "train_test_split": 1,
                    "cross_validate": 1,
                    "model": 2,
                    "linearregression": 2,
                    "randomforestclassifier": 2,
                    "model_selection": 1,
                    "logisticregression": 1,
                    "decisiontreeclassifier": 1,
                    "kneighborsclassifier": 1,
                    "svc": 1,
                    "gaussiannb": 1,
                    ".linear": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    "model": 2,
                    "mean_squared_error": 3,
                    "mean_absolute_error": 2,
                    "r2_score": 2
                },
                "Model_Interpretation": {
                    "model": 2
                },
                "Hyperparameter_Tuning": {
                    "gridsearchcv": 3,
                    "optuna": 2,
                    "cross_val_score": 1,
                    "kfold": 3,
                    "stratifiedkfold": 2,
                    "train_test_split": 1
                },
                "Visualization": {
                    "matplotlib": 2,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Requirement already satisfied: optuna in /opt/conda/lib/python3.10/site-packages (3.4.0)\r\nRequirement already satisfied: alembic>=1.5.0 in /opt/conda/lib/python3.10/site-packages (from optuna) (1.12.1)\r\nRequirement already satisfied: colorlog in /opt/conda/lib/python3.10/site-packages (from optuna) (6.7.0)\r\nRequirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from optuna) (1.24.3)\r\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from optuna) (21.3)\r\nRequirement already satisfied: sqlalchemy>=1.3.0 in /opt/conda/lib/python3.10/site-packages (from optuna) (2.0.20)\r\nRequirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from optuna) (4.66.1)\r\nRequirement already satisfied: PyYAML in /opt/conda/lib/python3.10/site-packages (from optuna) (6.0.1)\r\nRequirement already satisfied: Mako in /opt/conda/lib/python3.10/site-packages (from alembic>=1.5.0->optuna) (1.3.0)\r\nRequirement already satisfied: typing-extensions>=4 in /opt/conda/lib/python3.10/site-packages (from alembic>=1.5.0->optuna) (4.5.0)\r\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>=20.0->optuna) (3.0.9)\r\nRequirement already satisfied: greenlet!=0.4.17 in /opt/conda/lib/python3.10/site-packages (from sqlalchemy>=1.3.0->optuna) (2.0.2)\r\nRequirement already satisfied: MarkupSafe>=0.9.2 in /opt/conda/lib/python3.10/site-packages (from Mako->alembic>=1.5.0->optuna) (2.1.3)\r\nRequirement already satisfied: catboost in /opt/conda/lib/python3.10/site-packages (1.2.2)\r\nRequirement already satisfied: graphviz in /opt/conda/lib/python3.10/site-packages (from catboost) (0.20.1)\r\nRequirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from catboost) (3.7.3)\r\nRequirement already satisfied: numpy>=1.16.0 in /opt/conda/lib/python3.10/site-packages (from catboost) (1.24.3)\r\nRequirement already satisfied: pandas>=0.24 in /opt/conda/lib/python3.10/site-packages (from catboost) (2.0.3)\r\nRequirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from catboost) (1.11.3)\r\nRequirement already satisfied: plotly in /opt/conda/lib/python3.10/site-packages (from catboost) (5.16.1)\r\nRequirement already satisfied: six in /opt/conda/lib/python3.10/site-packages (from catboost) (1.16.0)\r\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24->catboost) (2.8.2)\r\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24->catboost) (2023.3)\r\nRequirement already satisfied: tzdata>=2022.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24->catboost) (2023.3)\r\nRequirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (1.1.0)\r\nRequirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (0.11.0)\r\nRequirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (4.42.1)\r\nRequirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (1.4.4)\r\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (21.3)\r\nRequirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (10.1.0)\r\nRequirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (3.0.9)\r\nRequirement already satisfied: tenacity>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from plotly->catboost) (8.2.3)\r\n"
                    ]
                },
                "mc_idx": 0,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "df_train = pd.read_csv('/kaggle/input/titanic/train.csv')\ndf_train.columns = df_train.columns.str.lower().str.replace(' ', '_')\nprint(df_train.columns)\ntrain_ids=df_train['passengerid'].values\nprint(df_train.shape)\nprint(df_train.info())\n\ndf_test = pd.read_csv('/kaggle/input/titanic/test.csv')\ndf_test.columns = df_test.columns.str.lower().str.replace(' ', '_')\ntest_ids=df_test['passengerid'].values\nprint(df_test.shape)\nprint(df_test.info())\n\ndf_train.sample(30)",
            "mc_idx": 1,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.5714285714285714,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.2857142857142857,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.14285714285714285,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4
                },
                "Exploratory_Data_Analysis": {
                    ".info(": 2,
                    "info": 2,
                    "columns": 5,
                    "shape": 2,
                    ".info": 2,
                    ".sample": 1
                },
                "Data_Transform": {
                    ".replace(": 2,
                    ".replace": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    1,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Index(['passengerid', 'survived', 'pclass', 'name', 'sex', 'age', 'sibsp',\n       'parch', 'ticket', 'fare', 'cabin', 'embarked'],\n      dtype='object')\n(891, 12)\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   passengerid  891 non-null    int64  \n 1   survived     891 non-null    int64  \n 2   pclass       891 non-null    int64  \n 3   name         891 non-null    object \n 4   sex          891 non-null    object \n 5   age          714 non-null    float64\n 6   sibsp        891 non-null    int64  \n 7   parch        891 non-null    int64  \n 8   ticket       891 non-null    object \n 9   fare         891 non-null    float64\n 10  cabin        204 non-null    object \n 11  embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\nNone\n(418, 11)\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 11 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   passengerid  418 non-null    int64  \n 1   pclass       418 non-null    int64  \n 2   name         418 non-null    object \n 3   sex          418 non-null    object \n 4   age          332 non-null    float64\n 5   sibsp        418 non-null    int64  \n 6   parch        418 non-null    int64  \n 7   ticket       418 non-null    object \n 8   fare         417 non-null    float64\n 9   cabin        91 non-null     object \n 10  embarked     418 non-null    object \ndtypes: float64(2), int64(4), object(5)\nmemory usage: 36.0+ KB\nNone\n",
                        "     passengerid  survived  pclass  \\\n444          445         1       3   \n31            32         1       1   \n157          158         0       3   \n119          120         0       3   \n853          854         1       1   \n393          394         1       1   \n603          604         0       3   \n667          668         0       3   \n885          886         0       3   \n169          170         0       3   \n662          663         0       1   \n526          527         1       2   \n335          336         0       3   \n647          648         1       1   \n571          572         1       1   \n60            61         0       3   \n409          410         0       3   \n260          261         0       3   \n600          601         1       2   \n867          868         0       1   \n706          707         1       2   \n194          195         1       1   \n246          247         0       3   \n392          393         0       3   \n623          624         0       3   \n123          124         1       2   \n287          288         0       3   \n881          882         0       3   \n772          773         0       2   \n435          436         1       1   \n\n                                                  name     sex   age  sibsp  \\\n444                  Johannesen-Bratthammer, Mr. Bernt    male   NaN      0   \n31      Spencer, Mrs. William Augustus (Marie Eugenie)  female   NaN      1   \n157                                    Corn, Mr. Harry    male  30.0      0   \n119                  Andersson, Miss. Ellis Anna Maria  female   2.0      4   \n853                          Lines, Miss. Mary Conover  female  16.0      0   \n393                             Newell, Miss. Marjorie  female  23.0      1   \n603                          Torber, Mr. Ernst William    male  44.0      0   \n667                         Rommetvedt, Mr. Knud Paust    male   NaN      0   \n885               Rice, Mrs. William (Margaret Norton)  female  39.0      0   \n169                                      Ling, Mr. Lee    male  28.0      0   \n662                         Colley, Mr. Edward Pomeroy    male  47.0      0   \n526                               Ridsdale, Miss. Lucy  female  50.0      0   \n335                                 Denkoff, Mr. Mitto    male   NaN      0   \n647                Simonius-Blumer, Col. Oberst Alfons    male  56.0      0   \n571      Appleton, Mrs. Edward Dale (Charlotte Lamson)  female  53.0      2   \n60                               Sirayanian, Mr. Orsen    male  22.0      0   \n409                                 Lefebre, Miss. Ida  female   NaN      3   \n260                                  Smith, Mr. Thomas    male   NaN      0   \n600  Jacobsohn, Mrs. Sidney Samuel (Amy Frances Chr...  female  24.0      2   \n867               Roebling, Mr. Washington Augustus II    male  31.0      0   \n706                      Kelly, Mrs. Florence \"Fannie\"  female  45.0      0   \n194          Brown, Mrs. James Joseph (Margaret Tobin)  female  44.0      0   \n246              Lindahl, Miss. Agda Thorilda Viktoria  female  25.0      0   \n392                       Gustafsson, Mr. Johan Birger    male  28.0      2   \n623                        Hansen, Mr. Henry Damsgaard    male  21.0      0   \n123                                Webber, Miss. Susan  female  32.5      0   \n287                               Naidenoff, Mr. Penko    male  22.0      0   \n881                                 Markun, Mr. Johann    male  33.0      0   \n772                                  Mack, Mrs. (Mary)  female  57.0      0   \n435                          Carter, Miss. Lucile Polk  female  14.0      1   \n\n     parch           ticket      fare    cabin embarked  \n444      0            65306    8.1125      NaN        S  \n31       0         PC 17569  146.5208      B78        C  \n157      0  SOTON/OQ 392090    8.0500      NaN        S  \n119      2           347082   31.2750      NaN        S  \n853      1         PC 17592   39.4000      D28        S  \n393      0            35273  113.2750      D36        C  \n603      0           364511    8.0500      NaN        S  \n667      0           312993    7.7750      NaN        S  \n885      5           382652   29.1250      NaN        Q  \n169      0             1601   56.4958      NaN        S  \n662      0             5727   25.5875      E58        S  \n526      0      W./C. 14258   10.5000      NaN        S  \n335      0           349225    7.8958      NaN        S  \n647      0            13213   35.5000      A26        C  \n571      0            11769   51.4792     C101        S  \n60       0             2669    7.2292      NaN        C  \n409      1             4133   25.4667      NaN        S  \n260      0           384461    7.7500      NaN        Q  \n600      1           243847   27.0000      NaN        S  \n867      0         PC 17590   50.4958      A24        S  \n706      0           223596   13.5000      NaN        S  \n194      0         PC 17610   27.7208       B4        C  \n246      0           347071    7.7750      NaN        S  \n392      0          3101277    7.9250      NaN        S  \n623      0           350029    7.8542      NaN        S  \n123      0            27267   13.0000     E101        S  \n287      0           349206    7.8958      NaN        S  \n881      0           349257    7.8958      NaN        S  \n772      0      S.O./P.P. 3   10.5000      E77        S  \n435      2           113760  120.0000  B96 B98        S  "
                    ]
                },
                "mc_idx": 1,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 1
            }
        },
        {
            "source": "def null_count_with_percent(df):\n  total = df.isnull().sum().sort_values(ascending=False)\n  percent = (df.isnull().sum()/df.isnull().count()).sort_values(ascending=False)\n  missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n  return missing_data",
            "mc_idx": 2,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5714285714285714,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 2,
                    ".isnull": 3,
                    ".sum": 2
                },
                "Data_Transform": {
                    ".concat(": 1,
                    ".sort_values": 2,
                    ".concat": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 2,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test))",
            "mc_idx": 3,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    3,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Total   Percent\ncabin          687  0.771044\nage            177  0.198653\nembarked         2  0.002245\npassengerid      0  0.000000\nsurvived         0  0.000000\npclass           0  0.000000\nname             0  0.000000\nsex              0  0.000000\nsibsp            0  0.000000\nparch            0  0.000000\nticket           0  0.000000\nfare             0  0.000000\n             Total   Percent\ncabin          327  0.782297\nage             86  0.205742\nfare             1  0.002392\npassengerid      0  0.000000\npclass           0  0.000000\nname             0  0.000000\nsex              0  0.000000\nsibsp            0  0.000000\nparch            0  0.000000\nticket           0  0.000000\nembarked         0  0.000000\n"
                    ]
                },
                "mc_idx": 3,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 0
            }
        },
        {
            "source": "**i'll drop capin because the null values are more than 40%**",
            "mc_idx": 4,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df_train=df_train.drop(columns='cabin')\ndf_test=df_test.drop(columns='cabin')",
            "mc_idx": 5,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2
                },
                "Data_Transform": {
                    ".drop": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 5,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "**handle age null values**",
            "mc_idx": 6,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_train['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['age']=X\n\nImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['age']=X",
            "mc_idx": 7,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.3333333333333333,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 2
                },
                "Data_Transform": {
                    "transform": 4,
                    ".reshape": 2
                },
                "Model_Train": {
                    ".fit(": 2
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    5,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 7,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 0
            }
        },
        {
            "source": "**handle embarked null values on train data**",
            "mc_idx": 8,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "print(df_train.embarked.value_counts())",
            "mc_idx": 9,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    6,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "embarked\nS    644\nC    168\nQ     77\nName: count, dtype: int64\n"
                    ]
                },
                "mc_idx": 9,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "ImputedModule = SimpleImputer(strategy='constant', fill_value='messing').set_output(transform=\"pandas\")\nX=df_train['embarked'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['embarked']=X",
            "mc_idx": 10,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.3333333333333333,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "constant": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    ".reshape": 1
                },
                "Model_Train": {
                    ".fit(": 1
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    7,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 0
            }
        },
        {
            "source": "**handle fare null on test data**",
            "mc_idx": 11,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "print(df_test.fare.value_counts())",
            "mc_idx": 12,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    8,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "fare\n7.7500     21\n26.0000    19\n13.0000    17\n8.0500     17\n7.8958     11\n           ..\n7.8208      1\n8.5167      1\n78.8500     1\n52.0000     1\n22.3583     1\nName: count, Length: 169, dtype: int64\n"
                    ]
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 0
            }
        },
        {
            "source": "ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['fare'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['fare']=X",
            "mc_idx": 13,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.3333333333333333,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    ".reshape": 1
                },
                "Model_Train": {
                    ".fit(": 1
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    9,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 13,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 0
            }
        },
        {
            "source": "print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test))",
            "mc_idx": 14,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Total  Percent\npassengerid      0      0.0\nsurvived         0      0.0\npclass           0      0.0\nname             0      0.0\nsex              0      0.0\nage              0      0.0\nsibsp            0      0.0\nparch            0      0.0\nticket           0      0.0\nfare             0      0.0\nembarked         0      0.0\n             Total  Percent\npassengerid      0      0.0\npclass           0      0.0\nname             0      0.0\nsex              0      0.0\nage              0      0.0\nsibsp            0      0.0\nparch            0      0.0\nticket           0      0.0\nfare             0      0.0\nembarked         0      0.0\n"
                    ]
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "**no more null data !!**",
            "mc_idx": 15,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# **EDA**",
            "mc_idx": 16,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "target='survived'",
            "mc_idx": 17,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "class_counts = df_train[target].value_counts()\nclass_proportions = class_counts / df_train.shape[0]\nclass_proportions = class_proportions.values.tolist()\nclass_proportions_str = [f'{prop:.2%}' for prop in class_proportions]\n\n# Set the color palette\ncolors = sns.color_palette('pastel')[0:len(class_counts)]\n\n# Plot the distribution of the target variable\nplt.figure(figsize=(8, 4))\nsns.countplot(x=target, data=df_train, palette=colors)\nplt.title('Distribution of Target Variable', fontsize=16)\nplt.xlabel(target, fontsize=14)\nplt.ylabel('Count', fontsize=14)\nplt.ylim([0, len(df_train)])\nfor i, count in enumerate(class_counts):\n    plt.text(i, count + 50, class_proportions_str[i], ha='center', fontsize=14, color='black')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nsns.despine()\nplt.show()",
            "mc_idx": 18,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.23076923076923078,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.07692307692307693,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.23076923076923078,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1,
                    "variable": 2
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    "sns.": 3,
                    "shape": 1,
                    "size": 7,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 3
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c012_o000_image_0.png",
                    12,
                    0,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 800x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 18,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 0
            }
        },
        {
            "source": "def survived_bar_plot(feature):\n    plt.figure(figsize = (6,4))\n    sns.barplot(data = df_train , x = feature , y = target).set_title(f\"{feature}  \")\n    plt.show()\n    \ndef survived_table(feature):\n    return df_train[[feature, target]].groupby([feature], as_index=False).mean().sort_values(by=target, ascending=False).style.background_gradient(low=0.75,high=1)\n\ndef survived_hist_plot(feature):\n    plt.figure(figsize = (10,10))\n    sns.histplot(data = df_train , x = feature , hue = target,binwidth=5,palette = sns.color_palette([\"yellow\" , \"green\"]) ,multiple = \"stack\" ).set_title(f\"{feature} Vs \")\n    plt.show()",
            "mc_idx": 19,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.25,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.375,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.125,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.375,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 2
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    "sns.": 3,
                    "size": 2,
                    ".mean": 1,
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1,
                    "stack": 1,
                    ".sort_values": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 3
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 19,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.columns",
            "mc_idx": 20,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    14,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Index(['passengerid', 'survived', 'pclass', 'name', 'sex', 'age', 'sibsp',\n       'parch', 'ticket', 'fare', 'embarked'],\n      dtype='object')"
                    ]
                },
                "mc_idx": 20,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('sex')",
            "mc_idx": 21,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c015_o000_image_1.png",
                    15,
                    0,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('sex')",
            "mc_idx": 22,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea22147820>"
                    ]
                },
                "mc_idx": 22,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('pclass')",
            "mc_idx": 23,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c017_o000_image_2.png",
                    17,
                    0,
                    2
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('pclass')",
            "mc_idx": 24,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    18,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea58a73eb0>"
                    ]
                },
                "mc_idx": 24,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('embarked')",
            "mc_idx": 25,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c019_o000_image_3.png",
                    19,
                    0,
                    3
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 25,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('embarked')",
            "mc_idx": 26,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea58fd54b0>"
                    ]
                },
                "mc_idx": 26,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('sibsp')",
            "mc_idx": 27,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c021_o000_image_4.png",
                    21,
                    0,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 27,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('sibsp')",
            "mc_idx": 28,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea221f4fa0>"
                    ]
                },
                "mc_idx": 28,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('parch')",
            "mc_idx": 29,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c023_o000_image_5.png",
                    23,
                    0,
                    5
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 29,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('parch')",
            "mc_idx": 30,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    24,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea201157e0>"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 0
            }
        },
        {
            "source": "survived_hist_plot('fare')",
            "mc_idx": 31,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c025_o000_image_6.png",
                    25,
                    0,
                    6
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1000x1000 with 1 Axes>"
                    ]
                },
                "mc_idx": 31,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 0
            }
        },
        {
            "source": "survived_hist_plot('age')",
            "mc_idx": 32,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c026_o000_image_7.png",
                    26,
                    0,
                    7
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1000x1000 with 1 Axes>"
                    ]
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "**age vs pclass vs target**",
            "mc_idx": 33,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "plot , ax = plt.subplots(1 , 3 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==1] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==2] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==3] , x = \"age\" , hue = target,binwidth=5,ax = ax[2],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"3-Pclass\")\nplt.show()",
            "mc_idx": 34,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.14285714285714285,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.42857142857142855,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.8571428571428571,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 6,
                    "size": 1
                },
                "Data_Transform": {
                    "stack": 3
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 6
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c027_o000_image_8.png",
                    27,
                    0,
                    8
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1400x400 with 3 Axes>"
                    ]
                },
                "mc_idx": 34,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "plot , ax = plt.subplots(1 ,2 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='male'] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-male\")\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='female'] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-female\")\nplt.show()",
            "mc_idx": 35,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.2,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.4,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.8,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 4,
                    "size": 1
                },
                "Data_Transform": {
                    "stack": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 4
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c028_o000_image_9.png",
                    28,
                    0,
                    9
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1400x400 with 2 Axes>"
                    ]
                },
                "mc_idx": 35,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 0
            }
        },
        {
            "source": "# **Feature Engineering**",
            "mc_idx": 36,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df_train['family_size'] = df_train['sibsp'] + df_train['parch'] + 1\ndf_test['family_size'] = df_test['sibsp'] + df_test['parch'] + 1",
            "mc_idx": 37,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 37,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('family_size')",
            "mc_idx": 38,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    30,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea1fb96800>"
                    ]
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['is_alone'] = df_train['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_train['family_small'] = df_train['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_train['family_med'] = df_train['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_train['family_big'] = df_train['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\n\ndf_test['is_alone'] = df_test['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_test['family_small'] = df_test['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_test['family_med'] = df_test['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_test['family_big'] = df_test['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\ndf_train=df_train.drop(columns=['family_size','parch','sibsp'])\ndf_test=df_test.drop(columns=['family_size','parch','sibsp'])\n\n",
            "mc_idx": 39,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.6,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2,
                    "size": 10
                },
                "Data_Transform": {
                    ".map(": 8,
                    ".astype(": 2,
                    ".drop": 2,
                    ".map": 8
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    31,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 39,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['title']=df_train.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_train['title'].value_counts() < 5)\ndf_train['title'] = df_train['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\ndf_test['title']=df_test.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_test['title'].value_counts() < 5)\ndf_test['title'] = df_test['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\n\nsurvived_table('title')",
            "mc_idx": 40,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.5,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 2
                },
                "Exploratory_Data_Analysis": {
                    "value_counts()": 2,
                    ".value_counts": 2
                },
                "Data_Transform": {
                    ".apply(": 2,
                    ".apply": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    32,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea1fadef50>"
                    ]
                },
                "mc_idx": 40,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['is_mrs'] = df_train['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_train['is_miss'] = df_train['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_train['is_master'] = df_train['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\n\ndf_test['is_mrs'] = df_test['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_test['is_miss'] = df_test['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_test['is_master'] = df_test['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\ndf_train=df_train.drop(columns=['title','name'])\ndf_test=df_test.drop(columns=['title','name'])\n\n\n",
            "mc_idx": 41,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.14285714285714285,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2
                },
                "Data_Transform": {
                    ".map(": 6,
                    ".drop": 2,
                    ".map": 6
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 41,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "df_train=df_train.drop(columns=['ticket'])\ndf_test=df_test.drop(columns=['ticket'])\n\ndf_train",
            "mc_idx": 42,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2
                },
                "Data_Transform": {
                    ".drop": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     passengerid  survived  pclass     sex        age     fare embarked  \\\n0              1         0       3    male  22.000000   7.2500        S   \n1              2         1       1  female  38.000000  71.2833        C   \n2              3         1       3  female  26.000000   7.9250        S   \n3              4         1       1  female  35.000000  53.1000        S   \n4              5         0       3    male  35.000000   8.0500        S   \n..           ...       ...     ...     ...        ...      ...      ...   \n886          887         0       2    male  27.000000  13.0000        S   \n887          888         1       1  female  19.000000  30.0000        S   \n888          889         0       3  female  29.699118  23.4500        S   \n889          890         1       1    male  26.000000  30.0000        C   \n890          891         0       3    male  32.000000   7.7500        Q   \n\n     is_alone  family_small  family_med  family_big  is_mrs  is_miss  \\\n0       False             1           0           0       0        0   \n1       False             1           0           0       1        0   \n2        True             0           0           0       0        1   \n3       False             1           0           0       1        0   \n4        True             0           0           0       0        0   \n..        ...           ...         ...         ...     ...      ...   \n886      True             0           0           0       0        0   \n887      True             0           0           0       0        1   \n888     False             0           1           0       0        1   \n889      True             0           0           0       0        0   \n890      True             0           0           0       0        0   \n\n     is_master  \n0            0  \n1            0  \n2            0  \n3            0  \n4            0  \n..         ...  \n886          0  \n887          0  \n888          0  \n889          0  \n890          0  \n\n[891 rows x 14 columns]"
                    ]
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['fare_band'] = pd.qcut(df_train['fare'], 4)\ndf_train[['fare_band', target]].groupby(['fare_band'], as_index=False).mean().sort_values(by='fare_band', ascending=False)",
            "mc_idx": 43,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    ".mean": 1,
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1,
                    ".qcut(": 1,
                    ".sort_values": 1,
                    ".qcut": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "         fare_band  survived\n3  (31.0, 512.329]  0.581081\n2   (14.454, 31.0]  0.454955\n1   (7.91, 14.454]  0.303571\n0   (-0.001, 7.91]  0.197309"
                    ]
                },
                "mc_idx": 43,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.loc[ df_train['fare'] <= 7.91, 'fare'] = 0\ndf_train.loc[(df_train['fare'] > 7.91) & (df_train['fare'] <= 14.454), 'fare'] = 1\ndf_train.loc[(df_train['fare'] > 14.454) & (df_train['fare'] <= 31), 'fare']   = 2\ndf_train.loc[ df_train['fare'] > 31, 'fare'] = 3\ndf_train['fare'] = df_train['fare'].astype(int)\n\n\n\ndf_test.loc[ df_test['fare'] <= 7.91, 'fare'] = 0\ndf_test.loc[(df_test['fare'] > 7.91) & (df_test['fare'] <= 14.454), 'fare'] = 1\ndf_test.loc[(df_test['fare'] > 14.454) & (df_test['fare'] <= 31), 'fare']   = 2\ndf_test.loc[ df_test['fare'] > 31, 'fare'] = 3\ndf_test['fare'] = df_test['fare'].astype(int)\n\n\ndf_train=df_train.drop(columns=['fare_band'])\ndf_train",
            "mc_idx": 44,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {
                    ".astype(": 2,
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    36,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     passengerid  survived  pclass     sex        age  fare embarked  \\\n0              1         0       3    male  22.000000     0        S   \n1              2         1       1  female  38.000000     3        C   \n2              3         1       3  female  26.000000     1        S   \n3              4         1       1  female  35.000000     3        S   \n4              5         0       3    male  35.000000     1        S   \n..           ...       ...     ...     ...        ...   ...      ...   \n886          887         0       2    male  27.000000     1        S   \n887          888         1       1  female  19.000000     2        S   \n888          889         0       3  female  29.699118     2        S   \n889          890         1       1    male  26.000000     2        C   \n890          891         0       3    male  32.000000     0        Q   \n\n     is_alone  family_small  family_med  family_big  is_mrs  is_miss  \\\n0       False             1           0           0       0        0   \n1       False             1           0           0       1        0   \n2        True             0           0           0       0        1   \n3       False             1           0           0       1        0   \n4        True             0           0           0       0        0   \n..        ...           ...         ...         ...     ...      ...   \n886      True             0           0           0       0        0   \n887      True             0           0           0       0        1   \n888     False             0           1           0       0        1   \n889      True             0           0           0       0        0   \n890      True             0           0           0       0        0   \n\n     is_master  \n0            0  \n1            0  \n2            0  \n3            0  \n4            0  \n..         ...  \n886          0  \n887          0  \n888          0  \n889          0  \n890          0  \n\n[891 rows x 14 columns]"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 36,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['age_band'] = pd.cut(df_train['age'], 5)\ndf_train[['age_band', target]].groupby(['age_band'], as_index=False).mean().sort_values(by='age_band', ascending=True)",
            "mc_idx": 45,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    ".mean": 1,
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1,
                    ".cut(": 1,
                    ".sort_values": 1,
                    ".cut": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    37,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "           age_band  survived\n0    (0.34, 16.336]  0.550000\n1  (16.336, 32.252]  0.344168\n2  (32.252, 48.168]  0.404255\n3  (48.168, 64.084]  0.434783\n4    (64.084, 80.0]  0.090909"
                    ]
                },
                "mc_idx": 45,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 37,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.loc[ df_train['age'] <= 16, 'age'] = 0\ndf_train.loc[(df_train['age'] > 16) & (df_train['age'] <= 32), 'age'] = 1\ndf_train.loc[(df_train['age'] > 32) & (df_train['age'] <= 48), 'age'] = 2\ndf_train.loc[(df_train['age'] > 48) & (df_train['age'] <= 64), 'age'] = 3\ndf_train.loc[ df_train['age'] > 64, 'age']\n\ndf_test.loc[ df_test['age'] <= 16, 'age'] = 0\ndf_test.loc[(df_test['age'] > 16) & (df_test['age'] <= 32), 'age'] = 1\ndf_test.loc[(df_test['age'] > 32) & (df_test['age'] <= 48), 'age'] = 2\ndf_test.loc[(df_test['age'] > 48) & (df_test['age'] <= 64), 'age'] = 3\ndf_test.loc[ df_test['age'] > 64, 'age']\n\ndf_train=df_train.drop(columns=['age_band'])",
            "mc_idx": 46,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    38,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 46,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 38,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.to_csv('train_backup.csv')\ndf_test.to_csv('test_backup.csv')",
            "mc_idx": 47,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 2,
                    "to_csv": 2
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    39,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 47,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 39,
                "o_idx": 0
            }
        },
        {
            "source": "**One Hot Encoding**",
            "mc_idx": 48,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "cat_feat=['sex','embarked','pclass']\n\ncats_encoded=[]\n\nfor cat in cat_feat:\n  df_train[cat]= df_train[cat].astype('category')\n  df_train[cat+'_encoded'] = df_train[cat].cat.codes\n    \n  df_test[cat]= df_test[cat].astype('category')\n  df_test[cat+'_encoded'] = df_test[cat].cat.codes\n    \n  cats_encoded.append(cat+\"_encoded\")\n\n\none_hot_encoded_data = pd.get_dummies(df_train[cats_encoded], columns =cats_encoded)\ndf_train[one_hot_encoded_data.columns]=one_hot_encoded_data.values\ndf_train=df_train.drop(columns=cat_feat)\ndf_train=df_train.drop(columns=cats_encoded)\n\none_hot_encoded_data_test = pd.get_dummies(df_test[cats_encoded], columns =cats_encoded)\ndf_test[one_hot_encoded_data_test.columns]=one_hot_encoded_data_test.values\ndf_test=df_test.drop(columns=cat_feat)\ndf_test=df_test.drop(columns=cats_encoded)\n\n\n\nprint(df_train.shape)\nprint(df_train.columns)\n\nprint(df_test.shape)\nprint(df_test.columns)\n",
            "mc_idx": 49,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.16666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 10,
                    "shape": 2
                },
                "Data_Transform": {
                    ".astype(": 2,
                    ".drop": 4,
                    ".get_dummies": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    40,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 20)\nIndex(['passengerid', 'survived', 'age', 'fare', 'is_alone', 'family_small',\n       'family_med', 'family_big', 'is_mrs', 'is_miss', 'is_master',\n       'sex_encoded_0', 'sex_encoded_1', 'embarked_encoded_0',\n       'embarked_encoded_1', 'embarked_encoded_2', 'embarked_encoded_3',\n       'pclass_encoded_0', 'pclass_encoded_1', 'pclass_encoded_2'],\n      dtype='object')\n(418, 18)\nIndex(['passengerid', 'age', 'fare', 'is_alone', 'family_small', 'family_med',\n       'family_big', 'is_mrs', 'is_miss', 'is_master', 'sex_encoded_0',\n       'sex_encoded_1', 'embarked_encoded_0', 'embarked_encoded_1',\n       'embarked_encoded_2', 'pclass_encoded_0', 'pclass_encoded_1',\n       'pclass_encoded_2'],\n      dtype='object')\n"
                    ]
                },
                "mc_idx": 49,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 40,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.embarked_encoded_3.value_counts()",
            "mc_idx": 50,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    41,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "embarked_encoded_3\nFalse    889\nTrue       2\nName: count, dtype: int64"
                    ]
                },
                "mc_idx": 50,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 41,
                "o_idx": 0
            }
        },
        {
            "source": "**embarked_encoded_3 in train data is the null values i handled ,ill drop it**",
            "mc_idx": 51,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df_train=df_train.drop(columns='embarked_encoded_3')\n\nprint(df_train.shape)\n\nprint(df_test.shape)\n",
            "mc_idx": 52,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.6666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "shape": 2
                },
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    42,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 19)\n(418, 18)\n"
                    ]
                },
                "mc_idx": 52,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 42,
                "o_idx": 0
            }
        },
        {
            "source": "df_train",
            "mc_idx": 53,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    43,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     passengerid  survived  age  fare  is_alone  family_small  family_med  \\\n0              1         0  1.0     0     False             1           0   \n1              2         1  2.0     3     False             1           0   \n2              3         1  1.0     1      True             0           0   \n3              4         1  2.0     3     False             1           0   \n4              5         0  2.0     1      True             0           0   \n..           ...       ...  ...   ...       ...           ...         ...   \n886          887         0  1.0     1      True             0           0   \n887          888         1  1.0     2      True             0           0   \n888          889         0  1.0     2     False             0           1   \n889          890         1  1.0     2      True             0           0   \n890          891         0  1.0     0      True             0           0   \n\n     family_big  is_mrs  is_miss  is_master  sex_encoded_0  sex_encoded_1  \\\n0             0       0        0          0          False           True   \n1             0       1        0          0           True          False   \n2             0       0        1          0           True          False   \n3             0       1        0          0           True          False   \n4             0       0        0          0          False           True   \n..          ...     ...      ...        ...            ...            ...   \n886           0       0        0          0          False           True   \n887           0       0        1          0           True          False   \n888           0       0        1          0           True          False   \n889           0       0        0          0          False           True   \n890           0       0        0          0          False           True   \n\n     embarked_encoded_0  embarked_encoded_1  embarked_encoded_2  \\\n0                 False               False                True   \n1                  True               False               False   \n2                 False               False                True   \n3                 False               False                True   \n4                 False               False                True   \n..                  ...                 ...                 ...   \n886               False               False                True   \n887               False               False                True   \n888               False               False                True   \n889                True               False               False   \n890               False                True               False   \n\n     pclass_encoded_0  pclass_encoded_1  pclass_encoded_2  \n0               False             False              True  \n1                True             False             False  \n2               False             False              True  \n3                True             False             False  \n4               False             False              True  \n..                ...               ...               ...  \n886             False              True             False  \n887              True             False             False  \n888             False             False              True  \n889              True             False             False  \n890             False             False              True  \n\n[891 rows x 19 columns]"
                    ]
                },
                "mc_idx": 53,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 43,
                "o_idx": 0
            }
        },
        {
            "source": "**Correlation between data and target**",
            "mc_idx": 54,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "plt.figure(figsize=(15,13))\ncor = df_train.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.CMRmap_r)\nplt.show()",
            "mc_idx": 55,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.16666666666666666,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".corr": 2,
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c044_o000_image_10.png",
                    44,
                    0,
                    10
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1500x1300 with 2 Axes>"
                    ]
                },
                "mc_idx": 55,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 44,
                "o_idx": 0
            }
        },
        {
            "source": "# selected \ndf_tra=df_train.copy()",
            "mc_idx": 56,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    45,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 56,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 45,
                "o_idx": 0
            }
        },
        {
            "source": "**VERY GOOD !! I have good correlations with the target**",
            "mc_idx": 57,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# **Split data to train and test**",
            "mc_idx": 58,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "X=df_train[df_train.columns.difference(['passengerid',target])].values\nprint(X.shape)\nY=df_train[target].values\nprint(Y.shape)",
            "mc_idx": 59,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.6666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "shape": 2
                },
                "Data_Transform": {
                    ".diff": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    46,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 17)\n(891,)\n"
                    ]
                },
                "mc_idx": 59,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 46,
                "o_idx": 0
            }
        },
        {
            "source": "# Modelling",
            "mc_idx": 60,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay,roc_auc_score\n\nparam ={'lambda': 1.2475525176000515,\n        'learning_rate': 0.05,\n        \"objective\": \"binary:logistic\",\n        'colsample_bytree': 0.9,\n        'subsample': 1.0, \n        'max_depth': 2,\n        'min_child_weight': 3,\n        \"eval_metric\": \"auc\"\n        \n       }\n\n\n\n\ndef xgboost_bin_classif(X, y, test_size=0.2, random_state=42, num_round=100):\n\n    # Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n\n    # Create DMatrix for XGBoost\n    dtrain = xgb.DMatrix(X_train, label=y_train)\n    dtest = xgb.DMatrix(X_test, label=y_test)\n\n    watchlist = [(dtrain, 'train'), (dtest, 'eval')]\n\n\n    num_round = 5000\n    evals_result = {}\n    bst = xgb.train(params=param, dtrain=dtrain, num_boost_round=num_round,\n                    evals_result=evals_result,\n                    maximize=False, obj=None,\n                    evals=watchlist, verbose_eval=200)\n    y_pred = bst.predict(dtest)\n    test_auc = roc_auc_score(y_test, y_pred)\n    print(f\"auc: {test_auc}\")\n    percentiles = np.arange(1, 100, 1)\n    base_rate = (y == 1).sum() / y.shape[0]\n    \n    \n    results = []\n    for i,percentile in enumerate(percentiles):\n        cutoff = np.percentile(y_pred, percentile)\n        predictions = np.where(y_pred >= cutoff, 1, 0)\n        cm = confusion_matrix(y_test, predictions, labels=[0,1]).copy()\n\n        tp = cm[0,0]\n        precision = tp / cm[:,0].sum()\n        recall = tp / cm[0,:].sum()\n        accuracy = cm.diagonal().sum() / cm.sum()\n        f1score = 2 * (precision * recall) / (precision + recall)\n        lift = precision/base_rate\n\n        res = dict(\n            percentile=percentile,\n            cutoff = cutoff,\n            precision=precision,\n            recall=recall,\n            lift=lift,\n            f1score=f1score,\n            accuracy=accuracy,\n        )\n\n        results.append(res)\n    \n    results = pd.DataFrame(results)\n    cut_off=0.415098\n    predictions = np.where(y_pred > cut_off, 1, 0)\n    cm = confusion_matrix(y_test, predictions, labels=[1,0])\n\n    # df_result = pd.DataFrame({\n    # 'target': y_test,\n    # 'predected': y_pred\n    #  })\n\n\n\n\n    return bst,test_auc,results,cm ",
            "mc_idx": 61,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.45454545454545453,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.45454545454545453,
                "Data_Transform": 0.3181818181818182,
                "Model_Train": 0.09090909090909091,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.045454545454545456,
                "Hyperparameter_Tuning": 0.18181818181818182,
                "Visualization": 0.0,
                "Debug": 0.045454545454545456,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "np.percentile": 1,
                    "shape": 1,
                    "size": 3,
                    ".sum": 5
                },
                "Data_Transform": {
                    "tile": 7
                },
                "Model_Train": {
                    "train_test_split": 1,
                    ".train(": 1
                },
                "Model_Evaluation": {
                    "confusion_matrix": 6,
                    "precision": 6,
                    "recall": 5,
                    "roc_auc_score": 4,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {
                    "param": 3,
                    "train_test_split": 1
                },
                "Visualization": {},
                "Debug": {
                    "testing": 1
                },
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    47,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 61,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 47,
                "o_idx": 0
            }
        },
        {
            "source": "bst,auc,results,cm=xgboost_bin_classif(X,Y)",
            "mc_idx": 62,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    48,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "[0]\ttrain-auc:0.81699\teval-auc:0.80631\n[200]\ttrain-auc:0.88732\teval-auc:0.89607\n[400]\ttrain-auc:0.89328\teval-auc:0.89846\n[600]\ttrain-auc:0.89659\teval-auc:0.89575\n[800]\ttrain-auc:0.89872\teval-auc:0.89344\n[1000]\ttrain-auc:0.89889\teval-auc:0.89408\n[1200]\ttrain-auc:0.90186\teval-auc:0.89858\n[1400]\ttrain-auc:0.90352\teval-auc:0.89923\n[1600]\ttrain-auc:0.90372\teval-auc:0.89910\n[1800]\ttrain-auc:0.90467\teval-auc:0.89910\n[2000]\ttrain-auc:0.90562\teval-auc:0.90013\n[2200]\ttrain-auc:0.90644\teval-auc:0.90167\n[2400]\ttrain-auc:0.90779\teval-auc:0.90296\n[2600]\ttrain-auc:0.90856\teval-auc:0.90245\n[2800]\ttrain-auc:0.90904\teval-auc:0.90322\n[3000]\ttrain-auc:0.90904\teval-auc:0.90347\n[3200]\ttrain-auc:0.90961\teval-auc:0.90322\n[3400]\ttrain-auc:0.90967\teval-auc:0.90438\n[3600]\ttrain-auc:0.91050\teval-auc:0.90257\n[3800]\ttrain-auc:0.91073\teval-auc:0.90283\n[4000]\ttrain-auc:0.91125\teval-auc:0.90347\n[4200]\ttrain-auc:0.91132\teval-auc:0.90347\n[4400]\ttrain-auc:0.91175\teval-auc:0.90167\n[4600]\ttrain-auc:0.91231\teval-auc:0.90193\n[4800]\ttrain-auc:0.91245\teval-auc:0.90206\n[4999]\ttrain-auc:0.91261\teval-auc:0.90219\nauc: 0.9021879021879022\n"
                    ]
                },
                "mc_idx": 62,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 48,
                "o_idx": 0
            }
        },
        {
            "source": "disp = ConfusionMatrixDisplay(confusion_matrix=cm,\n                              display_labels=[1,0])\ndisp.plot()",
            "mc_idx": 63,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".plot(": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "confusion_matrix": 2
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c049_o001_image_11.png",
                    49,
                    1,
                    11
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7eea1ea41ae0>",
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 63,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 49,
                "o_idx": 1
            }
        },
        {
            "source": "x = results[results.percentile.isin( np.arange(0, 100, 5) )]\nx.set_index(\"percentile\")",
            "mc_idx": 64,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    "tile": 2,
                    ".set_index": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    50,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "              cutoff  precision    recall      lift   f1score  accuracy\npercentile                                                             \n5           0.017676   1.000000  0.076190  2.605263  0.141593  0.458101\n10          0.069727   1.000000  0.161905  2.605263  0.278689  0.508380\n15          0.095428   0.961538  0.238095  2.505061  0.381679  0.547486\n20          0.105130   0.967742  0.285714  2.521222  0.441176  0.575419\n25          0.107818   0.947368  0.342857  2.468144  0.503497  0.603352\n30          0.107818   0.947368  0.342857  2.468144  0.503497  0.603352\n35          0.160297   0.952381  0.571429  2.481203  0.714286  0.731844\n40          0.180408   0.952381  0.571429  2.481203  0.714286  0.731844\n45          0.228289   0.925926  0.714286  2.412281  0.806452  0.798883\n50          0.298299   0.921348  0.780952  2.400355  0.845361  0.832402\n55          0.378290   0.896907  0.828571  2.336679  0.861386  0.843575\n60          0.454721   0.867925  0.876190  2.261172  0.872038  0.849162\n65          0.599188   0.818966  0.904762  2.133621  0.859729  0.826816\n70          0.740452   0.808333  0.923810  2.105921  0.862222  0.826816\n75          0.890651   0.746269  0.952381  1.944226  0.836820  0.782123\n80          0.944830   0.706294  0.961905  1.840081  0.814516  0.743017\n85          0.953873   0.680000  0.971429  1.771579  0.800000  0.715084\n90          0.967649   0.639752  0.980952  1.666721  0.774436  0.664804\n95          0.986942   0.611765  0.990476  1.593808  0.756364  0.625698"
                    ]
                },
                "mc_idx": 64,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 50,
                "o_idx": 0
            }
        },
        {
            "source": "submission_test =bst.predict(xgb.DMatrix(df_test[df_test.columns.difference(['passengerid'])].values))\n",
            "mc_idx": 65,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {
                    ".diff": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    51,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 65,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 51,
                "o_idx": 0
            }
        },
        {
            "source": "cut_off=0.415098\npredictions = np.where(submission_test > cut_off, 1, 0)\n",
            "mc_idx": 66,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    52,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 66,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 52,
                "o_idx": 0
            }
        },
        {
            "source": "pd.Series(predictions).value_counts()",
            "mc_idx": 67,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    53,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "0    252\n1    166\nName: count, dtype: int64"
                    ]
                },
                "mc_idx": 67,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 53,
                "o_idx": 0
            }
        },
        {
            "source": "# Submission",
            "mc_idx": 68,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "print(predictions.shape)\n\nsub=pd.read_csv('/kaggle/input/titanic/gender_submission.csv')\n\n# Add predictions\nsub['Survived']=predictions\n\nsub.to_csv('submission.csv', index=False)",
            "mc_idx": 69,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.25,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.5,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 2,
                    "pd.read_": 2
                },
                "Exploratory_Data_Analysis": {
                    "shape": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    54,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(418,)\n"
                    ]
                },
                "mc_idx": 69,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 54,
                "o_idx": 0
            }
        }
    ],
    "code_cells": [
        {
            "source": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\n\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\n\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import StandardScaler\n\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.impute import SimpleImputer\nfrom sklearn import metrics\n\nfrom sklearn.metrics import mean_absolute_error\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV, cross_validate, StratifiedKFold, RepeatedStratifiedKFold, RepeatedKFold\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n%matplotlib inline\n!pip install optuna\nimport optuna\n\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n!pip3 install catboost\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport time",
            "mc_idx": 0,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.009259259259259259,
                "Data_Transform": 0.06172839506172839,
                "Model_Train": 0.046296296296296294,
                "Model_Evaluation": 0.030864197530864196,
                "Model_Interpretation": 0.006172839506172839,
                "Hyperparameter_Tuning": 0.037037037037037035,
                "Visualization": 0.009259259259259259,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 32
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "matplotlib": 2,
                    ".mode": 1
                },
                "Data_Transform": {
                    "transform": 6,
                    "columntransformer": 4,
                    "standardscaler": 1,
                    "functiontransformer": 2,
                    "powertransformer": 2,
                    "repeat": 2,
                    ".mod": 1,
                    ".compose": 2
                },
                "Model_Train": {
                    "train_test_split": 1,
                    "cross_validate": 1,
                    "model": 2,
                    "linearregression": 2,
                    "randomforestclassifier": 2,
                    "model_selection": 1,
                    "logisticregression": 1,
                    "decisiontreeclassifier": 1,
                    "kneighborsclassifier": 1,
                    "svc": 1,
                    "gaussiannb": 1,
                    ".linear": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    "model": 2,
                    "mean_squared_error": 3,
                    "mean_absolute_error": 2,
                    "r2_score": 2
                },
                "Model_Interpretation": {
                    "model": 2
                },
                "Hyperparameter_Tuning": {
                    "gridsearchcv": 3,
                    "optuna": 2,
                    "cross_val_score": 1,
                    "kfold": 3,
                    "stratifiedkfold": 2,
                    "train_test_split": 1
                },
                "Visualization": {
                    "matplotlib": 2,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Requirement already satisfied: optuna in /opt/conda/lib/python3.10/site-packages (3.4.0)\r\nRequirement already satisfied: alembic>=1.5.0 in /opt/conda/lib/python3.10/site-packages (from optuna) (1.12.1)\r\nRequirement already satisfied: colorlog in /opt/conda/lib/python3.10/site-packages (from optuna) (6.7.0)\r\nRequirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from optuna) (1.24.3)\r\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from optuna) (21.3)\r\nRequirement already satisfied: sqlalchemy>=1.3.0 in /opt/conda/lib/python3.10/site-packages (from optuna) (2.0.20)\r\nRequirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from optuna) (4.66.1)\r\nRequirement already satisfied: PyYAML in /opt/conda/lib/python3.10/site-packages (from optuna) (6.0.1)\r\nRequirement already satisfied: Mako in /opt/conda/lib/python3.10/site-packages (from alembic>=1.5.0->optuna) (1.3.0)\r\nRequirement already satisfied: typing-extensions>=4 in /opt/conda/lib/python3.10/site-packages (from alembic>=1.5.0->optuna) (4.5.0)\r\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>=20.0->optuna) (3.0.9)\r\nRequirement already satisfied: greenlet!=0.4.17 in /opt/conda/lib/python3.10/site-packages (from sqlalchemy>=1.3.0->optuna) (2.0.2)\r\nRequirement already satisfied: MarkupSafe>=0.9.2 in /opt/conda/lib/python3.10/site-packages (from Mako->alembic>=1.5.0->optuna) (2.1.3)\r\nRequirement already satisfied: catboost in /opt/conda/lib/python3.10/site-packages (1.2.2)\r\nRequirement already satisfied: graphviz in /opt/conda/lib/python3.10/site-packages (from catboost) (0.20.1)\r\nRequirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from catboost) (3.7.3)\r\nRequirement already satisfied: numpy>=1.16.0 in /opt/conda/lib/python3.10/site-packages (from catboost) (1.24.3)\r\nRequirement already satisfied: pandas>=0.24 in /opt/conda/lib/python3.10/site-packages (from catboost) (2.0.3)\r\nRequirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from catboost) (1.11.3)\r\nRequirement already satisfied: plotly in /opt/conda/lib/python3.10/site-packages (from catboost) (5.16.1)\r\nRequirement already satisfied: six in /opt/conda/lib/python3.10/site-packages (from catboost) (1.16.0)\r\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24->catboost) (2.8.2)\r\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24->catboost) (2023.3)\r\nRequirement already satisfied: tzdata>=2022.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24->catboost) (2023.3)\r\nRequirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (1.1.0)\r\nRequirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (0.11.0)\r\nRequirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (4.42.1)\r\nRequirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (1.4.4)\r\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (21.3)\r\nRequirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (10.1.0)\r\nRequirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->catboost) (3.0.9)\r\nRequirement already satisfied: tenacity>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from plotly->catboost) (8.2.3)\r\n"
                    ]
                },
                "mc_idx": 0,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "df_train = pd.read_csv('/kaggle/input/titanic/train.csv')\ndf_train.columns = df_train.columns.str.lower().str.replace(' ', '_')\nprint(df_train.columns)\ntrain_ids=df_train['passengerid'].values\nprint(df_train.shape)\nprint(df_train.info())\n\ndf_test = pd.read_csv('/kaggle/input/titanic/test.csv')\ndf_test.columns = df_test.columns.str.lower().str.replace(' ', '_')\ntest_ids=df_test['passengerid'].values\nprint(df_test.shape)\nprint(df_test.info())\n\ndf_train.sample(30)",
            "mc_idx": 1,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.5714285714285714,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.2857142857142857,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.14285714285714285,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4
                },
                "Exploratory_Data_Analysis": {
                    ".info(": 2,
                    "info": 2,
                    "columns": 5,
                    "shape": 2,
                    ".info": 2,
                    ".sample": 1
                },
                "Data_Transform": {
                    ".replace(": 2,
                    ".replace": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    1,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Index(['passengerid', 'survived', 'pclass', 'name', 'sex', 'age', 'sibsp',\n       'parch', 'ticket', 'fare', 'cabin', 'embarked'],\n      dtype='object')\n(891, 12)\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   passengerid  891 non-null    int64  \n 1   survived     891 non-null    int64  \n 2   pclass       891 non-null    int64  \n 3   name         891 non-null    object \n 4   sex          891 non-null    object \n 5   age          714 non-null    float64\n 6   sibsp        891 non-null    int64  \n 7   parch        891 non-null    int64  \n 8   ticket       891 non-null    object \n 9   fare         891 non-null    float64\n 10  cabin        204 non-null    object \n 11  embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\nNone\n(418, 11)\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 11 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   passengerid  418 non-null    int64  \n 1   pclass       418 non-null    int64  \n 2   name         418 non-null    object \n 3   sex          418 non-null    object \n 4   age          332 non-null    float64\n 5   sibsp        418 non-null    int64  \n 6   parch        418 non-null    int64  \n 7   ticket       418 non-null    object \n 8   fare         417 non-null    float64\n 9   cabin        91 non-null     object \n 10  embarked     418 non-null    object \ndtypes: float64(2), int64(4), object(5)\nmemory usage: 36.0+ KB\nNone\n",
                        "     passengerid  survived  pclass  \\\n444          445         1       3   \n31            32         1       1   \n157          158         0       3   \n119          120         0       3   \n853          854         1       1   \n393          394         1       1   \n603          604         0       3   \n667          668         0       3   \n885          886         0       3   \n169          170         0       3   \n662          663         0       1   \n526          527         1       2   \n335          336         0       3   \n647          648         1       1   \n571          572         1       1   \n60            61         0       3   \n409          410         0       3   \n260          261         0       3   \n600          601         1       2   \n867          868         0       1   \n706          707         1       2   \n194          195         1       1   \n246          247         0       3   \n392          393         0       3   \n623          624         0       3   \n123          124         1       2   \n287          288         0       3   \n881          882         0       3   \n772          773         0       2   \n435          436         1       1   \n\n                                                  name     sex   age  sibsp  \\\n444                  Johannesen-Bratthammer, Mr. Bernt    male   NaN      0   \n31      Spencer, Mrs. William Augustus (Marie Eugenie)  female   NaN      1   \n157                                    Corn, Mr. Harry    male  30.0      0   \n119                  Andersson, Miss. Ellis Anna Maria  female   2.0      4   \n853                          Lines, Miss. Mary Conover  female  16.0      0   \n393                             Newell, Miss. Marjorie  female  23.0      1   \n603                          Torber, Mr. Ernst William    male  44.0      0   \n667                         Rommetvedt, Mr. Knud Paust    male   NaN      0   \n885               Rice, Mrs. William (Margaret Norton)  female  39.0      0   \n169                                      Ling, Mr. Lee    male  28.0      0   \n662                         Colley, Mr. Edward Pomeroy    male  47.0      0   \n526                               Ridsdale, Miss. Lucy  female  50.0      0   \n335                                 Denkoff, Mr. Mitto    male   NaN      0   \n647                Simonius-Blumer, Col. Oberst Alfons    male  56.0      0   \n571      Appleton, Mrs. Edward Dale (Charlotte Lamson)  female  53.0      2   \n60                               Sirayanian, Mr. Orsen    male  22.0      0   \n409                                 Lefebre, Miss. Ida  female   NaN      3   \n260                                  Smith, Mr. Thomas    male   NaN      0   \n600  Jacobsohn, Mrs. Sidney Samuel (Amy Frances Chr...  female  24.0      2   \n867               Roebling, Mr. Washington Augustus II    male  31.0      0   \n706                      Kelly, Mrs. Florence \"Fannie\"  female  45.0      0   \n194          Brown, Mrs. James Joseph (Margaret Tobin)  female  44.0      0   \n246              Lindahl, Miss. Agda Thorilda Viktoria  female  25.0      0   \n392                       Gustafsson, Mr. Johan Birger    male  28.0      2   \n623                        Hansen, Mr. Henry Damsgaard    male  21.0      0   \n123                                Webber, Miss. Susan  female  32.5      0   \n287                               Naidenoff, Mr. Penko    male  22.0      0   \n881                                 Markun, Mr. Johann    male  33.0      0   \n772                                  Mack, Mrs. (Mary)  female  57.0      0   \n435                          Carter, Miss. Lucile Polk  female  14.0      1   \n\n     parch           ticket      fare    cabin embarked  \n444      0            65306    8.1125      NaN        S  \n31       0         PC 17569  146.5208      B78        C  \n157      0  SOTON/OQ 392090    8.0500      NaN        S  \n119      2           347082   31.2750      NaN        S  \n853      1         PC 17592   39.4000      D28        S  \n393      0            35273  113.2750      D36        C  \n603      0           364511    8.0500      NaN        S  \n667      0           312993    7.7750      NaN        S  \n885      5           382652   29.1250      NaN        Q  \n169      0             1601   56.4958      NaN        S  \n662      0             5727   25.5875      E58        S  \n526      0      W./C. 14258   10.5000      NaN        S  \n335      0           349225    7.8958      NaN        S  \n647      0            13213   35.5000      A26        C  \n571      0            11769   51.4792     C101        S  \n60       0             2669    7.2292      NaN        C  \n409      1             4133   25.4667      NaN        S  \n260      0           384461    7.7500      NaN        Q  \n600      1           243847   27.0000      NaN        S  \n867      0         PC 17590   50.4958      A24        S  \n706      0           223596   13.5000      NaN        S  \n194      0         PC 17610   27.7208       B4        C  \n246      0           347071    7.7750      NaN        S  \n392      0          3101277    7.9250      NaN        S  \n623      0           350029    7.8542      NaN        S  \n123      0            27267   13.0000     E101        S  \n287      0           349206    7.8958      NaN        S  \n881      0           349257    7.8958      NaN        S  \n772      0      S.O./P.P. 3   10.5000      E77        S  \n435      2           113760  120.0000  B96 B98        S  "
                    ]
                },
                "mc_idx": 1,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 1
            }
        },
        {
            "source": "def null_count_with_percent(df):\n  total = df.isnull().sum().sort_values(ascending=False)\n  percent = (df.isnull().sum()/df.isnull().count()).sort_values(ascending=False)\n  missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n  return missing_data",
            "mc_idx": 2,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5714285714285714,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 2,
                    ".isnull": 3,
                    ".sum": 2
                },
                "Data_Transform": {
                    ".concat(": 1,
                    ".sort_values": 2,
                    ".concat": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 2,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test))",
            "mc_idx": 3,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    3,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Total   Percent\ncabin          687  0.771044\nage            177  0.198653\nembarked         2  0.002245\npassengerid      0  0.000000\nsurvived         0  0.000000\npclass           0  0.000000\nname             0  0.000000\nsex              0  0.000000\nsibsp            0  0.000000\nparch            0  0.000000\nticket           0  0.000000\nfare             0  0.000000\n             Total   Percent\ncabin          327  0.782297\nage             86  0.205742\nfare             1  0.002392\npassengerid      0  0.000000\npclass           0  0.000000\nname             0  0.000000\nsex              0  0.000000\nsibsp            0  0.000000\nparch            0  0.000000\nticket           0  0.000000\nembarked         0  0.000000\n"
                    ]
                },
                "mc_idx": 3,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 0
            }
        },
        {
            "source": "df_train=df_train.drop(columns='cabin')\ndf_test=df_test.drop(columns='cabin')",
            "mc_idx": 5,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2
                },
                "Data_Transform": {
                    ".drop": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 5,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_train['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['age']=X\n\nImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['age'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['age']=X",
            "mc_idx": 7,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.3333333333333333,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 2
                },
                "Data_Transform": {
                    "transform": 4,
                    ".reshape": 2
                },
                "Model_Train": {
                    ".fit(": 2
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    5,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 7,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 0
            }
        },
        {
            "source": "print(df_train.embarked.value_counts())",
            "mc_idx": 9,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    6,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "embarked\nS    644\nC    168\nQ     77\nName: count, dtype: int64\n"
                    ]
                },
                "mc_idx": 9,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "ImputedModule = SimpleImputer(strategy='constant', fill_value='messing').set_output(transform=\"pandas\")\nX=df_train['embarked'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_train['embarked']=X",
            "mc_idx": 10,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.3333333333333333,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "constant": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    ".reshape": 1
                },
                "Model_Train": {
                    ".fit(": 1
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    7,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 0
            }
        },
        {
            "source": "print(df_test.fare.value_counts())",
            "mc_idx": 12,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    8,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "fare\n7.7500     21\n26.0000    19\n13.0000    17\n8.0500     17\n7.8958     11\n           ..\n7.8208      1\n8.5167      1\n78.8500     1\n52.0000     1\n22.3583     1\nName: count, Length: 169, dtype: int64\n"
                    ]
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 0
            }
        },
        {
            "source": "ImputedModule = SimpleImputer(strategy='mean').set_output(transform=\"pandas\")\nX=df_test['fare'].values.reshape(-1, 1)\nImputedX = ImputedModule.fit(X)\nX = ImputedX.transform(X)\ndf_test['fare']=X",
            "mc_idx": 13,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.3333333333333333,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    ".reshape": 1
                },
                "Model_Train": {
                    ".fit(": 1
                },
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    9,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 13,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 0
            }
        },
        {
            "source": "print(null_count_with_percent(df_train))\nprint(null_count_with_percent(df_test))",
            "mc_idx": 14,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Total  Percent\npassengerid      0      0.0\nsurvived         0      0.0\npclass           0      0.0\nname             0      0.0\nsex              0      0.0\nage              0      0.0\nsibsp            0      0.0\nparch            0      0.0\nticket           0      0.0\nfare             0      0.0\nembarked         0      0.0\n             Total  Percent\npassengerid      0      0.0\npclass           0      0.0\nname             0      0.0\nsex              0      0.0\nage              0      0.0\nsibsp            0      0.0\nparch            0      0.0\nticket           0      0.0\nfare             0      0.0\nembarked         0      0.0\n"
                    ]
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "target='survived'",
            "mc_idx": 17,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "class_counts = df_train[target].value_counts()\nclass_proportions = class_counts / df_train.shape[0]\nclass_proportions = class_proportions.values.tolist()\nclass_proportions_str = [f'{prop:.2%}' for prop in class_proportions]\n\n# Set the color palette\ncolors = sns.color_palette('pastel')[0:len(class_counts)]\n\n# Plot the distribution of the target variable\nplt.figure(figsize=(8, 4))\nsns.countplot(x=target, data=df_train, palette=colors)\nplt.title('Distribution of Target Variable', fontsize=16)\nplt.xlabel(target, fontsize=14)\nplt.ylabel('Count', fontsize=14)\nplt.ylim([0, len(df_train)])\nfor i, count in enumerate(class_counts):\n    plt.text(i, count + 50, class_proportions_str[i], ha='center', fontsize=14, color='black')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nsns.despine()\nplt.show()",
            "mc_idx": 18,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.23076923076923078,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.07692307692307693,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.23076923076923078,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1,
                    "variable": 2
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    "sns.": 3,
                    "shape": 1,
                    "size": 7,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 3
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c012_o000_image_0.png",
                    12,
                    0,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 800x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 18,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 0
            }
        },
        {
            "source": "def survived_bar_plot(feature):\n    plt.figure(figsize = (6,4))\n    sns.barplot(data = df_train , x = feature , y = target).set_title(f\"{feature}  \")\n    plt.show()\n    \ndef survived_table(feature):\n    return df_train[[feature, target]].groupby([feature], as_index=False).mean().sort_values(by=target, ascending=False).style.background_gradient(low=0.75,high=1)\n\ndef survived_hist_plot(feature):\n    plt.figure(figsize = (10,10))\n    sns.histplot(data = df_train , x = feature , hue = target,binwidth=5,palette = sns.color_palette([\"yellow\" , \"green\"]) ,multiple = \"stack\" ).set_title(f\"{feature} Vs \")\n    plt.show()",
            "mc_idx": 19,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.25,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.375,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.125,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.375,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 2
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    "sns.": 3,
                    "size": 2,
                    ".mean": 1,
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1,
                    "stack": 1,
                    ".sort_values": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 3
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 19,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.columns",
            "mc_idx": 20,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    14,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Index(['passengerid', 'survived', 'pclass', 'name', 'sex', 'age', 'sibsp',\n       'parch', 'ticket', 'fare', 'embarked'],\n      dtype='object')"
                    ]
                },
                "mc_idx": 20,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('sex')",
            "mc_idx": 21,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c015_o000_image_1.png",
                    15,
                    0,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('sex')",
            "mc_idx": 22,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea22147820>"
                    ]
                },
                "mc_idx": 22,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('pclass')",
            "mc_idx": 23,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c017_o000_image_2.png",
                    17,
                    0,
                    2
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('pclass')",
            "mc_idx": 24,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    18,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea58a73eb0>"
                    ]
                },
                "mc_idx": 24,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('embarked')",
            "mc_idx": 25,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c019_o000_image_3.png",
                    19,
                    0,
                    3
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 25,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('embarked')",
            "mc_idx": 26,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea58fd54b0>"
                    ]
                },
                "mc_idx": 26,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('sibsp')",
            "mc_idx": 27,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c021_o000_image_4.png",
                    21,
                    0,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 27,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('sibsp')",
            "mc_idx": 28,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea221f4fa0>"
                    ]
                },
                "mc_idx": 28,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "survived_bar_plot('parch')",
            "mc_idx": 29,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c023_o000_image_5.png",
                    23,
                    0,
                    5
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 600x400 with 1 Axes>"
                    ]
                },
                "mc_idx": 29,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('parch')",
            "mc_idx": 30,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    24,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea201157e0>"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 0
            }
        },
        {
            "source": "survived_hist_plot('fare')",
            "mc_idx": 31,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c025_o000_image_6.png",
                    25,
                    0,
                    6
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1000x1000 with 1 Axes>"
                    ]
                },
                "mc_idx": 31,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 0
            }
        },
        {
            "source": "survived_hist_plot('age')",
            "mc_idx": 32,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c026_o000_image_7.png",
                    26,
                    0,
                    7
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1000x1000 with 1 Axes>"
                    ]
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "plot , ax = plt.subplots(1 , 3 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==1] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==2] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-Pclass\")\nsns.histplot(data = df_train.loc[df_train[\"pclass\"]==3] , x = \"age\" , hue = target,binwidth=5,ax = ax[2],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"3-Pclass\")\nplt.show()",
            "mc_idx": 34,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.14285714285714285,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.42857142857142855,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.8571428571428571,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 6,
                    "size": 1
                },
                "Data_Transform": {
                    "stack": 3
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 6
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c027_o000_image_8.png",
                    27,
                    0,
                    8
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1400x400 with 3 Axes>"
                    ]
                },
                "mc_idx": 34,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "plot , ax = plt.subplots(1 ,2 , figsize=(14,4))\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='male'] , x = \"age\" , hue = target,binwidth=5,ax = ax[0],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"1-male\")\nsns.histplot(data = df_train.loc[df_train[\"sex\"]=='female'] , x = \"age\" , hue = target,binwidth=5,ax = ax[1],palette = sns.color_palette([\"yellow\" , \"green\"]),multiple = \"stack\").set_title(\"2-female\")\nplt.show()",
            "mc_idx": 35,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.2,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.4,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.8,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 4,
                    "size": 1
                },
                "Data_Transform": {
                    "stack": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 4
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c028_o000_image_9.png",
                    28,
                    0,
                    9
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1400x400 with 2 Axes>"
                    ]
                },
                "mc_idx": 35,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['family_size'] = df_train['sibsp'] + df_train['parch'] + 1\ndf_test['family_size'] = df_test['sibsp'] + df_test['parch'] + 1",
            "mc_idx": 37,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 37,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "survived_table('family_size')",
            "mc_idx": 38,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    30,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea1fb96800>"
                    ]
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['is_alone'] = df_train['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_train['family_small'] = df_train['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_train['family_med'] = df_train['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_train['family_big'] = df_train['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\n\ndf_test['is_alone'] = df_test['family_size'].map(lambda x: 1 if x == 1 else 0).astype(bool)\ndf_test['family_small'] = df_test['family_size'].map(lambda x: 1 if x == 2 else 0)\ndf_test['family_med'] = df_test['family_size'].map(lambda x: 1 if 3 <= x <= 4 else 0)\ndf_test['family_big'] = df_test['family_size'].map(lambda x: 1 if x >= 5 else 0)\n\n\ndf_train=df_train.drop(columns=['family_size','parch','sibsp'])\ndf_test=df_test.drop(columns=['family_size','parch','sibsp'])\n\n",
            "mc_idx": 39,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.6,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2,
                    "size": 10
                },
                "Data_Transform": {
                    ".map(": 8,
                    ".astype(": 2,
                    ".drop": 2,
                    ".map": 8
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    31,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 39,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['title']=df_train.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_train['title'].value_counts() < 5)\ndf_train['title'] = df_train['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\ndf_test['title']=df_test.name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_names = (df_test['title'].value_counts() < 5)\ndf_test['title'] = df_test['title'].apply(lambda x: 'rare' if title_names.loc[x] == True else x)\n\n\nsurvived_table('title')",
            "mc_idx": 40,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.5,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 2
                },
                "Exploratory_Data_Analysis": {
                    "value_counts()": 2,
                    ".value_counts": 2
                },
                "Data_Transform": {
                    ".apply(": 2,
                    ".apply": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    32,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7eea1fadef50>"
                    ]
                },
                "mc_idx": 40,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['is_mrs'] = df_train['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_train['is_miss'] = df_train['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_train['is_master'] = df_train['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\n\ndf_test['is_mrs'] = df_test['title'].map(lambda x: 1 if x == 'Mrs' else 0)\ndf_test['is_miss'] = df_test['title'].map(lambda x: 1 if x == 'Miss' else 0)\ndf_test['is_master'] = df_test['title'].map(lambda x: 1 if x == 'Master' else 0)\n\n\ndf_train=df_train.drop(columns=['title','name'])\ndf_test=df_test.drop(columns=['title','name'])\n\n\n",
            "mc_idx": 41,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.14285714285714285,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2
                },
                "Data_Transform": {
                    ".map(": 6,
                    ".drop": 2,
                    ".map": 6
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 41,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "df_train=df_train.drop(columns=['ticket'])\ndf_test=df_test.drop(columns=['ticket'])\n\ndf_train",
            "mc_idx": 42,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 2
                },
                "Data_Transform": {
                    ".drop": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     passengerid  survived  pclass     sex        age     fare embarked  \\\n0              1         0       3    male  22.000000   7.2500        S   \n1              2         1       1  female  38.000000  71.2833        C   \n2              3         1       3  female  26.000000   7.9250        S   \n3              4         1       1  female  35.000000  53.1000        S   \n4              5         0       3    male  35.000000   8.0500        S   \n..           ...       ...     ...     ...        ...      ...      ...   \n886          887         0       2    male  27.000000  13.0000        S   \n887          888         1       1  female  19.000000  30.0000        S   \n888          889         0       3  female  29.699118  23.4500        S   \n889          890         1       1    male  26.000000  30.0000        C   \n890          891         0       3    male  32.000000   7.7500        Q   \n\n     is_alone  family_small  family_med  family_big  is_mrs  is_miss  \\\n0       False             1           0           0       0        0   \n1       False             1           0           0       1        0   \n2        True             0           0           0       0        1   \n3       False             1           0           0       1        0   \n4        True             0           0           0       0        0   \n..        ...           ...         ...         ...     ...      ...   \n886      True             0           0           0       0        0   \n887      True             0           0           0       0        1   \n888     False             0           1           0       0        1   \n889      True             0           0           0       0        0   \n890      True             0           0           0       0        0   \n\n     is_master  \n0            0  \n1            0  \n2            0  \n3            0  \n4            0  \n..         ...  \n886          0  \n887          0  \n888          0  \n889          0  \n890          0  \n\n[891 rows x 14 columns]"
                    ]
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['fare_band'] = pd.qcut(df_train['fare'], 4)\ndf_train[['fare_band', target]].groupby(['fare_band'], as_index=False).mean().sort_values(by='fare_band', ascending=False)",
            "mc_idx": 43,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    ".mean": 1,
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1,
                    ".qcut(": 1,
                    ".sort_values": 1,
                    ".qcut": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "         fare_band  survived\n3  (31.0, 512.329]  0.581081\n2   (14.454, 31.0]  0.454955\n1   (7.91, 14.454]  0.303571\n0   (-0.001, 7.91]  0.197309"
                    ]
                },
                "mc_idx": 43,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.loc[ df_train['fare'] <= 7.91, 'fare'] = 0\ndf_train.loc[(df_train['fare'] > 7.91) & (df_train['fare'] <= 14.454), 'fare'] = 1\ndf_train.loc[(df_train['fare'] > 14.454) & (df_train['fare'] <= 31), 'fare']   = 2\ndf_train.loc[ df_train['fare'] > 31, 'fare'] = 3\ndf_train['fare'] = df_train['fare'].astype(int)\n\n\n\ndf_test.loc[ df_test['fare'] <= 7.91, 'fare'] = 0\ndf_test.loc[(df_test['fare'] > 7.91) & (df_test['fare'] <= 14.454), 'fare'] = 1\ndf_test.loc[(df_test['fare'] > 14.454) & (df_test['fare'] <= 31), 'fare']   = 2\ndf_test.loc[ df_test['fare'] > 31, 'fare'] = 3\ndf_test['fare'] = df_test['fare'].astype(int)\n\n\ndf_train=df_train.drop(columns=['fare_band'])\ndf_train",
            "mc_idx": 44,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {
                    ".astype(": 2,
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    36,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     passengerid  survived  pclass     sex        age  fare embarked  \\\n0              1         0       3    male  22.000000     0        S   \n1              2         1       1  female  38.000000     3        C   \n2              3         1       3  female  26.000000     1        S   \n3              4         1       1  female  35.000000     3        S   \n4              5         0       3    male  35.000000     1        S   \n..           ...       ...     ...     ...        ...   ...      ...   \n886          887         0       2    male  27.000000     1        S   \n887          888         1       1  female  19.000000     2        S   \n888          889         0       3  female  29.699118     2        S   \n889          890         1       1    male  26.000000     2        C   \n890          891         0       3    male  32.000000     0        Q   \n\n     is_alone  family_small  family_med  family_big  is_mrs  is_miss  \\\n0       False             1           0           0       0        0   \n1       False             1           0           0       1        0   \n2        True             0           0           0       0        1   \n3       False             1           0           0       1        0   \n4        True             0           0           0       0        0   \n..        ...           ...         ...         ...     ...      ...   \n886      True             0           0           0       0        0   \n887      True             0           0           0       0        1   \n888     False             0           1           0       0        1   \n889      True             0           0           0       0        0   \n890      True             0           0           0       0        0   \n\n     is_master  \n0            0  \n1            0  \n2            0  \n3            0  \n4            0  \n..         ...  \n886          0  \n887          0  \n888          0  \n889          0  \n890          0  \n\n[891 rows x 14 columns]"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 36,
                "o_idx": 0
            }
        },
        {
            "source": "df_train['age_band'] = pd.cut(df_train['age'], 5)\ndf_train[['age_band', target]].groupby(['age_band'], as_index=False).mean().sort_values(by='age_band', ascending=True)",
            "mc_idx": 45,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    ".mean": 1,
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1,
                    ".cut(": 1,
                    ".sort_values": 1,
                    ".cut": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    37,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "           age_band  survived\n0    (0.34, 16.336]  0.550000\n1  (16.336, 32.252]  0.344168\n2  (32.252, 48.168]  0.404255\n3  (48.168, 64.084]  0.434783\n4    (64.084, 80.0]  0.090909"
                    ]
                },
                "mc_idx": 45,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 37,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.loc[ df_train['age'] <= 16, 'age'] = 0\ndf_train.loc[(df_train['age'] > 16) & (df_train['age'] <= 32), 'age'] = 1\ndf_train.loc[(df_train['age'] > 32) & (df_train['age'] <= 48), 'age'] = 2\ndf_train.loc[(df_train['age'] > 48) & (df_train['age'] <= 64), 'age'] = 3\ndf_train.loc[ df_train['age'] > 64, 'age']\n\ndf_test.loc[ df_test['age'] <= 16, 'age'] = 0\ndf_test.loc[(df_test['age'] > 16) & (df_test['age'] <= 32), 'age'] = 1\ndf_test.loc[(df_test['age'] > 32) & (df_test['age'] <= 48), 'age'] = 2\ndf_test.loc[(df_test['age'] > 48) & (df_test['age'] <= 64), 'age'] = 3\ndf_test.loc[ df_test['age'] > 64, 'age']\n\ndf_train=df_train.drop(columns=['age_band'])",
            "mc_idx": 46,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    38,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 46,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 38,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.to_csv('train_backup.csv')\ndf_test.to_csv('test_backup.csv')",
            "mc_idx": 47,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 2,
                    "to_csv": 2
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    39,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 47,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 39,
                "o_idx": 0
            }
        },
        {
            "source": "cat_feat=['sex','embarked','pclass']\n\ncats_encoded=[]\n\nfor cat in cat_feat:\n  df_train[cat]= df_train[cat].astype('category')\n  df_train[cat+'_encoded'] = df_train[cat].cat.codes\n    \n  df_test[cat]= df_test[cat].astype('category')\n  df_test[cat+'_encoded'] = df_test[cat].cat.codes\n    \n  cats_encoded.append(cat+\"_encoded\")\n\n\none_hot_encoded_data = pd.get_dummies(df_train[cats_encoded], columns =cats_encoded)\ndf_train[one_hot_encoded_data.columns]=one_hot_encoded_data.values\ndf_train=df_train.drop(columns=cat_feat)\ndf_train=df_train.drop(columns=cats_encoded)\n\none_hot_encoded_data_test = pd.get_dummies(df_test[cats_encoded], columns =cats_encoded)\ndf_test[one_hot_encoded_data_test.columns]=one_hot_encoded_data_test.values\ndf_test=df_test.drop(columns=cat_feat)\ndf_test=df_test.drop(columns=cats_encoded)\n\n\n\nprint(df_train.shape)\nprint(df_train.columns)\n\nprint(df_test.shape)\nprint(df_test.columns)\n",
            "mc_idx": 49,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.16666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 10,
                    "shape": 2
                },
                "Data_Transform": {
                    ".astype(": 2,
                    ".drop": 4,
                    ".get_dummies": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    40,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 20)\nIndex(['passengerid', 'survived', 'age', 'fare', 'is_alone', 'family_small',\n       'family_med', 'family_big', 'is_mrs', 'is_miss', 'is_master',\n       'sex_encoded_0', 'sex_encoded_1', 'embarked_encoded_0',\n       'embarked_encoded_1', 'embarked_encoded_2', 'embarked_encoded_3',\n       'pclass_encoded_0', 'pclass_encoded_1', 'pclass_encoded_2'],\n      dtype='object')\n(418, 18)\nIndex(['passengerid', 'age', 'fare', 'is_alone', 'family_small', 'family_med',\n       'family_big', 'is_mrs', 'is_miss', 'is_master', 'sex_encoded_0',\n       'sex_encoded_1', 'embarked_encoded_0', 'embarked_encoded_1',\n       'embarked_encoded_2', 'pclass_encoded_0', 'pclass_encoded_1',\n       'pclass_encoded_2'],\n      dtype='object')\n"
                    ]
                },
                "mc_idx": 49,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 40,
                "o_idx": 0
            }
        },
        {
            "source": "df_train.embarked_encoded_3.value_counts()",
            "mc_idx": 50,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    41,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "embarked_encoded_3\nFalse    889\nTrue       2\nName: count, dtype: int64"
                    ]
                },
                "mc_idx": 50,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 41,
                "o_idx": 0
            }
        },
        {
            "source": "df_train=df_train.drop(columns='embarked_encoded_3')\n\nprint(df_train.shape)\n\nprint(df_test.shape)\n",
            "mc_idx": 52,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.6666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "shape": 2
                },
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    42,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 19)\n(418, 18)\n"
                    ]
                },
                "mc_idx": 52,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 42,
                "o_idx": 0
            }
        },
        {
            "source": "df_train",
            "mc_idx": 53,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    43,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     passengerid  survived  age  fare  is_alone  family_small  family_med  \\\n0              1         0  1.0     0     False             1           0   \n1              2         1  2.0     3     False             1           0   \n2              3         1  1.0     1      True             0           0   \n3              4         1  2.0     3     False             1           0   \n4              5         0  2.0     1      True             0           0   \n..           ...       ...  ...   ...       ...           ...         ...   \n886          887         0  1.0     1      True             0           0   \n887          888         1  1.0     2      True             0           0   \n888          889         0  1.0     2     False             0           1   \n889          890         1  1.0     2      True             0           0   \n890          891         0  1.0     0      True             0           0   \n\n     family_big  is_mrs  is_miss  is_master  sex_encoded_0  sex_encoded_1  \\\n0             0       0        0          0          False           True   \n1             0       1        0          0           True          False   \n2             0       0        1          0           True          False   \n3             0       1        0          0           True          False   \n4             0       0        0          0          False           True   \n..          ...     ...      ...        ...            ...            ...   \n886           0       0        0          0          False           True   \n887           0       0        1          0           True          False   \n888           0       0        1          0           True          False   \n889           0       0        0          0          False           True   \n890           0       0        0          0          False           True   \n\n     embarked_encoded_0  embarked_encoded_1  embarked_encoded_2  \\\n0                 False               False                True   \n1                  True               False               False   \n2                 False               False                True   \n3                 False               False                True   \n4                 False               False                True   \n..                  ...                 ...                 ...   \n886               False               False                True   \n887               False               False                True   \n888               False               False                True   \n889                True               False               False   \n890               False                True               False   \n\n     pclass_encoded_0  pclass_encoded_1  pclass_encoded_2  \n0               False             False              True  \n1                True             False             False  \n2               False             False              True  \n3                True             False             False  \n4               False             False              True  \n..                ...               ...               ...  \n886             False              True             False  \n887              True             False             False  \n888             False             False              True  \n889              True             False             False  \n890             False             False              True  \n\n[891 rows x 19 columns]"
                    ]
                },
                "mc_idx": 53,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 43,
                "o_idx": 0
            }
        },
        {
            "source": "plt.figure(figsize=(15,13))\ncor = df_train.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.CMRmap_r)\nplt.show()",
            "mc_idx": 55,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.16666666666666666,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".corr": 2,
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.heatmap": 1,
                    ".heatmap(": 1,
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c044_o000_image_10.png",
                    44,
                    0,
                    10
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1500x1300 with 2 Axes>"
                    ]
                },
                "mc_idx": 55,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 44,
                "o_idx": 0
            }
        },
        {
            "source": "# selected \ndf_tra=df_train.copy()",
            "mc_idx": 56,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    45,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 56,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 45,
                "o_idx": 0
            }
        },
        {
            "source": "X=df_train[df_train.columns.difference(['passengerid',target])].values\nprint(X.shape)\nY=df_train[target].values\nprint(Y.shape)",
            "mc_idx": 59,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.6666666666666666,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "shape": 2
                },
                "Data_Transform": {
                    ".diff": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    46,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 17)\n(891,)\n"
                    ]
                },
                "mc_idx": 59,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 46,
                "o_idx": 0
            }
        },
        {
            "source": "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay,roc_auc_score\n\nparam ={'lambda': 1.2475525176000515,\n        'learning_rate': 0.05,\n        \"objective\": \"binary:logistic\",\n        'colsample_bytree': 0.9,\n        'subsample': 1.0, \n        'max_depth': 2,\n        'min_child_weight': 3,\n        \"eval_metric\": \"auc\"\n        \n       }\n\n\n\n\ndef xgboost_bin_classif(X, y, test_size=0.2, random_state=42, num_round=100):\n\n    # Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n\n    # Create DMatrix for XGBoost\n    dtrain = xgb.DMatrix(X_train, label=y_train)\n    dtest = xgb.DMatrix(X_test, label=y_test)\n\n    watchlist = [(dtrain, 'train'), (dtest, 'eval')]\n\n\n    num_round = 5000\n    evals_result = {}\n    bst = xgb.train(params=param, dtrain=dtrain, num_boost_round=num_round,\n                    evals_result=evals_result,\n                    maximize=False, obj=None,\n                    evals=watchlist, verbose_eval=200)\n    y_pred = bst.predict(dtest)\n    test_auc = roc_auc_score(y_test, y_pred)\n    print(f\"auc: {test_auc}\")\n    percentiles = np.arange(1, 100, 1)\n    base_rate = (y == 1).sum() / y.shape[0]\n    \n    \n    results = []\n    for i,percentile in enumerate(percentiles):\n        cutoff = np.percentile(y_pred, percentile)\n        predictions = np.where(y_pred >= cutoff, 1, 0)\n        cm = confusion_matrix(y_test, predictions, labels=[0,1]).copy()\n\n        tp = cm[0,0]\n        precision = tp / cm[:,0].sum()\n        recall = tp / cm[0,:].sum()\n        accuracy = cm.diagonal().sum() / cm.sum()\n        f1score = 2 * (precision * recall) / (precision + recall)\n        lift = precision/base_rate\n\n        res = dict(\n            percentile=percentile,\n            cutoff = cutoff,\n            precision=precision,\n            recall=recall,\n            lift=lift,\n            f1score=f1score,\n            accuracy=accuracy,\n        )\n\n        results.append(res)\n    \n    results = pd.DataFrame(results)\n    cut_off=0.415098\n    predictions = np.where(y_pred > cut_off, 1, 0)\n    cm = confusion_matrix(y_test, predictions, labels=[1,0])\n\n    # df_result = pd.DataFrame({\n    # 'target': y_test,\n    # 'predected': y_pred\n    #  })\n\n\n\n\n    return bst,test_auc,results,cm ",
            "mc_idx": 61,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.45454545454545453,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.45454545454545453,
                "Data_Transform": 0.3181818181818182,
                "Model_Train": 0.09090909090909091,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.045454545454545456,
                "Hyperparameter_Tuning": 0.18181818181818182,
                "Visualization": 0.0,
                "Debug": 0.045454545454545456,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "np.percentile": 1,
                    "shape": 1,
                    "size": 3,
                    ".sum": 5
                },
                "Data_Transform": {
                    "tile": 7
                },
                "Model_Train": {
                    "train_test_split": 1,
                    ".train(": 1
                },
                "Model_Evaluation": {
                    "confusion_matrix": 6,
                    "precision": 6,
                    "recall": 5,
                    "roc_auc_score": 4,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {
                    "param": 3,
                    "train_test_split": 1
                },
                "Visualization": {},
                "Debug": {
                    "testing": 1
                },
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    47,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 61,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 47,
                "o_idx": 0
            }
        },
        {
            "source": "bst,auc,results,cm=xgboost_bin_classif(X,Y)",
            "mc_idx": 62,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    48,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "[0]\ttrain-auc:0.81699\teval-auc:0.80631\n[200]\ttrain-auc:0.88732\teval-auc:0.89607\n[400]\ttrain-auc:0.89328\teval-auc:0.89846\n[600]\ttrain-auc:0.89659\teval-auc:0.89575\n[800]\ttrain-auc:0.89872\teval-auc:0.89344\n[1000]\ttrain-auc:0.89889\teval-auc:0.89408\n[1200]\ttrain-auc:0.90186\teval-auc:0.89858\n[1400]\ttrain-auc:0.90352\teval-auc:0.89923\n[1600]\ttrain-auc:0.90372\teval-auc:0.89910\n[1800]\ttrain-auc:0.90467\teval-auc:0.89910\n[2000]\ttrain-auc:0.90562\teval-auc:0.90013\n[2200]\ttrain-auc:0.90644\teval-auc:0.90167\n[2400]\ttrain-auc:0.90779\teval-auc:0.90296\n[2600]\ttrain-auc:0.90856\teval-auc:0.90245\n[2800]\ttrain-auc:0.90904\teval-auc:0.90322\n[3000]\ttrain-auc:0.90904\teval-auc:0.90347\n[3200]\ttrain-auc:0.90961\teval-auc:0.90322\n[3400]\ttrain-auc:0.90967\teval-auc:0.90438\n[3600]\ttrain-auc:0.91050\teval-auc:0.90257\n[3800]\ttrain-auc:0.91073\teval-auc:0.90283\n[4000]\ttrain-auc:0.91125\teval-auc:0.90347\n[4200]\ttrain-auc:0.91132\teval-auc:0.90347\n[4400]\ttrain-auc:0.91175\teval-auc:0.90167\n[4600]\ttrain-auc:0.91231\teval-auc:0.90193\n[4800]\ttrain-auc:0.91245\teval-auc:0.90206\n[4999]\ttrain-auc:0.91261\teval-auc:0.90219\nauc: 0.9021879021879022\n"
                    ]
                },
                "mc_idx": 62,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 48,
                "o_idx": 0
            }
        },
        {
            "source": "disp = ConfusionMatrixDisplay(confusion_matrix=cm,\n                              display_labels=[1,0])\ndisp.plot()",
            "mc_idx": 63,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".plot(": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {
                    "confusion_matrix": 2
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0029_c049_o001_image_11.png",
                    49,
                    1,
                    11
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7eea1ea41ae0>",
                        "<Figure size 640x480 with 2 Axes>"
                    ]
                },
                "mc_idx": 63,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 49,
                "o_idx": 1
            }
        },
        {
            "source": "x = results[results.percentile.isin( np.arange(0, 100, 5) )]\nx.set_index(\"percentile\")",
            "mc_idx": 64,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    "tile": 2,
                    ".set_index": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    50,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "              cutoff  precision    recall      lift   f1score  accuracy\npercentile                                                             \n5           0.017676   1.000000  0.076190  2.605263  0.141593  0.458101\n10          0.069727   1.000000  0.161905  2.605263  0.278689  0.508380\n15          0.095428   0.961538  0.238095  2.505061  0.381679  0.547486\n20          0.105130   0.967742  0.285714  2.521222  0.441176  0.575419\n25          0.107818   0.947368  0.342857  2.468144  0.503497  0.603352\n30          0.107818   0.947368  0.342857  2.468144  0.503497  0.603352\n35          0.160297   0.952381  0.571429  2.481203  0.714286  0.731844\n40          0.180408   0.952381  0.571429  2.481203  0.714286  0.731844\n45          0.228289   0.925926  0.714286  2.412281  0.806452  0.798883\n50          0.298299   0.921348  0.780952  2.400355  0.845361  0.832402\n55          0.378290   0.896907  0.828571  2.336679  0.861386  0.843575\n60          0.454721   0.867925  0.876190  2.261172  0.872038  0.849162\n65          0.599188   0.818966  0.904762  2.133621  0.859729  0.826816\n70          0.740452   0.808333  0.923810  2.105921  0.862222  0.826816\n75          0.890651   0.746269  0.952381  1.944226  0.836820  0.782123\n80          0.944830   0.706294  0.961905  1.840081  0.814516  0.743017\n85          0.953873   0.680000  0.971429  1.771579  0.800000  0.715084\n90          0.967649   0.639752  0.980952  1.666721  0.774436  0.664804\n95          0.986942   0.611765  0.990476  1.593808  0.756364  0.625698"
                    ]
                },
                "mc_idx": 64,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 50,
                "o_idx": 0
            }
        },
        {
            "source": "submission_test =bst.predict(xgb.DMatrix(df_test[df_test.columns.difference(['passengerid'])].values))\n",
            "mc_idx": 65,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {
                    ".diff": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    51,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 65,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 51,
                "o_idx": 0
            }
        },
        {
            "source": "cut_off=0.415098\npredictions = np.where(submission_test > cut_off, 1, 0)\n",
            "mc_idx": 66,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    52,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 66,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 52,
                "o_idx": 0
            }
        },
        {
            "source": "pd.Series(predictions).value_counts()",
            "mc_idx": 67,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    53,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "0    252\n1    166\nName: count, dtype: int64"
                    ]
                },
                "mc_idx": 67,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 53,
                "o_idx": 0
            }
        },
        {
            "source": "print(predictions.shape)\n\nsub=pd.read_csv('/kaggle/input/titanic/gender_submission.csv')\n\n# Add predictions\nsub['Survived']=predictions\n\nsub.to_csv('submission.csv', index=False)",
            "mc_idx": 69,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.25,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.5,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 2,
                    "pd.read_": 2
                },
                "Exploratory_Data_Analysis": {
                    "shape": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    54,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(418,)\n"
                    ]
                },
                "mc_idx": 69,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 54,
                "o_idx": 0
            }
        }
    ],
    "markdown_cells": [
        {
            "source": "**i'll drop capin because the null values are more than 40%**",
            "mc_idx": 4,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**handle age null values**",
            "mc_idx": 6,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**handle embarked null values on train data**",
            "mc_idx": 8,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**handle fare null on test data**",
            "mc_idx": 11,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**no more null data !!**",
            "mc_idx": 15,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# **EDA**",
            "mc_idx": 16,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**age vs pclass vs target**",
            "mc_idx": 33,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# **Feature Engineering**",
            "mc_idx": 36,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**One Hot Encoding**",
            "mc_idx": 48,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**embarked_encoded_3 in train data is the null values i handled ,ill drop it**",
            "mc_idx": 51,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**Correlation between data and target**",
            "mc_idx": 54,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**VERY GOOD !! I have good correlations with the target**",
            "mc_idx": 57,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# **Split data to train and test**",
            "mc_idx": 58,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# Modelling",
            "mc_idx": 60,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# Submission",
            "mc_idx": 68,
            "nb_idx": 29,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        }
    ],
    "sim_matrix": [
        0.8904916048049927,
        0.955387532711029,
        0.9461156129837036,
        0.9109249711036682,
        0.9559507966041565,
        0.8811115622520447,
        0.9015759825706482,
        0.8866829872131348,
        0.8924026489257812,
        0.887102484703064,
        0.9408953189849854,
        0.8753691911697388,
        0.8899905681610107,
        0.8692275285720825,
        0.8900461792945862,
        0.9464778304100037,
        0.9313017725944519,
        0.8811115622520447,
        0.8909317255020142,
        0.960492730140686,
        0.9345996379852295,
        0.8866829872131348,
        0.904671311378479,
        0.8774062395095825,
        0.9071518778800964,
        0.942659318447113,
        0.9441448450088501,
        0.9131300449371338,
        0.9060837030410767,
        0.9999999403953552,
        0.9197006821632385,
        0.9272335171699524,
        0.8655627965927124,
        0.9456084370613098,
        0.8795380592346191,
        0.9574611783027649,
        0.8795380592346191,
        0.9254634380340576,
        0.893729031085968,
        0.9699852466583252,
        0.9664061069488525,
        0.9383172392845154,
        0.9342865943908691,
        0.9345996379852295,
        0.888772189617157,
        0.8774062395095825,
        0.8999148011207581,
        0.8655627965927124,
        0.8995348215103149,
        0.9051491022109985,
        0.8763294219970703,
        0.9574611783027649,
        0.9464778304100037,
        0.9181956052780151,
        0.9522002339363098,
        0.8746084570884705,
        0.940233051776886,
        0.906592071056366,
        0.8897717595100403,
        0.9419151544570923,
        0.898418664932251,
        0.8939050436019897,
        0.8742519617080688,
        0.8889096975326538,
        0.9465810060501099,
        0.8846358060836792,
        0.9644814729690552,
        0.716614305973053,
        0.8966383337974548,
        0.8870649933815002,
        0.9131897687911987,
        0.8943422436714172,
        0.9144269227981567,
        0.8699166178703308,
        0.8895590305328369,
        0.9266617298126221,
        0.8775808811187744,
        0.913377583026886,
        0.8834465742111206,
        0.8727216124534607,
        0.8759298324584961,
        0.8751763105392456,
        0.9039448499679565,
        0.8572635650634766,
        0.9569054841995239,
        0.9029450416564941,
        0.8916875123977661,
        0.904671311378479,
        0.9317882657051086,
        0.9700482487678528,
        0.9254634380340576,
        0.960492730140686,
        0.9456084370613098,
        0.9025038480758667,
        0.8617474436759949,
        0.9659568667411804,
        0.8633900880813599,
        0.8429593443870544
    ],
    "cell_sim_matrix": [],
    "nb_order": [],
    "summary_data_VA": null
}
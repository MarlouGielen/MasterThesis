{
    "nb_idx": 55,
    "nb_name": "d0055",
    "filename": "titanic-eda-machine-deep-learning.ipynb",
    "filepath": "data/data_Kaggle/raw/titanic-eda-machine-deep-learning.ipynb",
    "source": "<a id=\"1\"></a>\n# <div style=\"text-align:center; padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udea2titanic data analysis \ud83d\udcc8& Machine & Deep Learning \ud83d\udca1</b></div> \n ![](https://static.timesofisrael.com/atlantajewishtimes/uploads/2022/03/DT6RD9.jpg) \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Table of Contents</b></div> \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> Introduction</b> <br>\n    * <b><mark>0.</mark></b>-------Import Libraries<br>\n    * <b><mark>1.</mark></b>-------Visuallization<br>\n     - <b><mark>1.1</mark></b>------Check Missing Value<br>\n     - <b><mark>1.2</mark></b>------Make Graph - Which is show \"feature\"- Dead<br>\n     -<b><mark>1.3.1</mark></b>---Name<br>\n     - <b><mark>1.3.2</mark></b>---Sex<br>\n     - <b><mark>1.3.3</mark></b>---Embarked<br>\n     - <b><mark>1.3.4</mark></b>---Fare<br>\n     - <b><mark>1.3.5</mark></b>---Cabin<br>\n     - <b><mark>1.3.6</mark></b>---Family Size<br>\n    * <b><mark>2.</mark></b>------Machine Learning<br>\n     - <b><mark>2.1</mark></b>-----KNN<br>\n     - <b><mark>2.2</mark></b>-----Decision Tree<br>\n     - <b><mark>2.3</mark></b>-----Random Forrest<br>\n     - <b><mark>2.4</mark></b>-----Naive Bayes<br>\n     - <b><mark>2.5</mark></b>-----SVM<br>\n     - <b><mark>2.6</mark></b>-----Machine Learning Result<br>\n    * <b><mark>3.</mark></b>-------Submission \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Introduction</b></div> \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b> In this notebook, I will do data analysis, EDA and Machine Learning.<br>\nI use Python language in this notebook.<br>\n    <br>In Data Analysis, I will get the most valuable result from each column. For doing this, I will process Data through variable ways. You can check how doing it in this notebook\n    <br>\n    <br>\n    And I'll use kinds of Machine Learning.Based on transformated Data, get KNN, Decision Tree, random forrest, Naive Bayes, SVM accuracy score.\n    compare its scores and submit the highest score among it.\n    <br>\n    <br>\n    And using tensorflow, predict result by deep learning model. \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Columns</b></div>    \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> <mark>Survival</mark></b> - Survival   (0 = No , 1 = Yes) <br>\n* <b> <mark>pclass</mark></b> - Ticket class (1 = 1st, 2 = 2nd, 3 = 3rd)<br>\n* <b> <mark>sex</mark></b> - sex <br>\n* <b> <mark>Age</mark></b> - Age in years <br>\n* <b> <mark>sibsp</mark></b> - # of siblings / spouses aboard the Titanic <br>\n* <b> <mark>parch</mark></b> - # of parents / children aboard the Titanic<br>\n* <b> <mark>ticket</mark></b> - Ticket number<br>\n* <b> <mark>fare</mark></b>- Passenger fare<br>\n* <b> <mark>cabin</mark></b> - Cabin number<br>\n* <b> <mark>embarked</mark></b> - Port of Embarkation  (C = Cherbourg, Q = Queenstown, S = Southampton)<br> \n <!-- # <div style=\"text-align: left; font-family:timeroman;\"> | Import Libraries </div> -->\n<!-- # <div style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </div> -->\n<!-- > <h1 style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </h1> -->\n<!-- # <b style='color:blue'> 0. Import Libraries </b> -->\n<!-- # <div style=' font-family:timeroman;'> 0. Import Libraries and Data </b> --> \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd60. Import Libraries</b></div>    \n #data\nimport pandas as pd\nimport numpy as np\n\n#visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno \n train_df = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntest_df = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ntrain_df.head() \n test_df.head() \n <b> column explanation \n # survived = 0 - d , 1 - alive\n# pclass = Ticket class\n# sibsp = Wife, uncle, etc. on Titanic. If it's zero, you'll be alone.\n# parch = parent + childer\n# embarked  = port of Embarktion \n print(train_df.shape)\nprint(test_df.shape) \n print(\"train= \",train_df.info()) \n print(\"test= \",test_df.info()) \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd61. Visuallization </b></div>    \n <a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.1 Check missing value</b></div> \n print(train_df.isnull().sum())\nmsno.matrix(train_df).set_title(\"Train set\",fontsize=20) \n print(test_df.isnull().sum())\nmsno.matrix(test_df).set_title(\"Train set\",fontsize=20) \n <a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.2 Make Graph - Which is show \"feature\"- Dead. </b></div> \n def bar_chart(feature):\n    survived = train_df[train_df[\"Survived\"]==1][feature].value_counts()\n    dead = train_df[train_df[\"Survived\"]==0][feature].value_counts()\n    df = pd.DataFrame([survived,dead])\n    df.index = [\"Survived\",\"Dead\"]\n    df.plot(kind=\"bar\",stacked=True, figsize=(20,7),title=feature,fontsize=20)\nfor a in [\"Sex\",\"Pclass\",\"SibSp\"]:\n    bar_chart(a) \n <a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.3 Feature Engineering</b></div>  \n\n<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>the process of turning data measurements into feature bacters\nFrom a person's point of view, text is easy to understand, but computers are much easier to change to numbers, so it means the process of changing to numbers. \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.1  </b> Name </h2> \n train_df.head(10)\n#The name doesn't reflect much on the result, but Mr. and Mrs in the name imply information about whether or not they are married, so only extract it. \n Remove names other than Mr or Mrs etc. \n train_test_df = [train_df,test_df]\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Name\"].str.extract('([A-Za-z]+)\\.',expand=False) \n train_df[\"Title\"] \n train_df[\"Title\"].value_counts() \n title = train_df[\"Title\"].value_counts()\nplt.figure(figsize =(20,5))\nsns.barplot(x = title.index, y = title.values) \n # use another library to more various visualization\nimport plotly.express as px\npx.bar(x = title.index, y = title.values) \n title_mapping = {\n    'Mr': 0, \"Miss\":1,\"Mrs\":2,\"Master\":3,\"Dr\":3,\"Rev\":3,\"Col\":3,\"Major\":3,\"Mile\":3,\"Countess\":3,\"Ms\":3,\"Lady\":3,\"Johnkheer\":3,\"Don\":3,\"Dona\":3,\"Mme\":3,\"Capt\":3,\"Sir\":3\n}\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Title\"].map(title_mapping) \n train_df.head() \n bar_chart(\"Title\") \n train_df \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.2  </b> Sex </h2> \n sex_mapping = {\"male\":0,\"female\":1}\nfor dataset in train_test_df:\n    dataset[\"Sex\"] = dataset[\"Sex\"].map(sex_mapping) \n bar_chart(\"Sex\") \n <b>There are several NaN values for age. I can substitute those values for the total average age. But since we've divided them into categories by sex from Name, we substitute them to obtain the average age of a man and woman, if the gender of a person with NaN value is male, and if it's female, we substitute the average age of a man's average age. \n # use median get the average age\ntrain_df[\"Age\"].fillna(train_df.groupby('Title')['Age'].transform(\"median\"),inplace=True)\ntest_df[\"Age\"].fillna(test_df.groupby('Title')['Age'].transform(\"median\"),inplace=True) \n # visualization death - age\nfacet = sns.FacetGrid(train_df, hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df['Age'].max()))\nfacet.add_legend()\n\nplt.show() \n <b>Both the most dead age group and the most surviving age group are in their 20s and mid-30s. People in their 0s to 10s and late 30s can see that there are more dead people. \n # visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(0,20) # to limitation X boundary, we can see the graph more specifically \n # visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(20,30) \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>1.3.2.1 binning:</b><br>\nTechnology that weave into categories if it don't give much information.\nI will binning the Age by age. following code is the way how I did it.</div> \n train_df \n df_2 = train_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(891):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a <= 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\n        \ntrain_df[\"Age\"] = df_2[\"Age\"]\ntrain_df \n <b>I devided \"age\" into 5 parts.<br>\n<br>  0-16 years old - 1\n<br>  16-26 years old - 2\n<br>  26-36 years old - 3\n<br>  36-64 years old - 4\n<br>  64- years old - 5 \n test_df \n df_2 = test_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(418):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a < 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\ntest_df[\"Age\"] = df_2[\"Age\"]\ntest_df \n bar_chart(\"Age\") \n \n<b>Through the Bar graph, It was found that the age group of 26 to 36 years old was the highest among the dead. \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.3  </b> Embarked </h2>\n \n train_df \n pclass1 = train_df[train_df[\"Pclass\"]==1][\"Embarked\"].value_counts() # the place where a first-class person got off\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Embarked\"].value_counts() # the place where a second-class person got off\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Embarked\"].value_counts() # the place where a third-class person got off\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,8)) \n for dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset['Embarked'].fillna(\"S\")\n# fill \"S\" in blanked \"Embarked\" row\ntrain_df.head() \n embarked_mapping = {\"S\":0,\"C\":1,\"Q\":2} # do mapping(test - number) in embarked row, for more convinence in machine learning\nfor dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset[\"Embarked\"].map(embarked_mapping) \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.4</b>  Fare</h2>\n \n train_df[\"Fare\"].fillna(train_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True)\ntest_df[\"Fare\"].fillna(test_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True) \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,train_df[\"Fare\"].max()))\nfacet.add_legend() \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,100))\nfacet.add_legend() \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(100,200))\nfacet.add_legend() \n df_2 = train_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(891):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntrain_df[\"Fare\"] = df_2[\"Fare\"]\ntrain_df.head() \n df_2 = test_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(418):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntest_df[\"Fare\"] = df_2[\"Fare\"]\ntest_df.head() \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.5</b>  Cabin</h2>\n \n for dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].str[:1]\n\npclass1 = train_df[train_df[\"Pclass\"]==1][\"Cabin\"].value_counts() #1\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Cabin\"].value_counts() #2\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Cabin\"].value_counts() #3\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\nprint(pclass1)\n\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,5)) \n cabin_mapping = {\"A\":0,\"B\":0.4,\"C\":0.8,\"D\":1.2,\"E\":1.6,\"F\":2,\"G\":2.4,\"T\":2.8} # do mapping, \n# If the range of numbers is not similar, the larger range can be considered more important.\n# So I'm going to divide it up to a decimal place and give it a similar range.\n# it called feature scaling.\nfor dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].map(cabin_mapping) \n train_df[\"Cabin\"].fillna(train_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True)\ntest_df[\"Cabin\"].fillna(test_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True) \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.6</b>  Family Size</h2> \n train_df[\"FamilySize\"] = train_df[\"SibSp\"] + train_df[\"Parch\"] + 1\ntest_df[\"FamilySize\"] = test_df['SibSp'] + test_df[\"Parch\"] + 1 \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"FamilySize\",shade=True)\nfacet.set(xlim=(0,train_df[\"FamilySize\"].max()))\nfacet.add_legend()\nplt.xlim(-3) \n family_mapping = {1:0,2:0.4,3:0.8,4:1.2,5:1.6 , 6:2 , 7:2.4 , 8:2.8, 9:3.2 , 10:3.6 , 11:4}\nfor dataset in train_test_df:\n    dataset[\"FamilySize\"] = dataset[\"FamilySize\"].map(family_mapping) \n train_df.head() \n test_df.head() \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Set the training set to match the test set</b>\n \n drop_list = [\"Ticket\",\"SibSp\",\"Parch\",\"Name\"]\ntrain_df = train_df.drop(drop_list, axis=1)\ntest_df = test_df.drop(drop_list, axis=1)\ntrain_df = train_df.drop([\"PassengerId\"], axis=1) \n train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\n \n train_df.head() \n test_df.head() \n test_data = test_df.drop(\"PassengerId\", axis = 1).copy() \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd62. Machine Learning</b></div> \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Preprocess - scaling</b>\n \n # import Scaling Model\nfrom sklearn.preprocessing import StandardScaler #All features have a normal distribution of 0 mean and 1 variance.\nfrom sklearn.preprocessing import MinMaxScaler #Makes all features have data values between 0 and 1.\nfrom sklearn.preprocessing import MaxAbsScaler # Makes the absolute value of all features lie between 0 and 1.\nfrom sklearn.preprocessing import RobustScaler\n#RobustScaler is similar to StandardScaler.\n# However, StandardScaler uses mean and variance, while RobustScaler uses median and quartile.\nfrom sklearn.preprocessing import Normalizer\n#The previous four methods use statistics for each feature.\n\n#import Classifier Modules\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\n# import tuing model\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n\nk_fold = KFold(n_splits = 9, shuffle=True, random_state = 0) \n # Scaling Model\nssc = StandardScaler()\nmms = MinMaxScaler()\nmas = MaxAbsScaler()\nrsc = RobustScaler()\n\nscl_list = [ssc,mms,mas,rsc]\n\n# Machine Learning Model\nknn = KNeighborsClassifier(n_neighbors = 13) #KNN\ndtc = DecisionTreeClassifier() # Decision Tree\nrfc = RandomForestClassifier(n_estimators=13) #Random Forest\ngnb = GaussianNB() # Naive Bayes\nsvc = SVC() #SVC\ngbc = GradientBoostingClassifier()\nclf_list = [knn,dtc,rfc,gnb,svc,gbc]\n\nscore_list = []\nscore_name = []\n\nfor scl in scl_list:# at first, scale data\n    scl.fit(train_data)\n    train_data = scl.transform(train_data)\n    test_data = scl.transform(test_data)\n    for clf in clf_list: # based on scaled data, make machine learning model\n        scoring = \"accuracy\"\n        score = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\n        score_name.append(str(scl)+\":\"+str(clf))\n        score = round(np.mean(score)*100,2)\n        score_list.append(score)         \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Check each type of <mark>Scaling method</mark> and <mark>Machine learning</mark> model's Score</b>\n \n plt.figure(figsize=(20,8))\nx = score_name\ny = score_list\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height + 0.25, '%.1f' %height, ha='center', va='bottom', size = 12)\nplt.bar(x, y,color='#e35f62')\nplt.ylim(60,) \n ### Check out what types of method get the score higher than <mark>80</mark>? \n # make a new dataframe which is filled with model type and its score\nma_result = pd.DataFrame()\nma_result.insert(0,\"type\",x)\nma_result.insert(0,\"score\",y)\nma_res_score = []\nma_res_name = []\n\n# seperate score higher than 80.\nfor i in range(len(ma_result[ma_result[\"score\"] >= 80].value_counts().index)):\n    ma_res_score.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][0])\n    ma_res_name.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][1])\nprint(ma_result[ma_result[\"score\"] >= 80].value_counts())\nx = ma_res_name\ny = ma_res_score\n\n# visualization\nplt.figure(figsize=(20,8))\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height, '%.1f' %height, ha='center', va='bottom', size = 12)\n\nplt.bar(ma_res_name,ma_res_score,color='#e35f62')\nplt.ylim(80,83) \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n\n<b>The score of the machine learning model <mark>SVC</mark>, which was scaled using the <mark>Robust scaling model</mark>, recorded the highest score with <mark>82.7</mark>. <br> So I choose this way in machine learning.</b> \n train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\ntrain_data.head() \n scl = RobustScaler()\nscl.fit(train_data)\nscl.transform(train_data)\nscl.transform(test_data)\n\nclf = SVC()\nclf.fit(train_data, target)\n# drop unnecessary column\ntest_data = test_df.drop(\"PassengerId\", axis = 1).copy()\nprediction = clf.predict(test_data)\nscore = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\nscore = round(np.mean(score)*100,2)\nprint(\"score: \",score)\nprint(\"prediction: \",prediction) \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd63. Use Deep learning Predict Result</b></div>    \n # import deep learning model\nimport tensorflow as tf \n train_data \n target \n import tensorflow as tf\n\nmodel = tf.keras.models.Sequential(\n[\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])# if the layer nuber get too high numb, it can be lead model's overfitting.\n\nmodel.compile(optimizer=\"adam\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"])\nmodel.fit(np.array(train_data), np.array(target), epochs=150, verbose=0)\n\n# if my deep learning model need to fix or improve, please leave a comment/feedback how should I fix it.  \n submission_dl = [] \n # As the sample, Survival must be expressed as either 0 or 1. \n# But the prediction value from deep learning, It expressed percentage(0~1).\n# So if its value higher than 0.5, It is more likely to have lived.\n# let it transfer to 1. else transfer to 0.\nfor i in range(len(model.predict(test_data))):\n    if model.predict(test_data)[i][0] >= 0.5:\n        submission_dl.append(1)\n    else:\n        submission_dl.append(0)\n# print(submission_dl) \n prediction_dl = np.array(submission_dl)\nprediction_dl \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd64. Submission</b></div>    \n submission = pd.DataFrame({\n    \"PassengerId\":test_df[\"PassengerId\"],\n    \"Survived\":prediction\n    # if you want submit MachineLearning Score, use \"prediction\"\n    # if you want submit DeepLearning Score, use \"prediction_dl\"\n    # as my submittion result, Machine Learning Score higher than Deep learning Score. So I choose ML Score.\n})\n\nsubmission.to_csv(\"submission_ma.csv\",index=False) \n submission = pd.read_csv(\"submission_ma.csv\")\nsubmission.head() \n #### <div style='text-align:center; font-family:arial'> \ud83d\ude47\ud83c\udffb\u200d\u2642\ufe0fThanks For Watching!<br></div>",
    "code_source": "#data\nimport pandas as pd\nimport numpy as np\n\n#visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno \n train_df = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntest_df = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ntrain_df.head() \n test_df.head() \n # survived = 0 - d , 1 - alive\n# pclass = Ticket class\n# sibsp = Wife, uncle, etc. on Titanic. If it's zero, you'll be alone.\n# parch = parent + childer\n# embarked  = port of Embarktion \n print(train_df.shape)\nprint(test_df.shape) \n print(\"train= \",train_df.info()) \n print(\"test= \",test_df.info()) \n print(train_df.isnull().sum())\nmsno.matrix(train_df).set_title(\"Train set\",fontsize=20) \n print(test_df.isnull().sum())\nmsno.matrix(test_df).set_title(\"Train set\",fontsize=20) \n def bar_chart(feature):\n    survived = train_df[train_df[\"Survived\"]==1][feature].value_counts()\n    dead = train_df[train_df[\"Survived\"]==0][feature].value_counts()\n    df = pd.DataFrame([survived,dead])\n    df.index = [\"Survived\",\"Dead\"]\n    df.plot(kind=\"bar\",stacked=True, figsize=(20,7),title=feature,fontsize=20)\nfor a in [\"Sex\",\"Pclass\",\"SibSp\"]:\n    bar_chart(a) \n train_df.head(10)\n#The name doesn't reflect much on the result, but Mr. and Mrs in the name imply information about whether or not they are married, so only extract it. \n train_test_df = [train_df,test_df]\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Name\"].str.extract('([A-Za-z]+)\\.',expand=False) \n train_df[\"Title\"] \n train_df[\"Title\"].value_counts() \n title = train_df[\"Title\"].value_counts()\nplt.figure(figsize =(20,5))\nsns.barplot(x = title.index, y = title.values) \n # use another library to more various visualization\nimport plotly.express as px\npx.bar(x = title.index, y = title.values) \n title_mapping = {\n    'Mr': 0, \"Miss\":1,\"Mrs\":2,\"Master\":3,\"Dr\":3,\"Rev\":3,\"Col\":3,\"Major\":3,\"Mile\":3,\"Countess\":3,\"Ms\":3,\"Lady\":3,\"Johnkheer\":3,\"Don\":3,\"Dona\":3,\"Mme\":3,\"Capt\":3,\"Sir\":3\n}\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Title\"].map(title_mapping) \n train_df.head() \n bar_chart(\"Title\") \n train_df \n sex_mapping = {\"male\":0,\"female\":1}\nfor dataset in train_test_df:\n    dataset[\"Sex\"] = dataset[\"Sex\"].map(sex_mapping) \n bar_chart(\"Sex\") \n # use median get the average age\ntrain_df[\"Age\"].fillna(train_df.groupby('Title')['Age'].transform(\"median\"),inplace=True)\ntest_df[\"Age\"].fillna(test_df.groupby('Title')['Age'].transform(\"median\"),inplace=True) \n # visualization death - age\nfacet = sns.FacetGrid(train_df, hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df['Age'].max()))\nfacet.add_legend()\n\nplt.show() \n # visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(0,20) # to limitation X boundary, we can see the graph more specifically \n # visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(20,30) \n train_df \n df_2 = train_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(891):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a <= 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\n        \ntrain_df[\"Age\"] = df_2[\"Age\"]\ntrain_df \n test_df \n df_2 = test_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(418):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a < 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\ntest_df[\"Age\"] = df_2[\"Age\"]\ntest_df \n bar_chart(\"Age\") \n train_df \n pclass1 = train_df[train_df[\"Pclass\"]==1][\"Embarked\"].value_counts() # the place where a first-class person got off\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Embarked\"].value_counts() # the place where a second-class person got off\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Embarked\"].value_counts() # the place where a third-class person got off\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,8)) \n for dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset['Embarked'].fillna(\"S\")\n# fill \"S\" in blanked \"Embarked\" row\ntrain_df.head() \n embarked_mapping = {\"S\":0,\"C\":1,\"Q\":2} # do mapping(test - number) in embarked row, for more convinence in machine learning\nfor dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset[\"Embarked\"].map(embarked_mapping) \n train_df[\"Fare\"].fillna(train_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True)\ntest_df[\"Fare\"].fillna(test_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True) \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,train_df[\"Fare\"].max()))\nfacet.add_legend() \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,100))\nfacet.add_legend() \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(100,200))\nfacet.add_legend() \n df_2 = train_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(891):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntrain_df[\"Fare\"] = df_2[\"Fare\"]\ntrain_df.head() \n df_2 = test_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(418):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntest_df[\"Fare\"] = df_2[\"Fare\"]\ntest_df.head() \n for dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].str[:1]\n\npclass1 = train_df[train_df[\"Pclass\"]==1][\"Cabin\"].value_counts() #1\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Cabin\"].value_counts() #2\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Cabin\"].value_counts() #3\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\nprint(pclass1)\n\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,5)) \n cabin_mapping = {\"A\":0,\"B\":0.4,\"C\":0.8,\"D\":1.2,\"E\":1.6,\"F\":2,\"G\":2.4,\"T\":2.8} # do mapping, \n# If the range of numbers is not similar, the larger range can be considered more important.\n# So I'm going to divide it up to a decimal place and give it a similar range.\n# it called feature scaling.\nfor dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].map(cabin_mapping) \n train_df[\"Cabin\"].fillna(train_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True)\ntest_df[\"Cabin\"].fillna(test_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True) \n train_df[\"FamilySize\"] = train_df[\"SibSp\"] + train_df[\"Parch\"] + 1\ntest_df[\"FamilySize\"] = test_df['SibSp'] + test_df[\"Parch\"] + 1 \n facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"FamilySize\",shade=True)\nfacet.set(xlim=(0,train_df[\"FamilySize\"].max()))\nfacet.add_legend()\nplt.xlim(-3) \n family_mapping = {1:0,2:0.4,3:0.8,4:1.2,5:1.6 , 6:2 , 7:2.4 , 8:2.8, 9:3.2 , 10:3.6 , 11:4}\nfor dataset in train_test_df:\n    dataset[\"FamilySize\"] = dataset[\"FamilySize\"].map(family_mapping) \n train_df.head() \n test_df.head() \n drop_list = [\"Ticket\",\"SibSp\",\"Parch\",\"Name\"]\ntrain_df = train_df.drop(drop_list, axis=1)\ntest_df = test_df.drop(drop_list, axis=1)\ntrain_df = train_df.drop([\"PassengerId\"], axis=1) \n train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\n \n train_df.head() \n test_df.head() \n test_data = test_df.drop(\"PassengerId\", axis = 1).copy() \n # import Scaling Model\nfrom sklearn.preprocessing import StandardScaler #All features have a normal distribution of 0 mean and 1 variance.\nfrom sklearn.preprocessing import MinMaxScaler #Makes all features have data values between 0 and 1.\nfrom sklearn.preprocessing import MaxAbsScaler # Makes the absolute value of all features lie between 0 and 1.\nfrom sklearn.preprocessing import RobustScaler\n#RobustScaler is similar to StandardScaler.\n# However, StandardScaler uses mean and variance, while RobustScaler uses median and quartile.\nfrom sklearn.preprocessing import Normalizer\n#The previous four methods use statistics for each feature.\n\n#import Classifier Modules\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\n# import tuing model\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n\nk_fold = KFold(n_splits = 9, shuffle=True, random_state = 0) \n # Scaling Model\nssc = StandardScaler()\nmms = MinMaxScaler()\nmas = MaxAbsScaler()\nrsc = RobustScaler()\n\nscl_list = [ssc,mms,mas,rsc]\n\n# Machine Learning Model\nknn = KNeighborsClassifier(n_neighbors = 13) #KNN\ndtc = DecisionTreeClassifier() # Decision Tree\nrfc = RandomForestClassifier(n_estimators=13) #Random Forest\ngnb = GaussianNB() # Naive Bayes\nsvc = SVC() #SVC\ngbc = GradientBoostingClassifier()\nclf_list = [knn,dtc,rfc,gnb,svc,gbc]\n\nscore_list = []\nscore_name = []\n\nfor scl in scl_list:# at first, scale data\n    scl.fit(train_data)\n    train_data = scl.transform(train_data)\n    test_data = scl.transform(test_data)\n    for clf in clf_list: # based on scaled data, make machine learning model\n        scoring = \"accuracy\"\n        score = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\n        score_name.append(str(scl)+\":\"+str(clf))\n        score = round(np.mean(score)*100,2)\n        score_list.append(score)         \n plt.figure(figsize=(20,8))\nx = score_name\ny = score_list\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height + 0.25, '%.1f' %height, ha='center', va='bottom', size = 12)\nplt.bar(x, y,color='#e35f62')\nplt.ylim(60,) \n # make a new dataframe which is filled with model type and its score\nma_result = pd.DataFrame()\nma_result.insert(0,\"type\",x)\nma_result.insert(0,\"score\",y)\nma_res_score = []\nma_res_name = []\n\n# seperate score higher than 80.\nfor i in range(len(ma_result[ma_result[\"score\"] >= 80].value_counts().index)):\n    ma_res_score.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][0])\n    ma_res_name.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][1])\nprint(ma_result[ma_result[\"score\"] >= 80].value_counts())\nx = ma_res_name\ny = ma_res_score\n\n# visualization\nplt.figure(figsize=(20,8))\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height, '%.1f' %height, ha='center', va='bottom', size = 12)\n\nplt.bar(ma_res_name,ma_res_score,color='#e35f62')\nplt.ylim(80,83) \n train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\ntrain_data.head() \n scl = RobustScaler()\nscl.fit(train_data)\nscl.transform(train_data)\nscl.transform(test_data)\n\nclf = SVC()\nclf.fit(train_data, target)\n# drop unnecessary column\ntest_data = test_df.drop(\"PassengerId\", axis = 1).copy()\nprediction = clf.predict(test_data)\nscore = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\nscore = round(np.mean(score)*100,2)\nprint(\"score: \",score)\nprint(\"prediction: \",prediction) \n # import deep learning model\nimport tensorflow as tf \n train_data \n target \n import tensorflow as tf\n\nmodel = tf.keras.models.Sequential(\n[\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])# if the layer nuber get too high numb, it can be lead model's overfitting.\n\nmodel.compile(optimizer=\"adam\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"])\nmodel.fit(np.array(train_data), np.array(target), epochs=150, verbose=0)\n\n# if my deep learning model need to fix or improve, please leave a comment/feedback how should I fix it.  \n submission_dl = [] \n # As the sample, Survival must be expressed as either 0 or 1. \n# But the prediction value from deep learning, It expressed percentage(0~1).\n# So if its value higher than 0.5, It is more likely to have lived.\n# let it transfer to 1. else transfer to 0.\nfor i in range(len(model.predict(test_data))):\n    if model.predict(test_data)[i][0] >= 0.5:\n        submission_dl.append(1)\n    else:\n        submission_dl.append(0)\n# print(submission_dl) \n prediction_dl = np.array(submission_dl)\nprediction_dl \n submission = pd.DataFrame({\n    \"PassengerId\":test_df[\"PassengerId\"],\n    \"Survived\":prediction\n    # if you want submit MachineLearning Score, use \"prediction\"\n    # if you want submit DeepLearning Score, use \"prediction_dl\"\n    # as my submittion result, Machine Learning Score higher than Deep learning Score. So I choose ML Score.\n})\n\nsubmission.to_csv(\"submission_ma.csv\",index=False) \n submission = pd.read_csv(\"submission_ma.csv\")\nsubmission.head()",
    "markdown_source": "<a id=\"1\"></a>\n# <div style=\"text-align:center; padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udea2titanic data analysis \ud83d\udcc8& Machine & Deep Learning \ud83d\udca1</b></div> \n ![](https://static.timesofisrael.com/atlantajewishtimes/uploads/2022/03/DT6RD9.jpg) \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Table of Contents</b></div> \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> Introduction</b> <br>\n    * <b><mark>0.</mark></b>-------Import Libraries<br>\n    * <b><mark>1.</mark></b>-------Visuallization<br>\n     - <b><mark>1.1</mark></b>------Check Missing Value<br>\n     - <b><mark>1.2</mark></b>------Make Graph - Which is show \"feature\"- Dead<br>\n     -<b><mark>1.3.1</mark></b>---Name<br>\n     - <b><mark>1.3.2</mark></b>---Sex<br>\n     - <b><mark>1.3.3</mark></b>---Embarked<br>\n     - <b><mark>1.3.4</mark></b>---Fare<br>\n     - <b><mark>1.3.5</mark></b>---Cabin<br>\n     - <b><mark>1.3.6</mark></b>---Family Size<br>\n    * <b><mark>2.</mark></b>------Machine Learning<br>\n     - <b><mark>2.1</mark></b>-----KNN<br>\n     - <b><mark>2.2</mark></b>-----Decision Tree<br>\n     - <b><mark>2.3</mark></b>-----Random Forrest<br>\n     - <b><mark>2.4</mark></b>-----Naive Bayes<br>\n     - <b><mark>2.5</mark></b>-----SVM<br>\n     - <b><mark>2.6</mark></b>-----Machine Learning Result<br>\n    * <b><mark>3.</mark></b>-------Submission \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Introduction</b></div> \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b> In this notebook, I will do data analysis, EDA and Machine Learning.<br>\nI use Python language in this notebook.<br>\n    <br>In Data Analysis, I will get the most valuable result from each column. For doing this, I will process Data through variable ways. You can check how doing it in this notebook\n    <br>\n    <br>\n    And I'll use kinds of Machine Learning.Based on transformated Data, get KNN, Decision Tree, random forrest, Naive Bayes, SVM accuracy score.\n    compare its scores and submit the highest score among it.\n    <br>\n    <br>\n    And using tensorflow, predict result by deep learning model. \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Columns</b></div>    \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> <mark>Survival</mark></b> - Survival   (0 = No , 1 = Yes) <br>\n* <b> <mark>pclass</mark></b> - Ticket class (1 = 1st, 2 = 2nd, 3 = 3rd)<br>\n* <b> <mark>sex</mark></b> - sex <br>\n* <b> <mark>Age</mark></b> - Age in years <br>\n* <b> <mark>sibsp</mark></b> - # of siblings / spouses aboard the Titanic <br>\n* <b> <mark>parch</mark></b> - # of parents / children aboard the Titanic<br>\n* <b> <mark>ticket</mark></b> - Ticket number<br>\n* <b> <mark>fare</mark></b>- Passenger fare<br>\n* <b> <mark>cabin</mark></b> - Cabin number<br>\n* <b> <mark>embarked</mark></b> - Port of Embarkation  (C = Cherbourg, Q = Queenstown, S = Southampton)<br> \n <!-- # <div style=\"text-align: left; font-family:timeroman;\"> | Import Libraries </div> -->\n<!-- # <div style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </div> -->\n<!-- > <h1 style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </h1> -->\n<!-- # <b style='color:blue'> 0. Import Libraries </b> -->\n<!-- # <div style=' font-family:timeroman;'> 0. Import Libraries and Data </b> --> \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd60. Import Libraries</b></div>    \n <b> column explanation \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd61. Visuallization </b></div>    \n <a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.1 Check missing value</b></div> \n <a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.2 Make Graph - Which is show \"feature\"- Dead. </b></div> \n <a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.3 Feature Engineering</b></div>  \n\n<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>the process of turning data measurements into feature bacters\nFrom a person's point of view, text is easy to understand, but computers are much easier to change to numbers, so it means the process of changing to numbers. \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.1  </b> Name </h2> \n Remove names other than Mr or Mrs etc. \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.2  </b> Sex </h2> \n <b>There are several NaN values for age. I can substitute those values for the total average age. But since we've divided them into categories by sex from Name, we substitute them to obtain the average age of a man and woman, if the gender of a person with NaN value is male, and if it's female, we substitute the average age of a man's average age. \n <b>Both the most dead age group and the most surviving age group are in their 20s and mid-30s. People in their 0s to 10s and late 30s can see that there are more dead people. \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>1.3.2.1 binning:</b><br>\nTechnology that weave into categories if it don't give much information.\nI will binning the Age by age. following code is the way how I did it.</div> \n <b>I devided \"age\" into 5 parts.<br>\n<br>  0-16 years old - 1\n<br>  16-26 years old - 2\n<br>  26-36 years old - 3\n<br>  36-64 years old - 4\n<br>  64- years old - 5 \n \n<b>Through the Bar graph, It was found that the age group of 26 to 36 years old was the highest among the dead. \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.3  </b> Embarked </h2>\n \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.4</b>  Fare</h2>\n \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.5</b>  Cabin</h2>\n \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.6</b>  Family Size</h2> \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Set the training set to match the test set</b>\n \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd62. Machine Learning</b></div> \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Preprocess - scaling</b>\n \n <a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Check each type of <mark>Scaling method</mark> and <mark>Machine learning</mark> model's Score</b>\n \n ### Check out what types of method get the score higher than <mark>80</mark>? \n <div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n\n<b>The score of the machine learning model <mark>SVC</mark>, which was scaled using the <mark>Robust scaling model</mark>, recorded the highest score with <mark>82.7</mark>. <br> So I choose this way in machine learning.</b> \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd63. Use Deep learning Predict Result</b></div>    \n <a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd64. Submission</b></div>    \n #### <div style='text-align:center; font-family:arial'> \ud83d\ude47\ud83c\udffb\u200d\u2642\ufe0fThanks For Watching!<br></div>",
    "n_cells": 105,
    "n_code_cells": 69,
    "n_markdown_cells": 36,
    "n_raw_cells": 0,
    "n_outputs": 69,
    "r_code_cells": 0.6571428571428571,
    "r_markdown_cells": 0.34285714285714286,
    "r_raw_cells": 0.0,
    "r_outputs": 1.0,
    "n_exceptions": 0,
    "r_exceptions": 0.0,
    "n_lines": 505,
    "n_lines_code": 384,
    "n_lines_markdown": 121,
    "lines_per_cell": [
        2,
        1,
        2,
        20,
        2,
        11,
        2,
        11,
        5,
        2,
        8,
        3,
        1,
        1,
        5,
        2,
        1,
        1,
        2,
        2,
        2,
        2,
        2,
        8,
        6,
        2,
        2,
        1,
        4,
        1,
        1,
        3,
        3,
        6,
        1,
        1,
        1,
        2,
        3,
        1,
        1,
        3,
        7,
        1,
        5,
        5,
        4,
        1,
        18,
        6,
        1,
        17,
        1,
        2,
        3,
        1,
        6,
        4,
        3,
        3,
        2,
        4,
        4,
        4,
        17,
        17,
        3,
        11,
        6,
        2,
        2,
        2,
        5,
        3,
        1,
        1,
        3,
        4,
        11,
        1,
        1,
        1,
        2,
        3,
        24,
        30,
        3,
        8,
        1,
        23,
        3,
        9,
        14,
        2,
        2,
        1,
        1,
        19,
        1,
        10,
        2,
        2,
        9,
        2,
        1
    ],
    "lines_per_code_cell": [
        8,
        3,
        1,
        5,
        2,
        1,
        1,
        2,
        2,
        8,
        2,
        4,
        1,
        1,
        3,
        3,
        6,
        1,
        1,
        1,
        3,
        1,
        3,
        7,
        5,
        5,
        1,
        18,
        1,
        17,
        1,
        1,
        6,
        4,
        3,
        2,
        4,
        4,
        4,
        17,
        17,
        11,
        6,
        2,
        2,
        5,
        3,
        1,
        1,
        4,
        11,
        1,
        1,
        1,
        24,
        30,
        8,
        23,
        9,
        14,
        2,
        1,
        1,
        19,
        1,
        10,
        2,
        9,
        2
    ],
    "lines_per_markdown_cell": [
        2,
        1,
        2,
        20,
        2,
        11,
        2,
        11,
        5,
        2,
        1,
        2,
        2,
        2,
        6,
        2,
        1,
        2,
        1,
        1,
        4,
        6,
        2,
        3,
        3,
        3,
        2,
        3,
        2,
        3,
        3,
        1,
        3,
        2,
        2,
        1
    ],
    "ave_lines_per_cell": 4.809523809523809,
    "ave_lines_per_code_cell": 5.565217391304348,
    "ave_lines_per_markdown_cell": 3.361111111111111,
    "max_lines_per_cell": 30,
    "max_lines_per_code_cell": 30,
    "max_lines_per_markdown_cell": 20,
    "min_lines_per_cell": 1,
    "min_lines_per_code_cell": 1,
    "min_lines_per_markdown_cell": 1,
    "n_chars": 24221,
    "n_chars_code": 14297,
    "n_chars_markdown": 9924,
    "chars_per_cell": [
        252,
        83,
        216,
        1049,
        211,
        698,
        209,
        728,
        463,
        221,
        139,
        129,
        14,
        22,
        185,
        42,
        32,
        30,
        220,
        221,
        87,
        85,
        246,
        370,
        535,
        243,
        168,
        38,
        146,
        17,
        32,
        115,
        121,
        277,
        15,
        18,
        8,
        242,
        118,
        16,
        349,
        210,
        197,
        174,
        315,
        249,
        264,
        8,
        431,
        163,
        7,
        418,
        16,
        112,
        248,
        8,
        493,
        140,
        221,
        242,
        183,
        158,
        139,
        141,
        436,
        433,
        243,
        482,
        382,
        187,
        248,
        130,
        183,
        191,
        15,
        14,
        268,
        181,
        373,
        15,
        14,
        56,
        218,
        246,
        1126,
        959,
        320,
        229,
        77,
        801,
        312,
        274,
        432,
        237,
        52,
        10,
        6,
        854,
        18,
        441,
        53,
        215,
        389,
        63,
        91
    ],
    "chars_per_code_cell": [
        139,
        129,
        14,
        185,
        42,
        32,
        30,
        87,
        85,
        370,
        168,
        146,
        17,
        32,
        115,
        121,
        277,
        15,
        18,
        8,
        118,
        16,
        210,
        197,
        315,
        249,
        8,
        431,
        7,
        418,
        16,
        8,
        493,
        140,
        221,
        183,
        158,
        139,
        141,
        436,
        433,
        482,
        382,
        187,
        130,
        183,
        191,
        15,
        14,
        181,
        373,
        15,
        14,
        56,
        1126,
        959,
        229,
        801,
        274,
        432,
        52,
        10,
        6,
        854,
        18,
        441,
        53,
        389,
        63
    ],
    "chars_per_markdown_cell": [
        252,
        83,
        216,
        1049,
        211,
        698,
        209,
        728,
        463,
        221,
        22,
        220,
        221,
        246,
        535,
        243,
        38,
        242,
        349,
        174,
        264,
        163,
        112,
        248,
        242,
        243,
        248,
        268,
        218,
        246,
        320,
        77,
        312,
        237,
        215,
        91
    ],
    "ave_chars_per_line": 47.962376237623765,
    "ave_chars_per_cell": 230.67619047619047,
    "ave_chars_per_code_cell": 207.20289855072463,
    "ave_chars_per_markdown_cell": 275.6666666666667,
    "max_chars_per_cell": 1126,
    "max_chars_per_code_cell": 1126,
    "max_chars_per_markdownell": 1049,
    "min_chars_per_cell": 6,
    "min_chars_per_code_cell": 6,
    "min_chars_per_markdown_cell": 22,
    "r_lines_code": 0.7603960396039604,
    "r_lines_markdown": 0.2396039603960396,
    "r_chars_markdown": 0.409727096321374,
    "r_chars_code": 0.590272903678626,
    "all_cells": [
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"text-align:center; padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udea2titanic data analysis \ud83d\udcc8& Machine & Deep Learning \ud83d\udca1</b></div>",
            "mc_idx": 0,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "![](https://static.timesofisrael.com/atlantajewishtimes/uploads/2022/03/DT6RD9.jpg)",
            "mc_idx": 1,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Table of Contents</b></div>",
            "mc_idx": 2,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> Introduction</b> <br>\n    * <b><mark>0.</mark></b>-------Import Libraries<br>\n    * <b><mark>1.</mark></b>-------Visuallization<br>\n     - <b><mark>1.1</mark></b>------Check Missing Value<br>\n     - <b><mark>1.2</mark></b>------Make Graph - Which is show \"feature\"- Dead<br>\n     -<b><mark>1.3.1</mark></b>---Name<br>\n     - <b><mark>1.3.2</mark></b>---Sex<br>\n     - <b><mark>1.3.3</mark></b>---Embarked<br>\n     - <b><mark>1.3.4</mark></b>---Fare<br>\n     - <b><mark>1.3.5</mark></b>---Cabin<br>\n     - <b><mark>1.3.6</mark></b>---Family Size<br>\n    * <b><mark>2.</mark></b>------Machine Learning<br>\n     - <b><mark>2.1</mark></b>-----KNN<br>\n     - <b><mark>2.2</mark></b>-----Decision Tree<br>\n     - <b><mark>2.3</mark></b>-----Random Forrest<br>\n     - <b><mark>2.4</mark></b>-----Naive Bayes<br>\n     - <b><mark>2.5</mark></b>-----SVM<br>\n     - <b><mark>2.6</mark></b>-----Machine Learning Result<br>\n    * <b><mark>3.</mark></b>-------Submission",
            "mc_idx": 3,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Introduction</b></div>",
            "mc_idx": 4,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b> In this notebook, I will do data analysis, EDA and Machine Learning.<br>\nI use Python language in this notebook.<br>\n    <br>In Data Analysis, I will get the most valuable result from each column. For doing this, I will process Data through variable ways. You can check how doing it in this notebook\n    <br>\n    <br>\n    And I'll use kinds of Machine Learning.Based on transformated Data, get KNN, Decision Tree, random forrest, Naive Bayes, SVM accuracy score.\n    compare its scores and submit the highest score among it.\n    <br>\n    <br>\n    And using tensorflow, predict result by deep learning model.",
            "mc_idx": 5,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Columns</b></div>   ",
            "mc_idx": 6,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> <mark>Survival</mark></b> - Survival   (0 = No , 1 = Yes) <br>\n* <b> <mark>pclass</mark></b> - Ticket class (1 = 1st, 2 = 2nd, 3 = 3rd)<br>\n* <b> <mark>sex</mark></b> - sex <br>\n* <b> <mark>Age</mark></b> - Age in years <br>\n* <b> <mark>sibsp</mark></b> - # of siblings / spouses aboard the Titanic <br>\n* <b> <mark>parch</mark></b> - # of parents / children aboard the Titanic<br>\n* <b> <mark>ticket</mark></b> - Ticket number<br>\n* <b> <mark>fare</mark></b>- Passenger fare<br>\n* <b> <mark>cabin</mark></b> - Cabin number<br>\n* <b> <mark>embarked</mark></b> - Port of Embarkation  (C = Cherbourg, Q = Queenstown, S = Southampton)<br>",
            "mc_idx": 7,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<!-- # <div style=\"text-align: left; font-family:timeroman;\"> | Import Libraries </div> -->\n<!-- # <div style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </div> -->\n<!-- > <h1 style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </h1> -->\n<!-- # <b style='color:blue'> 0. Import Libraries </b> -->\n<!-- # <div style=' font-family:timeroman;'> 0. Import Libraries and Data </b> -->",
            "mc_idx": 8,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd60. Import Libraries</b></div>   ",
            "mc_idx": 9,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "#data\nimport pandas as pd\nimport numpy as np\n\n#visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno",
            "mc_idx": 10,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.02,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.04,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 5
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "matplotlib": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "matplotlib": 1,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "train_df = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntest_df = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ntrain_df.head()",
            "mc_idx": 11,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.375,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    1,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  "
                    ]
                },
                "mc_idx": 11,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.head()",
            "mc_idx": 12,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass                                          Name     Sex  \\\n0          892       3                              Kelly, Mr. James    male   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n2          894       2                     Myles, Mr. Thomas Francis    male   \n3          895       3                              Wirz, Mr. Albert    male   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n\n    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n0  34.5      0      0   330911   7.8292   NaN        Q  \n1  47.0      1      0   363272   7.0000   NaN        S  \n2  62.0      0      0   240276   9.6875   NaN        Q  \n3  27.0      0      0   315154   8.6625   NaN        S  \n4  22.0      1      1  3101298  12.2875   NaN        S  "
                    ]
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "<b> column explanation",
            "mc_idx": 13,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# survived = 0 - d , 1 - alive\n# pclass = Ticket class\n# sibsp = Wife, uncle, etc. on Titanic. If it's zero, you'll be alone.\n# parch = parent + childer\n# embarked  = port of Embarktion",
            "mc_idx": 14,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    3,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 0
            }
        },
        {
            "source": "print(train_df.shape)\nprint(test_df.shape)",
            "mc_idx": 15,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 1.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 12)\n(418, 11)\n"
                    ]
                },
                "mc_idx": 15,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "print(\"train= \",train_df.info())",
            "mc_idx": 16,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    5,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    object \n 5   Age          714 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        204 non-null    object \n 11  Embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\ntrain=  None\n"
                    ]
                },
                "mc_idx": 16,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 0
            }
        },
        {
            "source": "print(\"test= \",test_df.info())",
            "mc_idx": 17,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    6,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 11 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  418 non-null    int64  \n 1   Pclass       418 non-null    int64  \n 2   Name         418 non-null    object \n 3   Sex          418 non-null    object \n 4   Age          332 non-null    float64\n 5   SibSp        418 non-null    int64  \n 6   Parch        418 non-null    int64  \n 7   Ticket       418 non-null    object \n 8   Fare         417 non-null    float64\n 9   Cabin        91 non-null     object \n 10  Embarked     418 non-null    object \ndtypes: float64(2), int64(4), object(5)\nmemory usage: 36.0+ KB\ntest=  None\n"
                    ]
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd61. Visuallization </b></div>   ",
            "mc_idx": 18,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.1 Check missing value</b></div>",
            "mc_idx": 19,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "print(train_df.isnull().sum())\nmsno.matrix(train_df).set_title(\"Train set\",fontsize=20)",
            "mc_idx": 20,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    "size": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c007_o002_image_0.png",
                    7,
                    2,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64\n",
                        "Text(0.5, 1.0, 'Train set')",
                        "<Figure size 1800x720 with 2 Axes>"
                    ]
                },
                "mc_idx": 20,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 2
            }
        },
        {
            "source": "print(test_df.isnull().sum())\nmsno.matrix(test_df).set_title(\"Train set\",fontsize=20)",
            "mc_idx": 21,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    "size": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c008_o002_image_1.png",
                    8,
                    2,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId      0\nPclass           0\nName             0\nSex              0\nAge             86\nSibSp            0\nParch            0\nTicket           0\nFare             1\nCabin          327\nEmbarked         0\ndtype: int64\n",
                        "Text(0.5, 1.0, 'Train set')",
                        "<Figure size 1800x720 with 2 Axes>"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 2
            }
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.2 Make Graph - Which is show \"feature\"- Dead. </b></div>",
            "mc_idx": 22,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "def bar_chart(feature):\n    survived = train_df[train_df[\"Survived\"]==1][feature].value_counts()\n    dead = train_df[train_df[\"Survived\"]==0][feature].value_counts()\n    df = pd.DataFrame([survived,dead])\n    df.index = [\"Survived\",\"Dead\"]\n    df.plot(kind=\"bar\",stacked=True, figsize=(20,7),title=feature,fontsize=20)\nfor a in [\"Sex\",\"Pclass\",\"SibSp\"]:\n    bar_chart(a)",
            "mc_idx": 23,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.125,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.375,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 2,
                    ".plot(": 2,
                    "size": 2,
                    ".value_counts": 2
                },
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1,
                    "chart": 2
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c009_o002_image_4.png",
                    9,
                    2,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>",
                        "<Figure size 1440x504 with 1 Axes>",
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 2
            }
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.3 Feature Engineering</b></div>  \n\n<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>the process of turning data measurements into feature bacters\nFrom a person's point of view, text is easy to understand, but computers are much easier to change to numbers, so it means the process of changing to numbers.",
            "mc_idx": 24,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.1  </b> Name </h2>",
            "mc_idx": 25,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_df.head(10)\n#The name doesn't reflect much on the result, but Mr. and Mrs in the name imply information about whether or not they are married, so only extract it.",
            "mc_idx": 26,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.25,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 1
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    "info": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n5            6         0       3   \n6            7         0       1   \n7            8         0       3   \n8            9         1       3   \n9           10         1       2   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n5                                   Moran, Mr. James    male   NaN      0   \n6                            McCarthy, Mr. Timothy J    male  54.0      0   \n7                     Palsson, Master. Gosta Leonard    male   2.0      3   \n8  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0   \n9                Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  \n5      0            330877   8.4583   NaN        Q  \n6      0             17463  51.8625   E46        S  \n7      1            349909  21.0750   NaN        S  \n8      2            347742  11.1333   NaN        S  \n9      0            237736  30.0708   NaN        C  "
                    ]
                },
                "mc_idx": 26,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "Remove names other than Mr or Mrs etc.",
            "mc_idx": 27,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_test_df = [train_df,test_df]\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Name\"].str.extract('([A-Za-z]+)\\.',expand=False)",
            "mc_idx": 28,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 1,
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 28,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Title\"]",
            "mc_idx": 29,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    12,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "0        Mr\n1       Mrs\n2      Miss\n3       Mrs\n4        Mr\n       ... \n886     Rev\n887    Miss\n888    Miss\n889      Mr\n890      Mr\nName: Title, Length: 891, dtype: object"
                    ]
                },
                "mc_idx": 29,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Title\"].value_counts()",
            "mc_idx": 30,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Mr          517\nMiss        182\nMrs         125\nMaster       40\nDr            7\nRev           6\nMlle          2\nMajor         2\nCol           2\nCountess      1\nCapt          1\nMs            1\nSir           1\nLady          1\nMme           1\nDon           1\nJonkheer      1\nName: Title, dtype: int64"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "title = train_df[\"Title\"].value_counts()\nplt.figure(figsize =(20,5))\nsns.barplot(x = title.index, y = title.values)",
            "mc_idx": 31,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.25,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    "sns.": 1,
                    "size": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c014_o001_image_5.png",
                    14,
                    1,
                    5
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 1440x360 with 1 Axes>"
                    ]
                },
                "mc_idx": 31,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 1
            }
        },
        {
            "source": "# use another library to more various visualization\nimport plotly.express as px\npx.bar(x = title.index, y = title.values)",
            "mc_idx": 32,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.2,
                "Data_Transform": 0.1,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.2,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "plotly": 1
                },
                "Data_Transform": {
                    ".exp": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1,
                    "plotly.express": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    15,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-2.16.1.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        ",
                        "<div>                            <div id=\"7bac20a8-5aad-484d-a6c1-0fb6739657d5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7bac20a8-5aad-484d-a6c1-0fb6739657d5\")) {                    Plotly.newPlot(                        \"7bac20a8-5aad-484d-a6c1-0fb6739657d5\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"x=%{x}<br>y=%{y}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"Mr\",\"Miss\",\"Mrs\",\"Master\",\"Dr\",\"Rev\",\"Mlle\",\"Major\",\"Col\",\"Countess\",\"Capt\",\"Ms\",\"Sir\",\"Lady\",\"Mme\",\"Don\",\"Jonkheer\"],\"xaxis\":\"x\",\"y\":[517,182,125,40,7,6,2,2,2,1,1,1,1,1,1,1,1],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"x\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"y\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('7bac20a8-5aad-484d-a6c1-0fb6739657d5');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 1
            }
        },
        {
            "source": "title_mapping = {\n    'Mr': 0, \"Miss\":1,\"Mrs\":2,\"Master\":3,\"Dr\":3,\"Rev\":3,\"Col\":3,\"Major\":3,\"Mile\":3,\"Countess\":3,\"Ms\":3,\"Lady\":3,\"Johnkheer\":3,\"Don\":3,\"Dona\":3,\"Mme\":3,\"Capt\":3,\"Sir\":3\n}\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Title\"].map(title_mapping)",
            "mc_idx": 33,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 33,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 34,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    17,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  Title  \n0      0         A/5 21171   7.2500   NaN        S    0.0  \n1      0          PC 17599  71.2833   C85        C    2.0  \n2      0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3      0            113803  53.1000  C123        S    2.0  \n4      0            373450   8.0500   NaN        S    0.0  "
                    ]
                },
                "mc_idx": 34,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "bar_chart(\"Title\")",
            "mc_idx": 35,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "chart": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c018_o000_image_6.png",
                    18,
                    0,
                    6
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 35,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "train_df",
            "mc_idx": 36,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    19,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name     Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    male  22.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                               Heikkinen, Miss. Laina  female  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                             Allen, Mr. William Henry    male  35.0      0   \n..                                                 ...     ...   ...    ...   \n886                              Montvila, Rev. Juozas    male  27.0      0   \n887                       Graham, Miss. Margaret Edith  female  19.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n889                              Behr, Mr. Karl Howell    male  26.0      0   \n890                                Dooley, Mr. Patrick    male  32.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 36,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.2  </b> Sex </h2>",
            "mc_idx": 37,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "sex_mapping = {\"male\":0,\"female\":1}\nfor dataset in train_test_df:\n    dataset[\"Sex\"] = dataset[\"Sex\"].map(sex_mapping)",
            "mc_idx": 38,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "bar_chart(\"Sex\")",
            "mc_idx": 39,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "chart": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c021_o000_image_7.png",
                    21,
                    0,
                    7
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 39,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "<b>There are several NaN values for age. I can substitute those values for the total average age. But since we've divided them into categories by sex from Name, we substitute them to obtain the average age of a man and woman, if the gender of a person with NaN value is male, and if it's female, we substitute the average age of a man's average age.",
            "mc_idx": 40,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# use median get the average age\ntrain_df[\"Age\"].fillna(train_df.groupby('Title')['Age'].transform(\"median\"),inplace=True)\ntest_df[\"Age\"].fillna(test_df.groupby('Title')['Age'].transform(\"median\"),inplace=True)",
            "mc_idx": 41,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 2
                },
                "Data_Transform": {
                    ".groupby(": 2,
                    ".fillna(": 2,
                    "transform": 2,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 41,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "# visualization death - age\nfacet = sns.FacetGrid(train_df, hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df['Age'].max()))\nfacet.add_legend()\n\nplt.show()",
            "mc_idx": 42,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c023_o000_image_8.png",
                    23,
                    0,
                    8
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "<b>Both the most dead age group and the most surviving age group are in their 20s and mid-30s. People in their 0s to 10s and late 30s can see that there are more dead people.",
            "mc_idx": 43,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(0,20) # to limitation X boundary, we can see the graph more specifically",
            "mc_idx": 44,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    "graph": 1,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c024_o001_image_9.png",
                    24,
                    1,
                    9
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(0.0, 20.0)",
                        "<Figure size 864x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 1
            }
        },
        {
            "source": "# visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(20,30)",
            "mc_idx": 45,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c025_o001_image_10.png",
                    25,
                    1,
                    10
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(20.0, 30.0)",
                        "<Figure size 864x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 45,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 1
            }
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>1.3.2.1 binning:</b><br>\nTechnology that weave into categories if it don't give much information.\nI will binning the Age by age. following code is the way how I did it.</div>",
            "mc_idx": 46,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_df",
            "mc_idx": 47,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    26,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name  Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    0  22.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...    1  38.0      1   \n2                               Heikkinen, Miss. Laina    1  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  35.0      1   \n4                             Allen, Mr. William Henry    0  35.0      0   \n..                                                 ...  ...   ...    ...   \n886                              Montvila, Rev. Juozas    0  27.0      0   \n887                       Graham, Miss. Margaret Edith    1  19.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"    1  21.0      1   \n889                              Behr, Mr. Karl Howell    0  26.0      0   \n890                                Dooley, Mr. Patrick    0  32.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 47,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "df_2 = train_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(891):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a <= 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\n        \ntrain_df[\"Age\"] = df_2[\"Age\"]\ntrain_df",
            "mc_idx": 48,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    27,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name  Sex  Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    0  1.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1   \n2                               Heikkinen, Miss. Laina    1  1.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1   \n4                             Allen, Mr. William Henry    0  2.0      0   \n..                                                 ...  ...  ...    ...   \n886                              Montvila, Rev. Juozas    0  2.0      0   \n887                       Graham, Miss. Margaret Edith    1  1.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"    1  1.0      1   \n889                              Behr, Mr. Karl Howell    0  1.0      0   \n890                                Dooley, Mr. Patrick    0  2.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 48,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "<b>I devided \"age\" into 5 parts.<br>\n<br>  0-16 years old - 1\n<br>  16-26 years old - 2\n<br>  26-36 years old - 3\n<br>  36-64 years old - 4\n<br>  64- years old - 5",
            "mc_idx": 49,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "test_df",
            "mc_idx": 50,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    28,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Pclass                                          Name  Sex  \\\n0            892       3                              Kelly, Mr. James    0   \n1            893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2            894       2                     Myles, Mr. Thomas Francis    0   \n3            895       3                              Wirz, Mr. Albert    0   \n4            896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n..           ...     ...                                           ...  ...   \n413         1305       3                            Spector, Mr. Woolf    0   \n414         1306       1                  Oliva y Ocana, Dona. Fermina    1   \n415         1307       3                  Saether, Mr. Simon Sivertsen    0   \n416         1308       3                           Ware, Mr. Frederick    0   \n417         1309       3                      Peter, Master. Michael J    0   \n\n      Age  SibSp  Parch              Ticket      Fare Cabin Embarked  Title  \n0    34.5      0      0              330911    7.8292   NaN        Q      0  \n1    47.0      1      0              363272    7.0000   NaN        S      2  \n2    62.0      0      0              240276    9.6875   NaN        Q      0  \n3    27.0      0      0              315154    8.6625   NaN        S      0  \n4    22.0      1      1             3101298   12.2875   NaN        S      2  \n..    ...    ...    ...                 ...       ...   ...      ...    ...  \n413  28.5      0      0           A.5. 3236    8.0500   NaN        S      0  \n414  39.0      0      0            PC 17758  108.9000  C105        C      3  \n415  38.5      0      0  SOTON/O.Q. 3101262    7.2500   NaN        S      0  \n416  28.5      0      0              359309    8.0500   NaN        S      0  \n417  10.0      1      1                2668   22.3583   NaN        C      3  \n\n[418 rows x 12 columns]"
                    ]
                },
                "mc_idx": 50,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 0
            }
        },
        {
            "source": "df_2 = test_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(418):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a < 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\ntest_df[\"Age\"] = df_2[\"Age\"]\ntest_df",
            "mc_idx": 51,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Pclass                                          Name  Sex  \\\n0            892       3                              Kelly, Mr. James    0   \n1            893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2            894       2                     Myles, Mr. Thomas Francis    0   \n3            895       3                              Wirz, Mr. Albert    0   \n4            896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n..           ...     ...                                           ...  ...   \n413         1305       3                            Spector, Mr. Woolf    0   \n414         1306       1                  Oliva y Ocana, Dona. Fermina    1   \n415         1307       3                  Saether, Mr. Simon Sivertsen    0   \n416         1308       3                           Ware, Mr. Frederick    0   \n417         1309       3                      Peter, Master. Michael J    0   \n\n     Age  SibSp  Parch              Ticket      Fare Cabin Embarked  Title  \n0    2.0      0      0              330911    7.8292   NaN        Q      0  \n1    3.0      1      0              363272    7.0000   NaN        S      2  \n2    3.0      0      0              240276    9.6875   NaN        Q      0  \n3    2.0      0      0              315154    8.6625   NaN        S      0  \n4    1.0      1      1             3101298   12.2875   NaN        S      2  \n..   ...    ...    ...                 ...       ...   ...      ...    ...  \n413  2.0      0      0           A.5. 3236    8.0500   NaN        S      0  \n414  3.0      0      0            PC 17758  108.9000  C105        C      3  \n415  3.0      0      0  SOTON/O.Q. 3101262    7.2500   NaN        S      0  \n416  2.0      0      0              359309    8.0500   NaN        S      0  \n417  0.0      1      1                2668   22.3583   NaN        C      3  \n\n[418 rows x 12 columns]"
                    ]
                },
                "mc_idx": 51,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "bar_chart(\"Age\")",
            "mc_idx": 52,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "chart": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c030_o000_image_11.png",
                    30,
                    0,
                    11
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 52,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "\n<b>Through the Bar graph, It was found that the age group of 26 to 36 years old was the highest among the dead.",
            "mc_idx": 53,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.3  </b> Embarked </h2>\n",
            "mc_idx": 54,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_df",
            "mc_idx": 55,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    31,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name  Sex  Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    0  1.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1   \n2                               Heikkinen, Miss. Laina    1  1.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1   \n4                             Allen, Mr. William Henry    0  2.0      0   \n..                                                 ...  ...  ...    ...   \n886                              Montvila, Rev. Juozas    0  2.0      0   \n887                       Graham, Miss. Margaret Edith    1  1.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"    1  1.0      1   \n889                              Behr, Mr. Karl Howell    0  1.0      0   \n890                                Dooley, Mr. Patrick    0  2.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 55,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "pclass1 = train_df[train_df[\"Pclass\"]==1][\"Embarked\"].value_counts() # the place where a first-class person got off\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Embarked\"].value_counts() # the place where a second-class person got off\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Embarked\"].value_counts() # the place where a third-class person got off\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,8))",
            "mc_idx": 56,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.1111111111111111,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.1111111111111111,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 3,
                    ".plot(": 2,
                    "size": 1,
                    ".value_counts": 3
                },
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c032_o001_image_12.png",
                    32,
                    1,
                    12
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 1440x576 with 1 Axes>"
                    ]
                },
                "mc_idx": 56,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 1
            }
        },
        {
            "source": "for dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset['Embarked'].fillna(\"S\")\n# fill \"S\" in blanked \"Embarked\" row\ntrain_df.head()",
            "mc_idx": 57,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {
                    ".fillna(": 1,
                    ".fillna": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex  Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  1.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1      0   \n2                             Heikkinen, Miss. Laina    1  1.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1      0   \n4                           Allen, Mr. William Henry    0  2.0      0      0   \n\n             Ticket     Fare Cabin Embarked  Title  \n0         A/5 21171   7.2500   NaN        S    0.0  \n1          PC 17599  71.2833   C85        C    2.0  \n2  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3            113803  53.1000  C123        S    2.0  \n4            373450   8.0500   NaN        S    0.0  "
                    ]
                },
                "mc_idx": 57,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "embarked_mapping = {\"S\":0,\"C\":1,\"Q\":2} # do mapping(test - number) in embarked row, for more convinence in machine learning\nfor dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset[\"Embarked\"].map(embarked_mapping)",
            "mc_idx": 58,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 58,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.4</b>  Fare</h2>\n",
            "mc_idx": 59,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_df[\"Fare\"].fillna(train_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True)\ntest_df[\"Fare\"].fillna(test_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True)",
            "mc_idx": 60,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 2
                },
                "Data_Transform": {
                    ".groupby(": 2,
                    ".fillna(": 2,
                    "transform": 2,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 60,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,train_df[\"Fare\"].max()))\nfacet.add_legend()",
            "mc_idx": 61,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c036_o001_image_13.png",
                    36,
                    1,
                    13
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<seaborn.axisgrid.FacetGrid at 0x7ddf93235290>",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 61,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 36,
                "o_idx": 1
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,100))\nfacet.add_legend()",
            "mc_idx": 62,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.6666666666666666,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c037_o001_image_14.png",
                    37,
                    1,
                    14
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<seaborn.axisgrid.FacetGrid at 0x7ddf932356d0>",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 62,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 37,
                "o_idx": 1
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(100,200))\nfacet.add_legend()",
            "mc_idx": 63,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.6666666666666666,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c038_o001_image_15.png",
                    38,
                    1,
                    15
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<seaborn.axisgrid.FacetGrid at 0x7ddf931b3610>",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 63,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 38,
                "o_idx": 1
            }
        },
        {
            "source": "df_2 = train_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(891):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntrain_df[\"Fare\"] = df_2[\"Fare\"]\ntrain_df.head()",
            "mc_idx": 64,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    "columns": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    39,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex  Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  1.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1      0   \n2                             Heikkinen, Miss. Laina    1  1.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1      0   \n4                           Allen, Mr. William Henry    0  2.0      0      0   \n\n             Ticket  Fare Cabin  Embarked  Title  \n0         A/5 21171   0.0   NaN         0    0.0  \n1          PC 17599   4.0   C85         1    2.0  \n2  STON/O2. 3101282   0.0   NaN         0    1.0  \n3            113803   4.0  C123         0    2.0  \n4            373450   0.0   NaN         0    0.0  "
                    ]
                },
                "mc_idx": 64,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 39,
                "o_idx": 0
            }
        },
        {
            "source": "df_2 = test_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(418):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntest_df[\"Fare\"] = df_2[\"Fare\"]\ntest_df.head()",
            "mc_idx": 65,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    "columns": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    40,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass                                          Name  Sex  \\\n0          892       3                              Kelly, Mr. James    0   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2          894       2                     Myles, Mr. Thomas Francis    0   \n3          895       3                              Wirz, Mr. Albert    0   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n\n   Age  SibSp  Parch   Ticket  Fare Cabin  Embarked  Title  \n0  2.0      0      0   330911   0.0   NaN         2      0  \n1  3.0      1      0   363272   0.0   NaN         0      2  \n2  3.0      0      0   240276   1.0   NaN         2      0  \n3  2.0      0      0   315154   0.0   NaN         0      0  \n4  1.0      1      1  3101298   1.0   NaN         0      2  "
                    ]
                },
                "mc_idx": 65,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 40,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.5</b>  Cabin</h2>\n",
            "mc_idx": 66,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "for dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].str[:1]\n\npclass1 = train_df[train_df[\"Pclass\"]==1][\"Cabin\"].value_counts() #1\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Cabin\"].value_counts() #2\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Cabin\"].value_counts() #3\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\nprint(pclass1)\n\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,5))",
            "mc_idx": 67,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.3333333333333333,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.1111111111111111,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.1111111111111111,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {
                    "value_counts()": 3,
                    ".plot(": 2,
                    "size": 1,
                    ".value_counts": 3
                },
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c041_o002_image_16.png",
                    41,
                    2,
                    16
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "C    59\nB    47\nD    29\nE    25\nA    15\nT     1\nName: Cabin, dtype: int64\n",
                        "<AxesSubplot:>",
                        "<Figure size 1440x360 with 1 Axes>"
                    ]
                },
                "mc_idx": 67,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 41,
                "o_idx": 2
            }
        },
        {
            "source": "cabin_mapping = {\"A\":0,\"B\":0.4,\"C\":0.8,\"D\":1.2,\"E\":1.6,\"F\":2,\"G\":2.4,\"T\":2.8} # do mapping, \n# If the range of numbers is not similar, the larger range can be considered more important.\n# So I'm going to divide it up to a decimal place and give it a similar range.\n# it called feature scaling.\nfor dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].map(cabin_mapping)",
            "mc_idx": 68,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    42,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 68,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 42,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Cabin\"].fillna(train_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True)\ntest_df[\"Cabin\"].fillna(test_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True)",
            "mc_idx": 69,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 2
                },
                "Data_Transform": {
                    ".groupby(": 2,
                    ".fillna(": 2,
                    "transform": 2,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    43,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 69,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 43,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.6</b>  Family Size</h2>",
            "mc_idx": 70,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_df[\"FamilySize\"] = train_df[\"SibSp\"] + train_df[\"Parch\"] + 1\ntest_df[\"FamilySize\"] = test_df['SibSp'] + test_df[\"Parch\"] + 1",
            "mc_idx": 71,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    44,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 71,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 44,
                "o_idx": 0
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"FamilySize\",shade=True)\nfacet.set(xlim=(0,train_df[\"FamilySize\"].max()))\nfacet.add_legend()\nplt.xlim(-3)",
            "mc_idx": 72,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.6,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    "size": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c045_o001_image_17.png",
                    45,
                    1,
                    17
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(-3.0, 11.0)",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 72,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 45,
                "o_idx": 1
            }
        },
        {
            "source": "family_mapping = {1:0,2:0.4,3:0.8,4:1.2,5:1.6 , 6:2 , 7:2.4 , 8:2.8, 9:3.2 , 10:3.6 , 11:4}\nfor dataset in train_test_df:\n    dataset[\"FamilySize\"] = dataset[\"FamilySize\"].map(family_mapping)",
            "mc_idx": 73,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.6666666666666666,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    46,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 73,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 46,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 74,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    47,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex  Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  1.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1      0   \n2                             Heikkinen, Miss. Laina    1  1.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1      0   \n4                           Allen, Mr. William Henry    0  2.0      0      0   \n\n             Ticket  Fare  Cabin  Embarked  Title  FamilySize  \n0         A/5 21171   0.0    2.0         0    0.0         0.4  \n1          PC 17599   4.0    0.8         1    2.0         0.4  \n2  STON/O2. 3101282   0.0    2.0         0    1.0         0.0  \n3            113803   4.0    0.8         0    2.0         0.4  \n4            373450   0.0    2.0         0    0.0         0.0  "
                    ]
                },
                "mc_idx": 74,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 47,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.head()",
            "mc_idx": 75,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    48,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass                                          Name  Sex  \\\n0          892       3                              Kelly, Mr. James    0   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2          894       2                     Myles, Mr. Thomas Francis    0   \n3          895       3                              Wirz, Mr. Albert    0   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n\n   Age  SibSp  Parch   Ticket  Fare  Cabin  Embarked  Title  FamilySize  \n0  2.0      0      0   330911   0.0    2.0         2      0         0.0  \n1  3.0      1      0   363272   0.0    2.0         0      2         0.4  \n2  3.0      0      0   240276   1.0    2.0         2      0         0.0  \n3  2.0      0      0   315154   0.0    2.0         0      0         0.0  \n4  1.0      1      1  3101298   1.0    2.0         0      2         0.8  "
                    ]
                },
                "mc_idx": 75,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 48,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Set the training set to match the test set</b>\n",
            "mc_idx": 76,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "drop_list = [\"Ticket\",\"SibSp\",\"Parch\",\"Name\"]\ntrain_df = train_df.drop(drop_list, axis=1)\ntest_df = test_df.drop(drop_list, axis=1)\ntrain_df = train_df.drop([\"PassengerId\"], axis=1)",
            "mc_idx": 77,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".drop": 3
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    49,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 77,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 49,
                "o_idx": 0
            }
        },
        {
            "source": "train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\n",
            "mc_idx": 78,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.4166666666666667,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 4,
                    ".isnull": 4,
                    ".value_counts": 4
                },
                "Data_Transform": {
                    ".fillna(": 2,
                    ".drop": 1,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    50,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Title\nFalse    891\ndtype: int64"
                    ]
                },
                "mc_idx": 78,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 50,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 79,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    51,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   Survived  Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0         0       3    0  1.0   0.0    2.0         0    0.0         0.4\n1         1       1    1  3.0   4.0    0.8         1    2.0         0.4\n2         1       3    1  1.0   0.0    2.0         0    1.0         0.0\n3         1       1    1  2.0   4.0    0.8         0    2.0         0.4\n4         0       3    0  2.0   0.0    2.0         0    0.0         0.0"
                    ]
                },
                "mc_idx": 79,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 51,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.head()",
            "mc_idx": 80,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    52,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0          892       3    0  2.0   0.0    2.0         2      0         0.0\n1          893       3    1  3.0   0.0    2.0         0      2         0.4\n2          894       2    0  3.0   1.0    2.0         2      0         0.0\n3          895       3    0  2.0   0.0    2.0         0      0         0.0\n4          896       3    1  1.0   1.0    2.0         0      2         0.8"
                    ]
                },
                "mc_idx": 80,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 52,
                "o_idx": 0
            }
        },
        {
            "source": "test_data = test_df.drop(\"PassengerId\", axis = 1).copy()",
            "mc_idx": 81,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    53,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 81,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 53,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd62. Machine Learning</b></div>",
            "mc_idx": 82,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Preprocess - scaling</b>\n",
            "mc_idx": 83,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# import Scaling Model\nfrom sklearn.preprocessing import StandardScaler #All features have a normal distribution of 0 mean and 1 variance.\nfrom sklearn.preprocessing import MinMaxScaler #Makes all features have data values between 0 and 1.\nfrom sklearn.preprocessing import MaxAbsScaler # Makes the absolute value of all features lie between 0 and 1.\nfrom sklearn.preprocessing import RobustScaler\n#RobustScaler is similar to StandardScaler.\n# However, StandardScaler uses mean and variance, while RobustScaler uses median and quartile.\nfrom sklearn.preprocessing import Normalizer\n#The previous four methods use statistics for each feature.\n\n#import Classifier Modules\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\n# import tuing model\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n\nk_fold = KFold(n_splits = 9, shuffle=True, random_state = 0)",
            "mc_idx": 84,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0125,
                "Data_Transform": 0.075,
                "Model_Train": 0.08125,
                "Model_Evaluation": 0.03125,
                "Model_Interpretation": 0.03125,
                "Hyperparameter_Tuning": 0.01875,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 16
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mode": 2
                },
                "Data_Transform": {
                    "minmaxscaler": 2,
                    "standardscaler": 3,
                    "normalizer": 1,
                    "robustscaler": 3,
                    "tile": 1,
                    ".mod": 2
                },
                "Model_Train": {
                    "model": 4,
                    "randomforestclassifier": 2,
                    "model_selection": 2,
                    "gradientboostingclassifier": 1,
                    "decisiontreeclassifier": 1,
                    "kneighborsclassifier": 1,
                    "svc": 1,
                    "gaussiannb": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    "model": 4
                },
                "Model_Interpretation": {
                    "model": 4,
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {
                    "cross_val_score": 1,
                    "kfold": 2
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    54,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 84,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 54,
                "o_idx": 0
            }
        },
        {
            "source": "# Scaling Model\nssc = StandardScaler()\nmms = MinMaxScaler()\nmas = MaxAbsScaler()\nrsc = RobustScaler()\n\nscl_list = [ssc,mms,mas,rsc]\n\n# Machine Learning Model\nknn = KNeighborsClassifier(n_neighbors = 13) #KNN\ndtc = DecisionTreeClassifier() # Decision Tree\nrfc = RandomForestClassifier(n_estimators=13) #Random Forest\ngnb = GaussianNB() # Naive Bayes\nsvc = SVC() #SVC\ngbc = GradientBoostingClassifier()\nclf_list = [knn,dtc,rfc,gnb,svc,gbc]\n\nscore_list = []\nscore_name = []\n\nfor scl in scl_list:# at first, scale data\n    scl.fit(train_data)\n    train_data = scl.transform(train_data)\n    test_data = scl.transform(test_data)\n    for clf in clf_list: # based on scaled data, make machine learning model\n        scoring = \"accuracy\"\n        score = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\n        score_name.append(str(scl)+\":\"+str(clf))\n        score = round(np.mean(score)*100,2)\n        score_list.append(score)        ",
            "mc_idx": 85,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.21428571428571427,
                "Data_Transform": 0.42857142857142855,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.2857142857142857,
                "Model_Interpretation": 0.2857142857142857,
                "Hyperparameter_Tuning": 0.07142857142857142,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    "np.mean": 1,
                    ".mean": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    "minmaxscaler": 2,
                    "standardscaler": 1,
                    "robustscaler": 1
                },
                "Model_Train": {
                    ".fit(": 1,
                    "model": 3,
                    "randomforestclassifier": 2,
                    "gradientboostingclassifier": 1,
                    "decisiontreeclassifier": 1,
                    "kneighborsclassifier": 1,
                    "svc": 4,
                    "gaussiannb": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    "model": 3
                },
                "Model_Interpretation": {
                    "model": 3,
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {
                    "cross_val_score": 1
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    55,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 85,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 55,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Check each type of <mark>Scaling method</mark> and <mark>Machine learning</mark> model's Score</b>\n",
            "mc_idx": 86,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "plt.figure(figsize=(20,8))\nx = score_name\ny = score_list\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height + 0.25, '%.1f' %height, ha='center', va='bottom', size = 12)\nplt.bar(x, y,color='#e35f62')\nplt.ylim(60,)",
            "mc_idx": 87,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "plt.bar": 1,
                    ".bar(": 1,
                    "size": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plt.bar": 1,
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c056_o001_image_18.png",
                    56,
                    1,
                    18
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(60.0, 86.856)",
                        "<Figure size 1440x576 with 1 Axes>"
                    ]
                },
                "mc_idx": 87,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 56,
                "o_idx": 1
            }
        },
        {
            "source": "### Check out what types of method get the score higher than <mark>80</mark>?",
            "mc_idx": 88,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# make a new dataframe which is filled with model type and its score\nma_result = pd.DataFrame()\nma_result.insert(0,\"type\",x)\nma_result.insert(0,\"score\",y)\nma_res_score = []\nma_res_name = []\n\n# seperate score higher than 80.\nfor i in range(len(ma_result[ma_result[\"score\"] >= 80].value_counts().index)):\n    ma_res_score.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][0])\n    ma_res_name.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][1])\nprint(ma_result[ma_result[\"score\"] >= 80].value_counts())\nx = ma_res_name\ny = ma_res_score\n\n# visualization\nplt.figure(figsize=(20,8))\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height, '%.1f' %height, ha='center', va='bottom', size = 12)\n\nplt.bar(ma_res_name,ma_res_score,color='#e35f62')\nplt.ylim(80,83)",
            "mc_idx": 89,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.08333333333333333,
                "Model_Evaluation": 0.08333333333333333,
                "Model_Interpretation": 0.08333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.16666666666666666,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 4,
                    "plt.bar": 1,
                    ".bar(": 1,
                    "size": 2,
                    ".value_counts": 4
                },
                "Data_Transform": {},
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plt.bar": 1,
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c057_o002_image_19.png",
                    57,
                    2,
                    19
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "score  type                                                    \n80.70  RobustScaler():RandomForestClassifier(n_estimators=13)      1\n80.81  MinMaxScaler():RandomForestClassifier(n_estimators=13)      1\n81.14  StandardScaler():SVC()                                      1\n81.26  StandardScaler():KNeighborsClassifier(n_neighbors=13)       1\n81.37  MaxAbsScaler():KNeighborsClassifier(n_neighbors=13)         1\n81.48  StandardScaler():RandomForestClassifier(n_estimators=13)    1\n81.59  MaxAbsScaler():SVC()                                        1\n       MinMaxScaler():KNeighborsClassifier(n_neighbors=13)         1\n       MinMaxScaler():SVC()                                        1\n81.82  StandardScaler():GradientBoostingClassifier()               1\n81.93  MaxAbsScaler():GradientBoostingClassifier()                 1\n       MaxAbsScaler():RandomForestClassifier(n_estimators=13)      1\n       RobustScaler():GradientBoostingClassifier()                 1\n82.04  MinMaxScaler():GradientBoostingClassifier()                 1\n       RobustScaler():KNeighborsClassifier(n_neighbors=13)         1\n82.72  RobustScaler():SVC()                                        1\ndtype: int64\n",
                        "(80.0, 83.0)",
                        "<Figure size 1440x576 with 1 Axes>"
                    ]
                },
                "mc_idx": 89,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 57,
                "o_idx": 2
            }
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n\n<b>The score of the machine learning model <mark>SVC</mark>, which was scaled using the <mark>Robust scaling model</mark>, recorded the highest score with <mark>82.7</mark>. <br> So I choose this way in machine learning.</b>",
            "mc_idx": 90,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\ntrain_data.head()",
            "mc_idx": 91,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5555555555555556,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 2,
                    ".head(": 1,
                    "head": 1,
                    ".head": 1,
                    ".isnull": 2,
                    ".value_counts": 2
                },
                "Data_Transform": {
                    ".fillna(": 2,
                    ".drop": 1,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    58,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0       3    0  1.0   0.0    2.0         0    0.0         0.4\n1       1    1  3.0   4.0    0.8         1    2.0         0.4\n2       3    1  1.0   0.0    2.0         0    1.0         0.0\n3       1    1  2.0   4.0    0.8         0    2.0         0.4\n4       3    0  2.0   0.0    2.0         0    0.0         0.0"
                    ]
                },
                "mc_idx": 91,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 58,
                "o_idx": 0
            }
        },
        {
            "source": "scl = RobustScaler()\nscl.fit(train_data)\nscl.transform(train_data)\nscl.transform(test_data)\n\nclf = SVC()\nclf.fit(train_data, target)\n# drop unnecessary column\ntest_data = test_df.drop(\"PassengerId\", axis = 1).copy()\nprediction = clf.predict(test_data)\nscore = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\nscore = round(np.mean(score)*100,2)\nprint(\"score: \",score)\nprint(\"prediction: \",prediction)",
            "mc_idx": 92,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 1.0,
                "Model_Train": 0.75,
                "Model_Evaluation": 0.5,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.25,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    "np.mean": 1,
                    ".mean": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    "robustscaler": 1,
                    ".drop": 1
                },
                "Model_Train": {
                    ".fit(": 2,
                    "svc": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {
                    "cross_val_score": 1
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    59,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/sklearn/base.py:451: UserWarning:\n\nX does not have valid feature names, but RobustScaler was fitted with feature names\n\n",
                        "score:  82.72\nprediction:  [0 1 0 0 1 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 1\n 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 1 1 0 1 0\n 1 0 0 1 0 1 1 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0\n 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0\n 0 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 0 1 0 1\n 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 0 1 0\n 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1\n 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0\n 1 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0\n 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 0\n 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 0 1 0 0 1 0 1 0 0 0 0\n 0 1 1 1 1 1 0 1 0 0 1]\n"
                    ]
                },
                "mc_idx": 92,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 59,
                "o_idx": 1
            }
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd63. Use Deep learning Predict Result</b></div>   ",
            "mc_idx": 93,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# import deep learning model\nimport tensorflow as tf",
            "mc_idx": 94,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.05,
                "Model_Evaluation": 0.05,
                "Model_Interpretation": 0.05,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 20
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    60,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 94,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 60,
                "o_idx": 0
            }
        },
        {
            "source": "train_data",
            "mc_idx": 95,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    61,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0         3    0  1.0   0.0    2.0         0    0.0         0.4\n1         1    1  3.0   4.0    0.8         1    2.0         0.4\n2         3    1  1.0   0.0    2.0         0    1.0         0.0\n3         1    1  2.0   4.0    0.8         0    2.0         0.4\n4         3    0  2.0   0.0    2.0         0    0.0         0.0\n..      ...  ...  ...   ...    ...       ...    ...         ...\n886       2    0  2.0   1.0    1.8         0    3.0         0.0\n887       1    1  1.0   3.0    0.4         0    1.0         0.0\n888       3    1  1.0   2.0    2.0         0    1.0         1.2\n889       1    0  1.0   3.0    0.8         1    0.0         0.0\n890       3    0  2.0   0.0    2.0         2    0.0         0.0\n\n[891 rows x 8 columns]"
                    ]
                },
                "mc_idx": 95,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 61,
                "o_idx": 0
            }
        },
        {
            "source": "target",
            "mc_idx": 96,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    62,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "0      0\n1      1\n2      1\n3      1\n4      0\n      ..\n886    0\n887    1\n888    0\n889    1\n890    0\nName: Survived, Length: 891, dtype: int64"
                    ]
                },
                "mc_idx": 96,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 62,
                "o_idx": 0
            }
        },
        {
            "source": "import tensorflow as tf\n\nmodel = tf.keras.models.Sequential(\n[\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])# if the layer nuber get too high numb, it can be lead model's overfitting.\n\nmodel.compile(optimizer=\"adam\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"])\nmodel.fit(np.array(train_data), np.array(target), epochs=150, verbose=0)\n\n# if my deep learning model need to fix or improve, please leave a comment/feedback how should I fix it. ",
            "mc_idx": 97,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.03333333333333333,
                "Data_Transform": 0.03333333333333333,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.2,
                "Model_Interpretation": 0.2,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mode": 1
                },
                "Data_Transform": {
                    ".mod": 1
                },
                "Model_Train": {
                    "model.fit": 1,
                    "sequential(": 1,
                    "compile": 1,
                    ".fit(": 1,
                    "model": 6,
                    "tf.keras": 10,
                    ".layers.dense": 9,
                    ".sequential": 1
                },
                "Model_Evaluation": {
                    "model": 6
                },
                "Model_Interpretation": {
                    "model": 6
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    63,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<keras.callbacks.History at 0x7ddf7024cd50>"
                    ]
                },
                "mc_idx": 97,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 63,
                "o_idx": 0
            }
        },
        {
            "source": "submission_dl = []",
            "mc_idx": 98,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    64,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 98,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 64,
                "o_idx": 0
            }
        },
        {
            "source": "# As the sample, Survival must be expressed as either 0 or 1. \n# But the prediction value from deep learning, It expressed percentage(0~1).\n# So if its value higher than 0.5, It is more likely to have lived.\n# let it transfer to 1. else transfer to 0.\nfor i in range(len(model.predict(test_data))):\n    if model.predict(test_data)[i][0] >= 0.5:\n        submission_dl.append(1)\n    else:\n        submission_dl.append(0)\n# print(submission_dl)",
            "mc_idx": 99,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.5,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 2
                },
                "Model_Evaluation": {
                    "model": 2,
                    ".predict(": 2
                },
                "Model_Interpretation": {
                    "model": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    65,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 99,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 65,
                "o_idx": 0
            }
        },
        {
            "source": "prediction_dl = np.array(submission_dl)\nprediction_dl",
            "mc_idx": 100,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    66,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "array([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1,\n       1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n       1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1,\n       0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n       0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1,\n       1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n       1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n       1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,\n       0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1])"
                    ]
                },
                "mc_idx": 100,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 66,
                "o_idx": 0
            }
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd64. Submission</b></div>   ",
            "mc_idx": 101,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "submission = pd.DataFrame({\n    \"PassengerId\":test_df[\"PassengerId\"],\n    \"Survived\":prediction\n    # if you want submit MachineLearning Score, use \"prediction\"\n    # if you want submit DeepLearning Score, use \"prediction_dl\"\n    # as my submittion result, Machine Learning Score higher than Deep learning Score. So I choose ML Score.\n})\n\nsubmission.to_csv(\"submission_ma.csv\",index=False)",
            "mc_idx": 102,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    67,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 102,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 67,
                "o_idx": 0
            }
        },
        {
            "source": "submission = pd.read_csv(\"submission_ma.csv\")\nsubmission.head()",
            "mc_idx": 103,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 2,
                    "pd.read_": 2
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    68,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived\n0          892         0\n1          893         1\n2          894         0\n3          895         0\n4          896         1"
                    ]
                },
                "mc_idx": 103,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 68,
                "o_idx": 0
            }
        },
        {
            "source": "#### <div style='text-align:center; font-family:arial'> \ud83d\ude47\ud83c\udffb\u200d\u2642\ufe0fThanks For Watching!<br></div>",
            "mc_idx": 104,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        }
    ],
    "code_cells": [
        {
            "source": "#data\nimport pandas as pd\nimport numpy as np\n\n#visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno",
            "mc_idx": 10,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.02,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.04,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 5
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "matplotlib": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "matplotlib": 1,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "train_df = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntest_df = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ntrain_df.head()",
            "mc_idx": 11,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.375,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    1,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  "
                    ]
                },
                "mc_idx": 11,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.head()",
            "mc_idx": 12,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass                                          Name     Sex  \\\n0          892       3                              Kelly, Mr. James    male   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n2          894       2                     Myles, Mr. Thomas Francis    male   \n3          895       3                              Wirz, Mr. Albert    male   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n\n    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n0  34.5      0      0   330911   7.8292   NaN        Q  \n1  47.0      1      0   363272   7.0000   NaN        S  \n2  62.0      0      0   240276   9.6875   NaN        Q  \n3  27.0      0      0   315154   8.6625   NaN        S  \n4  22.0      1      1  3101298  12.2875   NaN        S  "
                    ]
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "# survived = 0 - d , 1 - alive\n# pclass = Ticket class\n# sibsp = Wife, uncle, etc. on Titanic. If it's zero, you'll be alone.\n# parch = parent + childer\n# embarked  = port of Embarktion",
            "mc_idx": 14,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    3,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 0
            }
        },
        {
            "source": "print(train_df.shape)\nprint(test_df.shape)",
            "mc_idx": 15,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 1.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "shape": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(891, 12)\n(418, 11)\n"
                    ]
                },
                "mc_idx": 15,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "print(\"train= \",train_df.info())",
            "mc_idx": 16,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    5,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    object \n 5   Age          714 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        204 non-null    object \n 11  Embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\ntrain=  None\n"
                    ]
                },
                "mc_idx": 16,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 0
            }
        },
        {
            "source": "print(\"test= \",test_df.info())",
            "mc_idx": 17,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".info(": 1,
                    "info": 1,
                    ".info": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    6,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 418 entries, 0 to 417\nData columns (total 11 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  418 non-null    int64  \n 1   Pclass       418 non-null    int64  \n 2   Name         418 non-null    object \n 3   Sex          418 non-null    object \n 4   Age          332 non-null    float64\n 5   SibSp        418 non-null    int64  \n 6   Parch        418 non-null    int64  \n 7   Ticket       418 non-null    object \n 8   Fare         417 non-null    float64\n 9   Cabin        91 non-null     object \n 10  Embarked     418 non-null    object \ndtypes: float64(2), int64(4), object(5)\nmemory usage: 36.0+ KB\ntest=  None\n"
                    ]
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "print(train_df.isnull().sum())\nmsno.matrix(train_df).set_title(\"Train set\",fontsize=20)",
            "mc_idx": 20,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    "size": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c007_o002_image_0.png",
                    7,
                    2,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64\n",
                        "Text(0.5, 1.0, 'Train set')",
                        "<Figure size 1800x720 with 2 Axes>"
                    ]
                },
                "mc_idx": 20,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 2
            }
        },
        {
            "source": "print(test_df.isnull().sum())\nmsno.matrix(test_df).set_title(\"Train set\",fontsize=20)",
            "mc_idx": 21,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "df.isnull().sum": 1,
                    "size": 1,
                    ".isnull": 1,
                    ".sum": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c008_o002_image_1.png",
                    8,
                    2,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "PassengerId      0\nPclass           0\nName             0\nSex              0\nAge             86\nSibSp            0\nParch            0\nTicket           0\nFare             1\nCabin          327\nEmbarked         0\ndtype: int64\n",
                        "Text(0.5, 1.0, 'Train set')",
                        "<Figure size 1800x720 with 2 Axes>"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 2
            }
        },
        {
            "source": "def bar_chart(feature):\n    survived = train_df[train_df[\"Survived\"]==1][feature].value_counts()\n    dead = train_df[train_df[\"Survived\"]==0][feature].value_counts()\n    df = pd.DataFrame([survived,dead])\n    df.index = [\"Survived\",\"Dead\"]\n    df.plot(kind=\"bar\",stacked=True, figsize=(20,7),title=feature,fontsize=20)\nfor a in [\"Sex\",\"Pclass\",\"SibSp\"]:\n    bar_chart(a)",
            "mc_idx": 23,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.125,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.375,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 2,
                    ".plot(": 2,
                    "size": 2,
                    ".value_counts": 2
                },
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1,
                    "chart": 2
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c009_o002_image_4.png",
                    9,
                    2,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>",
                        "<Figure size 1440x504 with 1 Axes>",
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 2
            }
        },
        {
            "source": "train_df.head(10)\n#The name doesn't reflect much on the result, but Mr. and Mrs in the name imply information about whether or not they are married, so only extract it.",
            "mc_idx": 26,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.25,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 1
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    "info": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n5            6         0       3   \n6            7         0       1   \n7            8         0       3   \n8            9         1       3   \n9           10         1       2   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n5                                   Moran, Mr. James    male   NaN      0   \n6                            McCarthy, Mr. Timothy J    male  54.0      0   \n7                     Palsson, Master. Gosta Leonard    male   2.0      3   \n8  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0   \n9                Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  \n5      0            330877   8.4583   NaN        Q  \n6      0             17463  51.8625   E46        S  \n7      1            349909  21.0750   NaN        S  \n8      2            347742  11.1333   NaN        S  \n9      0            237736  30.0708   NaN        C  "
                    ]
                },
                "mc_idx": 26,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "train_test_df = [train_df,test_df]\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Name\"].str.extract('([A-Za-z]+)\\.',expand=False)",
            "mc_idx": 28,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "extract": 1,
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 28,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Title\"]",
            "mc_idx": 29,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    12,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "0        Mr\n1       Mrs\n2      Miss\n3       Mrs\n4        Mr\n       ... \n886     Rev\n887    Miss\n888    Miss\n889      Mr\n890      Mr\nName: Title, Length: 891, dtype: object"
                    ]
                },
                "mc_idx": 29,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Title\"].value_counts()",
            "mc_idx": 30,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Mr          517\nMiss        182\nMrs         125\nMaster       40\nDr            7\nRev           6\nMlle          2\nMajor         2\nCol           2\nCountess      1\nCapt          1\nMs            1\nSir           1\nLady          1\nMme           1\nDon           1\nJonkheer      1\nName: Title, dtype: int64"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "title = train_df[\"Title\"].value_counts()\nplt.figure(figsize =(20,5))\nsns.barplot(x = title.index, y = title.values)",
            "mc_idx": 31,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.25,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 1,
                    "sns.": 1,
                    "size": 1,
                    ".value_counts": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c014_o001_image_5.png",
                    14,
                    1,
                    5
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 1440x360 with 1 Axes>"
                    ]
                },
                "mc_idx": 31,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 1
            }
        },
        {
            "source": "# use another library to more various visualization\nimport plotly.express as px\npx.bar(x = title.index, y = title.values)",
            "mc_idx": 32,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.2,
                "Data_Transform": 0.1,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.2,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "plotly": 1
                },
                "Data_Transform": {
                    ".exp": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1,
                    "plotly.express": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    15,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-2.16.1.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        ",
                        "<div>                            <div id=\"7bac20a8-5aad-484d-a6c1-0fb6739657d5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7bac20a8-5aad-484d-a6c1-0fb6739657d5\")) {                    Plotly.newPlot(                        \"7bac20a8-5aad-484d-a6c1-0fb6739657d5\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"x=%{x}<br>y=%{y}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"Mr\",\"Miss\",\"Mrs\",\"Master\",\"Dr\",\"Rev\",\"Mlle\",\"Major\",\"Col\",\"Countess\",\"Capt\",\"Ms\",\"Sir\",\"Lady\",\"Mme\",\"Don\",\"Jonkheer\"],\"xaxis\":\"x\",\"y\":[517,182,125,40,7,6,2,2,2,1,1,1,1,1,1,1,1],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"x\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"y\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('7bac20a8-5aad-484d-a6c1-0fb6739657d5');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 1
            }
        },
        {
            "source": "title_mapping = {\n    'Mr': 0, \"Miss\":1,\"Mrs\":2,\"Master\":3,\"Dr\":3,\"Rev\":3,\"Col\":3,\"Major\":3,\"Mile\":3,\"Countess\":3,\"Ms\":3,\"Lady\":3,\"Johnkheer\":3,\"Don\":3,\"Dona\":3,\"Mme\":3,\"Capt\":3,\"Sir\":3\n}\n\nfor dataset in train_test_df:\n    dataset[\"Title\"] = dataset[\"Title\"].map(title_mapping)",
            "mc_idx": 33,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 33,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 34,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    17,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  Title  \n0      0         A/5 21171   7.2500   NaN        S    0.0  \n1      0          PC 17599  71.2833   C85        C    2.0  \n2      0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3      0            113803  53.1000  C123        S    2.0  \n4      0            373450   8.0500   NaN        S    0.0  "
                    ]
                },
                "mc_idx": 34,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "bar_chart(\"Title\")",
            "mc_idx": 35,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "chart": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c018_o000_image_6.png",
                    18,
                    0,
                    6
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 35,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "train_df",
            "mc_idx": 36,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    19,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name     Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    male  22.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                               Heikkinen, Miss. Laina  female  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                             Allen, Mr. William Henry    male  35.0      0   \n..                                                 ...     ...   ...    ...   \n886                              Montvila, Rev. Juozas    male  27.0      0   \n887                       Graham, Miss. Margaret Edith  female  19.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n889                              Behr, Mr. Karl Howell    male  26.0      0   \n890                                Dooley, Mr. Patrick    male  32.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 36,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "sex_mapping = {\"male\":0,\"female\":1}\nfor dataset in train_test_df:\n    dataset[\"Sex\"] = dataset[\"Sex\"].map(sex_mapping)",
            "mc_idx": 38,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "bar_chart(\"Sex\")",
            "mc_idx": 39,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "chart": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c021_o000_image_7.png",
                    21,
                    0,
                    7
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 39,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "# use median get the average age\ntrain_df[\"Age\"].fillna(train_df.groupby('Title')['Age'].transform(\"median\"),inplace=True)\ntest_df[\"Age\"].fillna(test_df.groupby('Title')['Age'].transform(\"median\"),inplace=True)",
            "mc_idx": 41,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 2
                },
                "Data_Transform": {
                    ".groupby(": 2,
                    ".fillna(": 2,
                    "transform": 2,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 41,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "# visualization death - age\nfacet = sns.FacetGrid(train_df, hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df['Age'].max()))\nfacet.add_legend()\n\nplt.show()",
            "mc_idx": 42,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c023_o000_image_8.png",
                    23,
                    0,
                    8
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "# visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(0,20) # to limitation X boundary, we can see the graph more specifically",
            "mc_idx": 44,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    "graph": 1,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c024_o001_image_9.png",
                    24,
                    1,
                    9
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(0.0, 20.0)",
                        "<Figure size 864x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 1
            }
        },
        {
            "source": "# visualization death - age, age between 0~20 years old\nfacet = sns.FacetGrid(train_df, hue=\"Survived\", aspect=4)\nfacet.map(sns.kdeplot,\"Age\",shade=True)\nfacet.set(xlim=(0,train_df[\"Age\"].max())) # to use xlim, limitation age's range\nplt.xlim(20,30)",
            "mc_idx": 45,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c025_o001_image_10.png",
                    25,
                    1,
                    10
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(20.0, 30.0)",
                        "<Figure size 864x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 45,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 1
            }
        },
        {
            "source": "train_df",
            "mc_idx": 47,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    26,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name  Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    0  22.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...    1  38.0      1   \n2                               Heikkinen, Miss. Laina    1  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  35.0      1   \n4                             Allen, Mr. William Henry    0  35.0      0   \n..                                                 ...  ...   ...    ...   \n886                              Montvila, Rev. Juozas    0  27.0      0   \n887                       Graham, Miss. Margaret Edith    1  19.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"    1  21.0      1   \n889                              Behr, Mr. Karl Howell    0  26.0      0   \n890                                Dooley, Mr. Patrick    0  32.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 47,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "df_2 = train_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(891):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a <= 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\n        \ntrain_df[\"Age\"] = df_2[\"Age\"]\ntrain_df",
            "mc_idx": 48,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    27,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name  Sex  Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    0  1.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1   \n2                               Heikkinen, Miss. Laina    1  1.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1   \n4                             Allen, Mr. William Henry    0  2.0      0   \n..                                                 ...  ...  ...    ...   \n886                              Montvila, Rev. Juozas    0  2.0      0   \n887                       Graham, Miss. Margaret Edith    1  1.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"    1  1.0      1   \n889                              Behr, Mr. Karl Howell    0  1.0      0   \n890                                Dooley, Mr. Patrick    0  2.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 48,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "test_df",
            "mc_idx": 50,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    28,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Pclass                                          Name  Sex  \\\n0            892       3                              Kelly, Mr. James    0   \n1            893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2            894       2                     Myles, Mr. Thomas Francis    0   \n3            895       3                              Wirz, Mr. Albert    0   \n4            896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n..           ...     ...                                           ...  ...   \n413         1305       3                            Spector, Mr. Woolf    0   \n414         1306       1                  Oliva y Ocana, Dona. Fermina    1   \n415         1307       3                  Saether, Mr. Simon Sivertsen    0   \n416         1308       3                           Ware, Mr. Frederick    0   \n417         1309       3                      Peter, Master. Michael J    0   \n\n      Age  SibSp  Parch              Ticket      Fare Cabin Embarked  Title  \n0    34.5      0      0              330911    7.8292   NaN        Q      0  \n1    47.0      1      0              363272    7.0000   NaN        S      2  \n2    62.0      0      0              240276    9.6875   NaN        Q      0  \n3    27.0      0      0              315154    8.6625   NaN        S      0  \n4    22.0      1      1             3101298   12.2875   NaN        S      2  \n..    ...    ...    ...                 ...       ...   ...      ...    ...  \n413  28.5      0      0           A.5. 3236    8.0500   NaN        S      0  \n414  39.0      0      0            PC 17758  108.9000  C105        C      3  \n415  38.5      0      0  SOTON/O.Q. 3101262    7.2500   NaN        S      0  \n416  28.5      0      0              359309    8.0500   NaN        S      0  \n417  10.0      1      1                2668   22.3583   NaN        C      3  \n\n[418 rows x 12 columns]"
                    ]
                },
                "mc_idx": 50,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 0
            }
        },
        {
            "source": "df_2 = test_df[\"Age\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Age\"]\nfor i in range(418):\n    a = df_2['Age'].get(i)\n    if int(a) <= 16:\n        df_2['Age'][i] = 0\n    elif int(a) > 16 and a <=26:\n        df_2['Age'][i] = 1\n    elif int(a) > 26 and a <= 36:\n        df_2['Age'][i] = 2\n    elif int(a) >36 and a < 64:\n        df_2[\"Age\"][i] = 3\n    else:\n        df_2['Age'][i] = 4\ntest_df[\"Age\"] = df_2[\"Age\"]\ntest_df",
            "mc_idx": 51,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Pclass                                          Name  Sex  \\\n0            892       3                              Kelly, Mr. James    0   \n1            893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2            894       2                     Myles, Mr. Thomas Francis    0   \n3            895       3                              Wirz, Mr. Albert    0   \n4            896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n..           ...     ...                                           ...  ...   \n413         1305       3                            Spector, Mr. Woolf    0   \n414         1306       1                  Oliva y Ocana, Dona. Fermina    1   \n415         1307       3                  Saether, Mr. Simon Sivertsen    0   \n416         1308       3                           Ware, Mr. Frederick    0   \n417         1309       3                      Peter, Master. Michael J    0   \n\n     Age  SibSp  Parch              Ticket      Fare Cabin Embarked  Title  \n0    2.0      0      0              330911    7.8292   NaN        Q      0  \n1    3.0      1      0              363272    7.0000   NaN        S      2  \n2    3.0      0      0              240276    9.6875   NaN        Q      0  \n3    2.0      0      0              315154    8.6625   NaN        S      0  \n4    1.0      1      1             3101298   12.2875   NaN        S      2  \n..   ...    ...    ...                 ...       ...   ...      ...    ...  \n413  2.0      0      0           A.5. 3236    8.0500   NaN        S      0  \n414  3.0      0      0            PC 17758  108.9000  C105        C      3  \n415  3.0      0      0  SOTON/O.Q. 3101262    7.2500   NaN        S      0  \n416  2.0      0      0              359309    8.0500   NaN        S      0  \n417  0.0      1      1                2668   22.3583   NaN        C      3  \n\n[418 rows x 12 columns]"
                    ]
                },
                "mc_idx": 51,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "bar_chart(\"Age\")",
            "mc_idx": 52,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Visualization",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "chart": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c030_o000_image_11.png",
                    30,
                    0,
                    11
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 1440x504 with 1 Axes>"
                    ]
                },
                "mc_idx": 52,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "train_df",
            "mc_idx": 55,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    31,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name  Sex  Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    0  1.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1   \n2                               Heikkinen, Miss. Laina    1  1.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1   \n4                             Allen, Mr. William Henry    0  2.0      0   \n..                                                 ...  ...  ...    ...   \n886                              Montvila, Rev. Juozas    0  2.0      0   \n887                       Graham, Miss. Margaret Edith    1  1.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"    1  1.0      1   \n889                              Behr, Mr. Karl Howell    0  1.0      0   \n890                                Dooley, Mr. Patrick    0  2.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  Title  \n0        0         A/5 21171   7.2500   NaN        S    0.0  \n1        0          PC 17599  71.2833   C85        C    2.0  \n2        0  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3        0            113803  53.1000  C123        S    2.0  \n4        0            373450   8.0500   NaN        S    0.0  \n..     ...               ...      ...   ...      ...    ...  \n886      0            211536  13.0000   NaN        S    3.0  \n887      0            112053  30.0000   B42        S    1.0  \n888      2        W./C. 6607  23.4500   NaN        S    1.0  \n889      0            111369  30.0000  C148        C    0.0  \n890      0            370376   7.7500   NaN        Q    0.0  \n\n[891 rows x 13 columns]"
                    ]
                },
                "mc_idx": 55,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "pclass1 = train_df[train_df[\"Pclass\"]==1][\"Embarked\"].value_counts() # the place where a first-class person got off\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Embarked\"].value_counts() # the place where a second-class person got off\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Embarked\"].value_counts() # the place where a third-class person got off\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,8))",
            "mc_idx": 56,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.1111111111111111,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.1111111111111111,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 3,
                    ".plot(": 2,
                    "size": 1,
                    ".value_counts": 3
                },
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c032_o001_image_12.png",
                    32,
                    1,
                    12
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 1440x576 with 1 Axes>"
                    ]
                },
                "mc_idx": 56,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 1
            }
        },
        {
            "source": "for dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset['Embarked'].fillna(\"S\")\n# fill \"S\" in blanked \"Embarked\" row\ntrain_df.head()",
            "mc_idx": 57,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {
                    ".fillna(": 1,
                    ".fillna": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex  Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  1.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1      0   \n2                             Heikkinen, Miss. Laina    1  1.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1      0   \n4                           Allen, Mr. William Henry    0  2.0      0      0   \n\n             Ticket     Fare Cabin Embarked  Title  \n0         A/5 21171   7.2500   NaN        S    0.0  \n1          PC 17599  71.2833   C85        C    2.0  \n2  STON/O2. 3101282   7.9250   NaN        S    1.0  \n3            113803  53.1000  C123        S    2.0  \n4            373450   8.0500   NaN        S    0.0  "
                    ]
                },
                "mc_idx": 57,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "embarked_mapping = {\"S\":0,\"C\":1,\"Q\":2} # do mapping(test - number) in embarked row, for more convinence in machine learning\nfor dataset in train_test_df:\n    dataset[\"Embarked\"] = dataset[\"Embarked\"].map(embarked_mapping)",
            "mc_idx": 58,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 58,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Fare\"].fillna(train_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True)\ntest_df[\"Fare\"].fillna(test_df.groupby(\"Pclass\")[\"Fare\"].transform(\"median\"),inplace=True)",
            "mc_idx": 60,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 2
                },
                "Data_Transform": {
                    ".groupby(": 2,
                    ".fillna(": 2,
                    "transform": 2,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 60,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,train_df[\"Fare\"].max()))\nfacet.add_legend()",
            "mc_idx": 61,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c036_o001_image_13.png",
                    36,
                    1,
                    13
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<seaborn.axisgrid.FacetGrid at 0x7ddf93235290>",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 61,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 36,
                "o_idx": 1
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(0,100))\nfacet.add_legend()",
            "mc_idx": 62,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.6666666666666666,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c037_o001_image_14.png",
                    37,
                    1,
                    14
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<seaborn.axisgrid.FacetGrid at 0x7ddf932356d0>",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 62,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 37,
                "o_idx": 1
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"Fare\",shade=True)\nfacet.set(xlim=(100,200))\nfacet.add_legend()",
            "mc_idx": 63,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.6666666666666666,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 1.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c038_o001_image_15.png",
                    38,
                    1,
                    15
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<seaborn.axisgrid.FacetGrid at 0x7ddf931b3610>",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 63,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 38,
                "o_idx": 1
            }
        },
        {
            "source": "df_2 = train_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(891):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntrain_df[\"Fare\"] = df_2[\"Fare\"]\ntrain_df.head()",
            "mc_idx": 64,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    "columns": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    39,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex  Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  1.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1      0   \n2                             Heikkinen, Miss. Laina    1  1.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1      0   \n4                           Allen, Mr. William Henry    0  2.0      0      0   \n\n             Ticket  Fare Cabin  Embarked  Title  \n0         A/5 21171   0.0   NaN         0    0.0  \n1          PC 17599   4.0   C85         1    2.0  \n2  STON/O2. 3101282   0.0   NaN         0    1.0  \n3            113803   4.0  C123         0    2.0  \n4            373450   0.0   NaN         0    0.0  "
                    ]
                },
                "mc_idx": 64,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 39,
                "o_idx": 0
            }
        },
        {
            "source": "df_2 = test_df[\"Fare\"]\ndf_2 = pd.DataFrame(df_2)\ndf_2.columns=[\"Fare\"]\nfor i in range(418):\n    a = df_2['Fare'].get(i)\n    if int(a) <= 8:\n        df_2['Fare'][i] = 0\n    elif int(a) > 8 and a <=17:\n        df_2['Fare'][i] = 1\n    elif int(a) > 17 and a <= 27:\n        df_2['Fare'][i] = 2\n    elif int(a) >27 and a < 37:\n        df_2[\"Fare\"][i] = 3\n    else:\n        df_2['Fare'][i] = 4\ntest_df[\"Fare\"] = df_2[\"Fare\"]\ntest_df.head()",
            "mc_idx": 65,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    "columns": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    40,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass                                          Name  Sex  \\\n0          892       3                              Kelly, Mr. James    0   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2          894       2                     Myles, Mr. Thomas Francis    0   \n3          895       3                              Wirz, Mr. Albert    0   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n\n   Age  SibSp  Parch   Ticket  Fare Cabin  Embarked  Title  \n0  2.0      0      0   330911   0.0   NaN         2      0  \n1  3.0      1      0   363272   0.0   NaN         0      2  \n2  3.0      0      0   240276   1.0   NaN         2      0  \n3  2.0      0      0   315154   0.0   NaN         0      0  \n4  1.0      1      1  3101298   1.0   NaN         0      2  "
                    ]
                },
                "mc_idx": 65,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 40,
                "o_idx": 0
            }
        },
        {
            "source": "for dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].str[:1]\n\npclass1 = train_df[train_df[\"Pclass\"]==1][\"Cabin\"].value_counts() #1\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass2 = train_df[train_df[\"Pclass\"]==2][\"Cabin\"].value_counts() #2\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\npclass3 = train_df[train_df[\"Pclass\"]==3][\"Cabin\"].value_counts() #3\ub4f1\uae09\uc778 \uc0ac\ub78c\ub4e4\uc758 \uac1d\uc2e4\uc218\nprint(pclass1)\n\ndf = pd.DataFrame([pclass1,pclass2,pclass3])\ndf.index = [\"1st class\",\"2nd class\",\"3rd class\"]\ndf.plot(kind=\"bar\",stacked = True, figsize=(20,5))",
            "mc_idx": 67,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.3333333333333333,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.1111111111111111,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.1111111111111111,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {
                    "value_counts()": 3,
                    ".plot(": 2,
                    "size": 1,
                    ".value_counts": 3
                },
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".plot(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c041_o002_image_16.png",
                    41,
                    2,
                    16
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "C    59\nB    47\nD    29\nE    25\nA    15\nT     1\nName: Cabin, dtype: int64\n",
                        "<AxesSubplot:>",
                        "<Figure size 1440x360 with 1 Axes>"
                    ]
                },
                "mc_idx": 67,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 41,
                "o_idx": 2
            }
        },
        {
            "source": "cabin_mapping = {\"A\":0,\"B\":0.4,\"C\":0.8,\"D\":1.2,\"E\":1.6,\"F\":2,\"G\":2.4,\"T\":2.8} # do mapping, \n# If the range of numbers is not similar, the larger range can be considered more important.\n# So I'm going to divide it up to a decimal place and give it a similar range.\n# it called feature scaling.\nfor dataset in train_test_df:\n    dataset[\"Cabin\"] = dataset[\"Cabin\"].map(cabin_mapping)",
            "mc_idx": 68,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    42,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 68,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 42,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"Cabin\"].fillna(train_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True)\ntest_df[\"Cabin\"].fillna(test_df.groupby(\"Pclass\")[\"Cabin\"].transform(\"median\"),inplace=True)",
            "mc_idx": 69,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 2
                },
                "Data_Transform": {
                    ".groupby(": 2,
                    ".fillna(": 2,
                    "transform": 2,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    43,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 69,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 43,
                "o_idx": 0
            }
        },
        {
            "source": "train_df[\"FamilySize\"] = train_df[\"SibSp\"] + train_df[\"Parch\"] + 1\ntest_df[\"FamilySize\"] = test_df['SibSp'] + test_df[\"Parch\"] + 1",
            "mc_idx": 71,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    44,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 71,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 44,
                "o_idx": 0
            }
        },
        {
            "source": "facet = sns.FacetGrid(train_df,hue=\"Survived\",aspect=4)\nfacet.map(sns.kdeplot,\"FamilySize\",shade=True)\nfacet.set(xlim=(0,train_df[\"FamilySize\"].max()))\nfacet.add_legend()\nplt.xlim(-3)",
            "mc_idx": 72,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.6,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.6,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 2,
                    "size": 2,
                    ".max": 1
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1,
                    ".add": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 2,
                    ".kde": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c045_o001_image_17.png",
                    45,
                    1,
                    17
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(-3.0, 11.0)",
                        "<Figure size 915.875x216 with 1 Axes>"
                    ]
                },
                "mc_idx": 72,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 45,
                "o_idx": 1
            }
        },
        {
            "source": "family_mapping = {1:0,2:0.4,3:0.8,4:1.2,5:1.6 , 6:2 , 7:2.4 , 8:2.8, 9:3.2 , 10:3.6 , 11:4}\nfor dataset in train_test_df:\n    dataset[\"FamilySize\"] = dataset[\"FamilySize\"].map(family_mapping)",
            "mc_idx": 73,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.6666666666666666,
                "Data_Transform": 0.6666666666666666,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "dataset": 3
                },
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {
                    ".map(": 1,
                    ".map": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    46,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 73,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 46,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 74,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    47,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex  Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  1.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  3.0      1      0   \n2                             Heikkinen, Miss. Laina    1  1.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  2.0      1      0   \n4                           Allen, Mr. William Henry    0  2.0      0      0   \n\n             Ticket  Fare  Cabin  Embarked  Title  FamilySize  \n0         A/5 21171   0.0    2.0         0    0.0         0.4  \n1          PC 17599   4.0    0.8         1    2.0         0.4  \n2  STON/O2. 3101282   0.0    2.0         0    1.0         0.0  \n3            113803   4.0    0.8         0    2.0         0.4  \n4            373450   0.0    2.0         0    0.0         0.0  "
                    ]
                },
                "mc_idx": 74,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 47,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.head()",
            "mc_idx": 75,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    48,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass                                          Name  Sex  \\\n0          892       3                              Kelly, Mr. James    0   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)    1   \n2          894       2                     Myles, Mr. Thomas Francis    0   \n3          895       3                              Wirz, Mr. Albert    0   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    1   \n\n   Age  SibSp  Parch   Ticket  Fare  Cabin  Embarked  Title  FamilySize  \n0  2.0      0      0   330911   0.0    2.0         2      0         0.0  \n1  3.0      1      0   363272   0.0    2.0         0      2         0.4  \n2  3.0      0      0   240276   1.0    2.0         2      0         0.0  \n3  2.0      0      0   315154   0.0    2.0         0      0         0.0  \n4  1.0      1      1  3101298   1.0    2.0         0      2         0.8  "
                    ]
                },
                "mc_idx": 75,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 48,
                "o_idx": 0
            }
        },
        {
            "source": "drop_list = [\"Ticket\",\"SibSp\",\"Parch\",\"Name\"]\ntrain_df = train_df.drop(drop_list, axis=1)\ntest_df = test_df.drop(drop_list, axis=1)\ntrain_df = train_df.drop([\"PassengerId\"], axis=1)",
            "mc_idx": 77,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".drop": 3
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    49,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 77,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 49,
                "o_idx": 0
            }
        },
        {
            "source": "train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\npd.DataFrame(train_data[\"Title\"]).isnull().value_counts()\n",
            "mc_idx": 78,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.4166666666666667,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 4,
                    ".isnull": 4,
                    ".value_counts": 4
                },
                "Data_Transform": {
                    ".fillna(": 2,
                    ".drop": 1,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    50,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Title\nFalse    891\ndtype: int64"
                    ]
                },
                "mc_idx": 78,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 50,
                "o_idx": 0
            }
        },
        {
            "source": "train_df.head()",
            "mc_idx": 79,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    51,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   Survived  Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0         0       3    0  1.0   0.0    2.0         0    0.0         0.4\n1         1       1    1  3.0   4.0    0.8         1    2.0         0.4\n2         1       3    1  1.0   0.0    2.0         0    1.0         0.0\n3         1       1    1  2.0   4.0    0.8         0    2.0         0.4\n4         0       3    0  2.0   0.0    2.0         0    0.0         0.0"
                    ]
                },
                "mc_idx": 79,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 51,
                "o_idx": 0
            }
        },
        {
            "source": "test_df.head()",
            "mc_idx": 80,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    52,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0          892       3    0  2.0   0.0    2.0         2      0         0.0\n1          893       3    1  3.0   0.0    2.0         0      2         0.4\n2          894       2    0  3.0   1.0    2.0         2      0         0.0\n3          895       3    0  2.0   0.0    2.0         0      0         0.0\n4          896       3    1  1.0   1.0    2.0         0      2         0.8"
                    ]
                },
                "mc_idx": 80,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 52,
                "o_idx": 0
            }
        },
        {
            "source": "test_data = test_df.drop(\"PassengerId\", axis = 1).copy()",
            "mc_idx": 81,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".drop": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    53,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 81,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 53,
                "o_idx": 0
            }
        },
        {
            "source": "# import Scaling Model\nfrom sklearn.preprocessing import StandardScaler #All features have a normal distribution of 0 mean and 1 variance.\nfrom sklearn.preprocessing import MinMaxScaler #Makes all features have data values between 0 and 1.\nfrom sklearn.preprocessing import MaxAbsScaler # Makes the absolute value of all features lie between 0 and 1.\nfrom sklearn.preprocessing import RobustScaler\n#RobustScaler is similar to StandardScaler.\n# However, StandardScaler uses mean and variance, while RobustScaler uses median and quartile.\nfrom sklearn.preprocessing import Normalizer\n#The previous four methods use statistics for each feature.\n\n#import Classifier Modules\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\n# import tuing model\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n\nk_fold = KFold(n_splits = 9, shuffle=True, random_state = 0)",
            "mc_idx": 84,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0125,
                "Data_Transform": 0.075,
                "Model_Train": 0.08125,
                "Model_Evaluation": 0.03125,
                "Model_Interpretation": 0.03125,
                "Hyperparameter_Tuning": 0.01875,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 16
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mode": 2
                },
                "Data_Transform": {
                    "minmaxscaler": 2,
                    "standardscaler": 3,
                    "normalizer": 1,
                    "robustscaler": 3,
                    "tile": 1,
                    ".mod": 2
                },
                "Model_Train": {
                    "model": 4,
                    "randomforestclassifier": 2,
                    "model_selection": 2,
                    "gradientboostingclassifier": 1,
                    "decisiontreeclassifier": 1,
                    "kneighborsclassifier": 1,
                    "svc": 1,
                    "gaussiannb": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    "model": 4
                },
                "Model_Interpretation": {
                    "model": 4,
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {
                    "cross_val_score": 1,
                    "kfold": 2
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    54,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 84,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 54,
                "o_idx": 0
            }
        },
        {
            "source": "# Scaling Model\nssc = StandardScaler()\nmms = MinMaxScaler()\nmas = MaxAbsScaler()\nrsc = RobustScaler()\n\nscl_list = [ssc,mms,mas,rsc]\n\n# Machine Learning Model\nknn = KNeighborsClassifier(n_neighbors = 13) #KNN\ndtc = DecisionTreeClassifier() # Decision Tree\nrfc = RandomForestClassifier(n_estimators=13) #Random Forest\ngnb = GaussianNB() # Naive Bayes\nsvc = SVC() #SVC\ngbc = GradientBoostingClassifier()\nclf_list = [knn,dtc,rfc,gnb,svc,gbc]\n\nscore_list = []\nscore_name = []\n\nfor scl in scl_list:# at first, scale data\n    scl.fit(train_data)\n    train_data = scl.transform(train_data)\n    test_data = scl.transform(test_data)\n    for clf in clf_list: # based on scaled data, make machine learning model\n        scoring = \"accuracy\"\n        score = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\n        score_name.append(str(scl)+\":\"+str(clf))\n        score = round(np.mean(score)*100,2)\n        score_list.append(score)        ",
            "mc_idx": 85,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.21428571428571427,
                "Data_Transform": 0.42857142857142855,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.2857142857142857,
                "Model_Interpretation": 0.2857142857142857,
                "Hyperparameter_Tuning": 0.07142857142857142,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    "np.mean": 1,
                    ".mean": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    "minmaxscaler": 2,
                    "standardscaler": 1,
                    "robustscaler": 1
                },
                "Model_Train": {
                    ".fit(": 1,
                    "model": 3,
                    "randomforestclassifier": 2,
                    "gradientboostingclassifier": 1,
                    "decisiontreeclassifier": 1,
                    "kneighborsclassifier": 1,
                    "svc": 4,
                    "gaussiannb": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    "model": 3
                },
                "Model_Interpretation": {
                    "model": 3,
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {
                    "cross_val_score": 1
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    55,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 85,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 55,
                "o_idx": 0
            }
        },
        {
            "source": "plt.figure(figsize=(20,8))\nx = score_name\ny = score_list\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height + 0.25, '%.1f' %height, ha='center', va='bottom', size = 12)\nplt.bar(x, y,color='#e35f62')\nplt.ylim(60,)",
            "mc_idx": 87,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "plt.bar": 1,
                    ".bar(": 1,
                    "size": 2
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plt.bar": 1,
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c056_o001_image_18.png",
                    56,
                    1,
                    18
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "(60.0, 86.856)",
                        "<Figure size 1440x576 with 1 Axes>"
                    ]
                },
                "mc_idx": 87,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 56,
                "o_idx": 1
            }
        },
        {
            "source": "# make a new dataframe which is filled with model type and its score\nma_result = pd.DataFrame()\nma_result.insert(0,\"type\",x)\nma_result.insert(0,\"score\",y)\nma_res_score = []\nma_res_name = []\n\n# seperate score higher than 80.\nfor i in range(len(ma_result[ma_result[\"score\"] >= 80].value_counts().index)):\n    ma_res_score.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][0])\n    ma_res_name.append(ma_result[ma_result[\"score\"] >= 80].value_counts().index[i][1])\nprint(ma_result[ma_result[\"score\"] >= 80].value_counts())\nx = ma_res_name\ny = ma_res_score\n\n# visualization\nplt.figure(figsize=(20,8))\nfor i in range(len(x)):\n    height = y[i]\n    plt.text(x[i], height, '%.1f' %height, ha='center', va='bottom', size = 12)\n\nplt.bar(ma_res_name,ma_res_score,color='#e35f62')\nplt.ylim(80,83)",
            "mc_idx": 89,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.08333333333333333,
                "Model_Evaluation": 0.08333333333333333,
                "Model_Interpretation": 0.08333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.16666666666666666,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 4,
                    "plt.bar": 1,
                    ".bar(": 1,
                    "size": 2,
                    ".value_counts": 4
                },
                "Data_Transform": {},
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plt.bar": 1,
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/images/d0055_c057_o002_image_19.png",
                    57,
                    2,
                    19
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "score  type                                                    \n80.70  RobustScaler():RandomForestClassifier(n_estimators=13)      1\n80.81  MinMaxScaler():RandomForestClassifier(n_estimators=13)      1\n81.14  StandardScaler():SVC()                                      1\n81.26  StandardScaler():KNeighborsClassifier(n_neighbors=13)       1\n81.37  MaxAbsScaler():KNeighborsClassifier(n_neighbors=13)         1\n81.48  StandardScaler():RandomForestClassifier(n_estimators=13)    1\n81.59  MaxAbsScaler():SVC()                                        1\n       MinMaxScaler():KNeighborsClassifier(n_neighbors=13)         1\n       MinMaxScaler():SVC()                                        1\n81.82  StandardScaler():GradientBoostingClassifier()               1\n81.93  MaxAbsScaler():GradientBoostingClassifier()                 1\n       MaxAbsScaler():RandomForestClassifier(n_estimators=13)      1\n       RobustScaler():GradientBoostingClassifier()                 1\n82.04  MinMaxScaler():GradientBoostingClassifier()                 1\n       RobustScaler():KNeighborsClassifier(n_neighbors=13)         1\n82.72  RobustScaler():SVC()                                        1\ndtype: int64\n",
                        "(80.0, 83.0)",
                        "<Figure size 1440x576 with 1 Axes>"
                    ]
                },
                "mc_idx": 89,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 57,
                "o_idx": 2
            }
        },
        {
            "source": "train_data = train_df.drop(\"Survived\", axis = 1)\ntarget = train_df[\"Survived\"]\n\ntrain_data.fillna(0)\npd.DataFrame(train_data.isnull().value_counts())\na = pd.DataFrame(train_data[\"Title\"]).fillna(0)\na.isnull().value_counts()\ntrain_data[\"Title\"] = a[\"Title\"]\ntrain_data.head()",
            "mc_idx": 91,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5555555555555556,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "value_counts()": 2,
                    ".head(": 1,
                    "head": 1,
                    ".head": 1,
                    ".isnull": 2,
                    ".value_counts": 2
                },
                "Data_Transform": {
                    ".fillna(": 2,
                    ".drop": 1,
                    ".fillna": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    58,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0       3    0  1.0   0.0    2.0         0    0.0         0.4\n1       1    1  3.0   4.0    0.8         1    2.0         0.4\n2       3    1  1.0   0.0    2.0         0    1.0         0.0\n3       1    1  2.0   4.0    0.8         0    2.0         0.4\n4       3    0  2.0   0.0    2.0         0    0.0         0.0"
                    ]
                },
                "mc_idx": 91,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 58,
                "o_idx": 0
            }
        },
        {
            "source": "scl = RobustScaler()\nscl.fit(train_data)\nscl.transform(train_data)\nscl.transform(test_data)\n\nclf = SVC()\nclf.fit(train_data, target)\n# drop unnecessary column\ntest_data = test_df.drop(\"PassengerId\", axis = 1).copy()\nprediction = clf.predict(test_data)\nscore = cross_val_score(clf, train_data, target, cv=k_fold, n_jobs=1, scoring = scoring)\nscore = round(np.mean(score)*100,2)\nprint(\"score: \",score)\nprint(\"prediction: \",prediction)",
            "mc_idx": 92,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 1.0,
                "Model_Train": 0.75,
                "Model_Evaluation": 0.5,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.25,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    "np.mean": 1,
                    ".mean": 1
                },
                "Data_Transform": {
                    "transform": 2,
                    "robustscaler": 1,
                    ".drop": 1
                },
                "Model_Train": {
                    ".fit(": 2,
                    "svc": 1
                },
                "Model_Evaluation": {
                    "cross_val_score": 1,
                    ".predict(": 1
                },
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {
                    "cross_val_score": 1
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    59,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/sklearn/base.py:451: UserWarning:\n\nX does not have valid feature names, but RobustScaler was fitted with feature names\n\n",
                        "score:  82.72\nprediction:  [0 1 0 0 1 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 1\n 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 1 1 0 1 0\n 1 0 0 1 0 1 1 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0\n 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0\n 0 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 0 1 0 1\n 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 0 1 0\n 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1\n 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 0 1 0 0\n 1 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0\n 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 0\n 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 0 1 0 0 1 0 1 0 0 0 0\n 0 1 1 1 1 1 0 1 0 0 1]\n"
                    ]
                },
                "mc_idx": 92,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 59,
                "o_idx": 1
            }
        },
        {
            "source": "# import deep learning model\nimport tensorflow as tf",
            "mc_idx": 94,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.05,
                "Model_Evaluation": 0.05,
                "Model_Interpretation": 0.05,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 20
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 1
                },
                "Model_Evaluation": {
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    60,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 94,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 60,
                "o_idx": 0
            }
        },
        {
            "source": "train_data",
            "mc_idx": 95,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    61,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "     Pclass  Sex  Age  Fare  Cabin  Embarked  Title  FamilySize\n0         3    0  1.0   0.0    2.0         0    0.0         0.4\n1         1    1  3.0   4.0    0.8         1    2.0         0.4\n2         3    1  1.0   0.0    2.0         0    1.0         0.0\n3         1    1  2.0   4.0    0.8         0    2.0         0.4\n4         3    0  2.0   0.0    2.0         0    0.0         0.0\n..      ...  ...  ...   ...    ...       ...    ...         ...\n886       2    0  2.0   1.0    1.8         0    3.0         0.0\n887       1    1  1.0   3.0    0.4         0    1.0         0.0\n888       3    1  1.0   2.0    2.0         0    1.0         1.2\n889       1    0  1.0   3.0    0.8         1    0.0         0.0\n890       3    0  2.0   0.0    2.0         2    0.0         0.0\n\n[891 rows x 8 columns]"
                    ]
                },
                "mc_idx": 95,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 61,
                "o_idx": 0
            }
        },
        {
            "source": "target",
            "mc_idx": 96,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    62,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "0      0\n1      1\n2      1\n3      1\n4      0\n      ..\n886    0\n887    1\n888    0\n889    1\n890    0\nName: Survived, Length: 891, dtype: int64"
                    ]
                },
                "mc_idx": 96,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 62,
                "o_idx": 0
            }
        },
        {
            "source": "import tensorflow as tf\n\nmodel = tf.keras.models.Sequential(\n[\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])# if the layer nuber get too high numb, it can be lead model's overfitting.\n\nmodel.compile(optimizer=\"adam\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"])\nmodel.fit(np.array(train_data), np.array(target), epochs=150, verbose=0)\n\n# if my deep learning model need to fix or improve, please leave a comment/feedback how should I fix it. ",
            "mc_idx": 97,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.03333333333333333,
                "Data_Transform": 0.03333333333333333,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.2,
                "Model_Interpretation": 0.2,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mode": 1
                },
                "Data_Transform": {
                    ".mod": 1
                },
                "Model_Train": {
                    "model.fit": 1,
                    "sequential(": 1,
                    "compile": 1,
                    ".fit(": 1,
                    "model": 6,
                    "tf.keras": 10,
                    ".layers.dense": 9,
                    ".sequential": 1
                },
                "Model_Evaluation": {
                    "model": 6
                },
                "Model_Interpretation": {
                    "model": 6
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    63,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<keras.callbacks.History at 0x7ddf7024cd50>"
                    ]
                },
                "mc_idx": 97,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 63,
                "o_idx": 0
            }
        },
        {
            "source": "submission_dl = []",
            "mc_idx": 98,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    64,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 98,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 64,
                "o_idx": 0
            }
        },
        {
            "source": "# As the sample, Survival must be expressed as either 0 or 1. \n# But the prediction value from deep learning, It expressed percentage(0~1).\n# So if its value higher than 0.5, It is more likely to have lived.\n# let it transfer to 1. else transfer to 0.\nfor i in range(len(model.predict(test_data))):\n    if model.predict(test_data)[i][0] >= 0.5:\n        submission_dl.append(1)\n    else:\n        submission_dl.append(0)\n# print(submission_dl)",
            "mc_idx": 99,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.5,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 2
                },
                "Model_Evaluation": {
                    "model": 2,
                    ".predict(": 2
                },
                "Model_Interpretation": {
                    "model": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    65,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 99,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 65,
                "o_idx": 0
            }
        },
        {
            "source": "prediction_dl = np.array(submission_dl)\nprediction_dl",
            "mc_idx": 100,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    66,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "array([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1,\n       1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n       1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1,\n       0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n       0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1,\n       1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n       1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n       1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,\n       0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1])"
                    ]
                },
                "mc_idx": 100,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 66,
                "o_idx": 0
            }
        },
        {
            "source": "submission = pd.DataFrame({\n    \"PassengerId\":test_df[\"PassengerId\"],\n    \"Survived\":prediction\n    # if you want submit MachineLearning Score, use \"prediction\"\n    # if you want submit DeepLearning Score, use \"prediction_dl\"\n    # as my submittion result, Machine Learning Score higher than Deep learning Score. So I choose ML Score.\n})\n\nsubmission.to_csv(\"submission_ma.csv\",index=False)",
            "mc_idx": 102,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    67,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 102,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 67,
                "o_idx": 0
            }
        },
        {
            "source": "submission = pd.read_csv(\"submission_ma.csv\")\nsubmission.head()",
            "mc_idx": 103,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.75,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 2,
                    "pd.read_": 2
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    68,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "   PassengerId  Survived\n0          892         0\n1          893         1\n2          894         0\n3          895         0\n4          896         1"
                    ]
                },
                "mc_idx": 103,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 68,
                "o_idx": 0
            }
        }
    ],
    "markdown_cells": [
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"text-align:center; padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udea2titanic data analysis \ud83d\udcc8& Machine & Deep Learning \ud83d\udca1</b></div>",
            "mc_idx": 0,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "![](https://static.timesofisrael.com/atlantajewishtimes/uploads/2022/03/DT6RD9.jpg)",
            "mc_idx": 1,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Table of Contents</b></div>",
            "mc_idx": 2,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> Introduction</b> <br>\n    * <b><mark>0.</mark></b>-------Import Libraries<br>\n    * <b><mark>1.</mark></b>-------Visuallization<br>\n     - <b><mark>1.1</mark></b>------Check Missing Value<br>\n     - <b><mark>1.2</mark></b>------Make Graph - Which is show \"feature\"- Dead<br>\n     -<b><mark>1.3.1</mark></b>---Name<br>\n     - <b><mark>1.3.2</mark></b>---Sex<br>\n     - <b><mark>1.3.3</mark></b>---Embarked<br>\n     - <b><mark>1.3.4</mark></b>---Fare<br>\n     - <b><mark>1.3.5</mark></b>---Cabin<br>\n     - <b><mark>1.3.6</mark></b>---Family Size<br>\n    * <b><mark>2.</mark></b>------Machine Learning<br>\n     - <b><mark>2.1</mark></b>-----KNN<br>\n     - <b><mark>2.2</mark></b>-----Decision Tree<br>\n     - <b><mark>2.3</mark></b>-----Random Forrest<br>\n     - <b><mark>2.4</mark></b>-----Naive Bayes<br>\n     - <b><mark>2.5</mark></b>-----SVM<br>\n     - <b><mark>2.6</mark></b>-----Machine Learning Result<br>\n    * <b><mark>3.</mark></b>-------Submission",
            "mc_idx": 3,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Introduction</b></div>",
            "mc_idx": 4,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b> In this notebook, I will do data analysis, EDA and Machine Learning.<br>\nI use Python language in this notebook.<br>\n    <br>In Data Analysis, I will get the most valuable result from each column. For doing this, I will process Data through variable ways. You can check how doing it in this notebook\n    <br>\n    <br>\n    And I'll use kinds of Machine Learning.Based on transformated Data, get KNN, Decision Tree, random forrest, Naive Bayes, SVM accuracy score.\n    compare its scores and submit the highest score among it.\n    <br>\n    <br>\n    And using tensorflow, predict result by deep learning model.",
            "mc_idx": 5,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd6Columns</b></div>   ",
            "mc_idx": 6,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n* <b> <mark>Survival</mark></b> - Survival   (0 = No , 1 = Yes) <br>\n* <b> <mark>pclass</mark></b> - Ticket class (1 = 1st, 2 = 2nd, 3 = 3rd)<br>\n* <b> <mark>sex</mark></b> - sex <br>\n* <b> <mark>Age</mark></b> - Age in years <br>\n* <b> <mark>sibsp</mark></b> - # of siblings / spouses aboard the Titanic <br>\n* <b> <mark>parch</mark></b> - # of parents / children aboard the Titanic<br>\n* <b> <mark>ticket</mark></b> - Ticket number<br>\n* <b> <mark>fare</mark></b>- Passenger fare<br>\n* <b> <mark>cabin</mark></b> - Cabin number<br>\n* <b> <mark>embarked</mark></b> - Port of Embarkation  (C = Cherbourg, Q = Queenstown, S = Southampton)<br>",
            "mc_idx": 7,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<!-- # <div style=\"text-align: left; font-family:timeroman;\"> | Import Libraries </div> -->\n<!-- # <div style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </div> -->\n<!-- > <h1 style=\"text-align: left; font-family:timeroman;\"> <b style='color:blue'>Import</b> Libraries </h1> -->\n<!-- # <b style='color:blue'> 0. Import Libraries </b> -->\n<!-- # <div style=' font-family:timeroman;'> 0. Import Libraries and Data </b> -->",
            "mc_idx": 8,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd60. Import Libraries</b></div>   ",
            "mc_idx": 9,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<b> column explanation",
            "mc_idx": 13,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd61. Visuallization </b></div>   ",
            "mc_idx": 18,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.1 Check missing value</b></div>",
            "mc_idx": 19,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.2 Make Graph - Which is show \"feature\"- Dead. </b></div>",
            "mc_idx": 22,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:10px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>1.3 Feature Engineering</b></div>  \n\n<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>the process of turning data measurements into feature bacters\nFrom a person's point of view, text is easy to understand, but computers are much easier to change to numbers, so it means the process of changing to numbers.",
            "mc_idx": 24,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.1  </b> Name </h2>",
            "mc_idx": 25,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Remove names other than Mr or Mrs etc.",
            "mc_idx": 27,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.2  </b> Sex </h2>",
            "mc_idx": 37,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<b>There are several NaN values for age. I can substitute those values for the total average age. But since we've divided them into categories by sex from Name, we substitute them to obtain the average age of a man and woman, if the gender of a person with NaN value is male, and if it's female, we substitute the average age of a man's average age.",
            "mc_idx": 40,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<b>Both the most dead age group and the most surviving age group are in their 20s and mid-30s. People in their 0s to 10s and late 30s can see that there are more dead people.",
            "mc_idx": 43,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n<b>1.3.2.1 binning:</b><br>\nTechnology that weave into categories if it don't give much information.\nI will binning the Age by age. following code is the way how I did it.</div>",
            "mc_idx": 46,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<b>I devided \"age\" into 5 parts.<br>\n<br>  0-16 years old - 1\n<br>  16-26 years old - 2\n<br>  26-36 years old - 3\n<br>  36-64 years old - 4\n<br>  64- years old - 5",
            "mc_idx": 49,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "\n<b>Through the Bar graph, It was found that the age group of 26 to 36 years old was the highest among the dead.",
            "mc_idx": 53,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.3  </b> Embarked </h2>\n",
            "mc_idx": 54,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.4</b>  Fare</h2>\n",
            "mc_idx": 59,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.5</b>  Cabin</h2>\n",
            "mc_idx": 66,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>1.3.6</b>  Family Size</h2>",
            "mc_idx": 70,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Set the training set to match the test set</b>\n",
            "mc_idx": 76,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd62. Machine Learning</b></div>",
            "mc_idx": 82,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Preprocess - scaling</b>\n",
            "mc_idx": 83,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1.2\"></a>\n# <h2 style=\"font-family: Serif; font-size: 28px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 1px; color: #3162C7; background-color: #DAD9FF;\"><b>Check each type of <mark>Scaling method</mark> and <mark>Machine learning</mark> model's Score</b>\n",
            "mc_idx": 86,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### Check out what types of method get the score higher than <mark>80</mark>?",
            "mc_idx": 88,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<div style=\"font-family:Serif;background-color:#DAD9FF; padding:30px; font-size:17px\">\n\n<b>The score of the machine learning model <mark>SVC</mark>, which was scaled using the <mark>Robust scaling model</mark>, recorded the highest score with <mark>82.7</mark>. <br> So I choose this way in machine learning.</b>",
            "mc_idx": 90,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd63. Use Deep learning Predict Result</b></div>   ",
            "mc_idx": 93,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a id=\"1\"></a>\n# <div style=\"padding:20px;color:white;margin:0;font-size:35px;font-family:Serif;text-align:left;display:fill;border-radius:5px;background-color:#030066;overflow:hidden\"><b>\ud83d\udcd64. Submission</b></div>   ",
            "mc_idx": 101,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "#### <div style='text-align:center; font-family:arial'> \ud83d\ude47\ud83c\udffb\u200d\u2642\ufe0fThanks For Watching!<br></div>",
            "mc_idx": 104,
            "nb_idx": 55,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        }
    ],
    "sim_matrix": [],
    "cell_sim_matrix": [],
    "nb_order": [],
    "summary_data_VA": null
}
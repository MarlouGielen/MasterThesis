{
    "nb_idx": 1,
    "nb_name": "d0001",
    "filename": "0-top-1-titanic-solution.ipynb",
    "filepath": "data/data_Kaggle/raw/0-top-1-titanic-solution.ipynb",
    "source": "from sklearn.preprocessing import OneHotEncoder, LabelEncoder, MinMaxScaler, LabelBinarizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression, RidgeClassifierCV\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import LinearSVC, SVC\n\nfrom mlxtend.classifier import StackingClassifier\nfrom catboost import CatBoostClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n\nimport plotly.express as px\nfrom matplotlib import pyplot as plt\nimport scikitplot as skplt\nimport missingno as msno\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport os\nimport re\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000) \n <h1 style=\"font-size:250%;color:#292F55\"> Titanic - Machine Learning from Disaster</h1>\n\n*Top 3% Titanic solution - For this last version best model score is 0.81100*.\n![](https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/2-rms-titanic-ship-plans-jose-elias-sofia-pereira.jpg) \n cm = [\"#273176\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\"]\ngradient = [\"#292F55\",\"#273176\",\"#223A92\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\",\"#C7B679\",\"#957447\"]\nsns.palplot(gradient) \n <a style=\"font-size:200%;color:#292F55\">Table Of Content\n* [<a style=\"font-size:150%;color:#292F55\">1. EDA & Feature Engeneering](#1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.1 Passengers location analisys](#1.1_bullet) - Survival for different Deck / Cabin numbers\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.2 Groups and family bonds analisys](#1.2_bullet) - Ticket numbers analisys, Names / Surnames\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.3 Personal features analisys](#1.3_bullet) - Age / Status analisys\n* [<a style=\"font-size:150%;color:#292F55\">2. Data preparation](#2_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Filling None values](#2.1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.2 Encoding features and droping unnecessary](#2.2_bullet)\n* [<a style=\"font-size:150%;color:#292F55\">3. Model development](#3_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Catboost baseline](#2.1_bullet)\n    \n \n # <a class=\"anchor\" id=\"1_bullet\" style=\"color:#292F55\"> 1. Exploratory Data Analysis (EDA) \n path = \"/kaggle/input/titanic/\"\ndf_tr = pd.read_csv(f\"{path}train.csv\").set_index(\"PassengerId\", drop=True)\ndf_ts = pd.read_csv(f\"{path}test.csv\").set_index(\"PassengerId\", drop=True)\ndf = pd.concat([df_tr, df_ts], axis=0)\ndf.head(10).style.background_gradient(cmap='Blues') \n msno.bar(df, figsize=(30,2), color=gradient) \n ## <a class=\"anchor\" id=\"1.1_bullet\" style=\"color:#3B61A3\"> 1.1 Passengers location analisys \n\nI assume, that the location of passengers at the moment of the disaster may affect on the surviving rate.\n\nFor this case we will try to analyze such location, referring to the time of the disaster - 23:40. It means that some passengers may already have been in their cabins, some of them was hanging on some restaurants and \"bars\" (linked to there Pclass and maby cabin location) etc.\n\nAnyway, we do not know their location at that moment, but we can create some feature to describe it somehow to help our model.\n\nOffcourse, we have smth like 80% None values in \"Cabin\" feature - but still some useful information can be extracted + we need to be careful with filling the gaps. \n ### <a class=\"anchor\" id=\"1.1.1_bullet\" style=\"color:#3B61A3\"> 1.1.1 Survival for different Deck numbers\nDeck descriptors are coded inside of the Cabin numbers\nWe will extract them as a new feature.\nUnknowns we will mark as \"N/A\" \n df[\"Deck\"] = df[\"Cabin\"].str[:1]\ndf[\"Deck\"] = df[\"Deck\"].replace(np.nan,\"N/A\")\nprint(\"All Deck descriptors:\")\nprint(set(df[\"Deck\"].values)) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Deck\"]!=\"N/A\"]\nfig = px.histogram(dfplt, x=\"Deck\",color=\"Survived\",\n                   color_discrete_sequence=cm)\nfig.show() \n What we can see from such graphs:\n*     Only one PassengerId have been on the Deck T - and he is in train set, so we can drop the \"T\" value\n*     There ara some dependancies between surviving rate and the Deck number:\n\n|deck|died|survived|ratio|\n|:--:|:--:|:------:|:---:|\n|C   |24  |35      |0.4  |\n|G   |2   |2       |0.5  |\n|D   |8   |25      |0.24 |\n|A   |8   |7       |0.53 |\n|B   |12  |35      |0.26 |\n|F   |5   |8       |0.38 |\n|E   |8   |24      |0.25 |\n        \nIn this case - we can put such new features into the model and encode them. \n df.loc[df[\"Deck\"]=='T',\"Deck\"] = 'N/A' \n ### <a class=\"anchor\" id=\"1.1.2_bullet\" style=\"color:#3B61A3\"> 1.1.2 Cabin numbers analisys\nSome of the passangers have shared several cabins - thay may have the same cabin number or leave in 3 of 4 cabins at the same time (families). But actually not only families or reletives shared cabins, but some collegues, friends etc. In this case i will try to create a features, which will describe the location of passangers, linked to there Cabin number.\n\nSome of the cabins has ambiquouse values - i will hardcode them - giving maximum values to multiple cabins \nfor a passanger. Or just rename them is several other ways, according to the Deck plans from https://www.encyclopedia-titanica.org/titanic-deckplans/ \n replaces = {'B51 B53 B55': 'B55', 'B52 B54 B56': 'B56', 'B57 B59 B63 B66': 'B66', 'B58 B60': 'B60', \n            'B82 B84': 'B84', 'B96 B98': 'B98', 'C22 C26': 'C26', 'C23 C25 C27': 'C27', 'C55 C57': 'C57',\n            'C62 C64': 'C64', 'D10 D12': 'D12', 'E39 E41': 'E41', 'F E46': 'E46', 'F E57': 'E57',\n            'F E69': 'E69', 'F G63': 'G63', 'F G73': 'G73', 'F': None, 'D': None, ' ': None, 'T': None, np.nan: None}\ndf[\"Cabin\"] = df[\"Cabin\"].replace(replaces)\ndf[\"Cabin\"] = df.fillna(np.nan)[\"Cabin\"].str[1:].astype(float) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Cabin\",color=\"Survived\", height=300,\n                   color_discrete_sequence=cm)\nfig.show() \n We can see that there is no accurate dependency between Cabin number and the Survival in general - maby it can work on connection with some other features. Some extra information we can take from the Cabin number - is the Side of the ship (left or right) ,according to the even or odd number of it. The side of the ship can effect much on the serviving rate. \n df[\"Side\"] = df[\"Cabin\"]\ndf.loc[df[\"Side\"]!=0,\"Side\"] = (df[\"Cabin\"][df[\"Cabin\"]!=0]%2-0.5)*2\n\ns = df[df[\"Side\"]==1]\nprint(f'Survived for side 1\\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Side\"]==-1]\nprint(f'Survived for side -1\\t {len(s[s[\"Survived\"]==1])/len(s)}') \n As we can see - passangers survived more often, living on the 1, then on the side -1\n\nTo fill the missing values for \"Cabin\", we will put median values for all passangers in specific Decks.\nBefore this, we will devide number of the Cabin by two - because the \"side\" location has been already taken from the data.\nIf Deck number is unknown - we will just mark Cabin as -1 - mwaning \"Unknown\" \n for i in set(df[\"Deck\"].values):\n    v = df[df[\"Deck\"]==i][\"Cabin\"]//2\n    df.loc[df[\"Deck\"]==i, \"Cabin\"]= v\n    df.loc[(df[\"Deck\"]==i) & (df[\"Cabin\"]==0),\"Cabin\"] = np.median(v)\n    \ndf.loc[df[\"Cabin\"].isna(),\"Cabin\"]=-1\ndf[\"Cabin\"] = df[\"Cabin\"].astype(int) \n Now we gonna plot some developed \"coordinates\" of the passangers, to find some patterns in survival. \n dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter_3d(dfplt, x=\"Cabin\", y=\"Side\", z= \"Deck\", color=\"Survived\",\n                    color_discrete_sequence=cm, size_max=6, width=1000, height=1000)\nfig.show() \n We can see some patterns in the data:\n  - For example, all of the passangers on the \"1\" side of the Deck D survived.\n  - For only some of decks the \"closer\" location to zero may cause the better survival (maby those passangers was closer to the ladders) \n df[\"Side\"] = df[\"Side\"].fillna(0)\nmsno.bar(df, figsize=(30,2), color=cm) \n In the end - we have to fillna for \"Side\" feature with 0 - refering to unknown side of the ship \n ## <a class=\"anchor\" id=\"1.2_bullet\" style=\"color:#3B61A3\">  1.2 Groups and family bonds analisys\nSome groups of passangers, should be connected via ticket numbers, surnames, classP and etc. We will try to put the data into the shape in which our model will detect such connections\n### <a class=\"anchor\" id=\"1.2.1_bullet\" style=\"color:#3B61A3\">  1.2.1 Ticket numbers analisys \n **\"LINE\" tickets:**\nAll Tickets number contains some numbers, except \"LINE\" tickets www.encyclopedia-titanica.org\nPhiladelphia's westbound voyage was cancelled, and several shipmates forced to travel aboard Titanic as passengers (Some of them have LINE ticket number):\n - August Johnson (Johnson, Mr. Alfred) - **LINE** - 370160\n - William Cahoone Jr. Johnson - **LINE** - 370160\n - William Henry T\u00f6rnquist - **LINE** - 370160\n - Andrew John Shannon (Lionel Leonard) - **LINE** - 370160\n\nWe will not analize them much, in this part, but we should take it into account \n lin_rep = lambda x: x.replace({'LINE':\"370160\"})\ndf = lin_rep(df) \n Some of the tickets contains several prefixes refering for some specific sale policies - maby it may be usefull for the model (we will save it into Ticket_p) but at the same time wew will clear our ticket number from umbiques information (It may be some hidden connections in the ticket numbers). \n prefixes = []\nnums, prefs = [],[]\nfor i in df[\"Ticket\"].values:   \n    if not i.isdigit():\n        nums.append(int(re.search('.* {1}([0-9]+)', i).groups()[0]))\n        prefix = re.search('(.*)( {1})[0-9]+', i).groups()[0]\n        prefs.append(prefix.replace(\".\",\"\").replace(\" \", \"\").replace(\"/\",\"\")) # Needed to put in one group such prefixes as \"A/5\", \"A/5.\", \"A.5\" etc.\n    else:\n        nums.append(int(i))\n        prefs.append(\"\")\ndf[\"Ticket\"] = nums\ndf[\"Ticket_p\"] = prefs \n dfplt = df.copy(deep=True)\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show() \n We can see that some of prefixes appear only one time or only in train dataset. Lets clean them in order not to confuse our model.\n\nWe wil do it manualy - couse it is not much off them, and we gonna check them, if maby there is some sintax mistakes. \n drop = [\"SP\", \"SOP\", \"Fa\", \"SCOW\", \"PPP\", \"AS\", \"CASOTON\", \"SWPP\", \"SCAHBasle\", \"SCA3\", \"STONOQ\", \"AQ4\", \"A2\", \"LP\", \"AQ3\", \"\"]\ndf = df.replace(drop, 'N/A') \n dfplt = df.copy(deep=True)\ndfplt= dfplt[dfplt[\"Ticket_p\"] != \"N/A\"]\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show() \n We do not know much about the meaning of this prefixes, but there are some dependencies:\n* No passangers survived with the prefix A4\n* Most of the passangers with WC prefix - died \n ### <a class=\"anchor\" id=\"1.2.2_bullet\" style=\"color:#3B61A3\">  1.2.2 Names, surnames and status feature\nTo get more information about the family bonds - we will extract surnames instead of Names, and put them into features list/ \n df[[\"Surname\",\"Name\"]] = [i.split(\",\") for i in df[\"Name\"].values] \n We will get all same-surname groups into one list, to put some feature for it\nAll others will be marked with \"Other\".(*) \n a = df.groupby(\"Surname\")[\"Surname\"].count()\nfam_list = a[a>1].index.values\ndf.loc[~df[\"Surname\"].isin(fam_list),\"Surname\"] = \"Other\" \n Lets visualize Surviving rates for families: \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n The same thing as in (*) we gonna do for those Surnames who do not exist in test set.\nAgain, i gonna do it manually, cause i dont wanna work with automatization here =)\n\nBut just before this we will put some extra feature which mean \"Has any namesakes\" to determin if the person in som relatio-like group. It may look the same as SibSp, but guess, that som connections between people is hidden. \n df[\"Namesakes\"] = 1\ndf.loc[df[\"Surname\"]==\"Other\",\"Namesakes\"] = 0 \n not_imp_s = [\"Braund\",\"Allen\",\"Moran\",\"Meyer\",\"Holverson\",\"Turpin\",\"Arnold-Franchi\",\"Panula\",\"Harris\",\"Skoog\",\"Kantor\",\"Petroff\",\"Gustafsson\",\"Zabour\",\n             \"Jussila\",\"Attalah\",\"Baxter\",\"Hickman\",\"Nasser\",\"Futrelle\",\"Navratil\",\"Calic\",\"Bourke\",\"Strom\",\"Backstrom\",\"Ali\",\"Jacobsohn\",\"Larsson\",\n             \"Carter\",\"Lobb\",\"Taussig\",\"Johnson\",\"Abelson\",\"Hart\",\"Graham\",\"Pears\",\"Barbara\",\"O'Brien\",\"Hakkarainen\",\"Van Impe\",\"Flynn\",\"Silvey\",\"Hagland\",\n             \"Morley\",\"Renouf\",\"Stanley\",\"Penasco y Castellana\",\"Webber\",\"Coleff\",\"Yasbeck\",\"Collyer\",\"Thorneycroft\",\"Jensen\",\"Newell\",\"Saad\",\"Thayer\",\"Hoyt\",\n             \"Andrews\",\"Lam\",\"Harper\",\"Nicola-Yarred\",\"Doling\",\"Hamalainen\",\"Beckwith\",\"Mellinger\",\"Bishop\",\"Hippach\",\"Richards\",\"Baclini\",\"Goldenberg\",\n             \"Beane\",\"Duff Gordon\",\"Tylor\",\"Dick\",\"Chambers\",\"Moor\",\"Snyder\", \"Howard\", \"Jefferys\", \"Franklin\",\"Abelseth\",\"Straus\",\"Khalil\",\"Dyker\",\"Stengel\",\n             \"Foley\",\"Buckley\",\"Zakarian\",\"Peacock\",\"Mahon\",\"Clark\",\"Pokrnic\",\"Ware\",\"Gibson\",\"Taylor\"]\ndf = df.replace(not_imp_s,'Other') \n df[(df[\"Surname\"]==\"Other\") & (df[\"Namesakes\"]==True)].head(10).style.background_gradient(cmap=\"Blues\") \n s = df[df[\"Namesakes\"]==0]\nprint(f'Have no Namesakes \\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Namesakes\"]==1]\nprint(f'Have Namesakes \\t\\t {len(s[s[\"Survived\"]==1])/len(s)}') \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n Now we will delete all the Families, for which number of Survived equel to not Survived (Again ill do it manually) \n drop = [\"Abbott\",\"Keane\",\"Minahan\",\"Crosby\",\"Hocking\",\"Dean\",\"Mallet\",\"\"]\ndf = df.replace(drop,'Other') \n ## <a class=\"anchor\" id=\"1.3_bullet\" style=\"color:#3B61A3\">  1.3 Personal features analisys\n### <a class=\"anchor\" id=\"1.3.1_bullet\" style=\"color:#3B61A3\">  1.3.1 Title features\nPassangers with different Titles may hav different survival rate (may be connected to so some position on groups, status of inner features) \n df[\"Title\"] = pd.DataFrame(df[\"Name\"].str.strip().str.split(\".\").tolist()).set_index(df.index).iloc[:,0]\ndf[\"Title\"] = df[\"Title\"].fillna(\"Others\") \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n rename = {\"Miss\":\"Ms\",\n          \"Mrs\": \"Mme\",\n          \"Others\": [\"Don\",\"Rev\",\"Dr\",\"Lady\",\"Sir\",\"Mlle\",\"Col\",\"the Countess\",\"Mme\",\"Major\",\"Capt\",\"Jonkheer\",\"Dona\"]}\nfor k in rename:\n    df[\"Title\"] = df[\"Title\"].replace(rename[k],k) \n I desided to delete values with low frequancy - for our model not to be messed up. \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n ### <a class=\"anchor\" id=\"1.3.2_bullet\" style=\"color:#3B61A3\">  1.3.2 Parch and Age\nThis features may have crucial effect on the target. Parants was saving there children befor them, and many other connections may be inside of the just two attributes \n dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Parch\", color = \"Survived\", size_max=6\n                 ,color_discrete_sequence=cm,width=1200, height=500)\nfig.show() \n df[(df[\"Age\"]==5) & (df[\"Parch\"]==0)]\n# 5 y.o child traveling by hereself? \n In the end i desided not to fix it, cause if takes some extra information about the data, and it is kind of cheating.\nBut i will leave it there just in case someone will need it \n #df.loc[df[\"Name\"]==\"Emanuel, Miss. Virginia Ethel\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Dowdell, Miss. Elizabeth\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]==\"Albimona, Mr. Nassef Cassem\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Hassan, Mr. Houssein G N\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]=='Watt, Mrs. James (Elizabeth \"Bessie\" Inglis Milne)',\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Watt, Miss. Bertha J\",\"Parch\"]=1 \n We will manually set two more features:\n* \"Kid\" feature - for less then 18 y.o passangers - there survival rate is higher \n* 'Alone' feature - for those who was travalling alone (>18 e.o, Parch & SibSp ==0). \n* 'Old' feature - elder people died more often. I took 60 y.o as a treashold, after checking several and chooseing the one \n df[\"Kid\"]=0\ndf.loc[(df[\"Age\"]<18),\"Kid\"]=1\nprint(f'Kids survived koeff:\\t{len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==1)])}') \n df[\"Old\"]=0\ndf.loc[(df[\"Age\"]>60),\"Old\"]=1\nprint(f'Elder survived koeff:\\t{len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==1)])}') \n df[\"Alone\"] = 0\ndf.loc[(df[\"Parch\"]==0) & (df[\"SibSp\"]==0),\"Alone\"]=1\nprint(f'Alone survived koeff:\\t\\t{len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Not Alone survived koeff:\\t{len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==1)])}') \n # <a class=\"anchor\" id=\"2_bullet\" style=\"color:#292F55\">  2. Data preparation\n## <a class=\"anchor\" id=\"2.1_bullet\" style=\"color:#3B61A3\">  2.1 Filling None values\n### <a class=\"anchor\" id=\"2.1.1_bullet\" style=\"color:#3B61A3\">  2.1.1 Filling \"Age\" None values \n msno.bar(df, figsize=(30,2), color=gradient) \n For the \"Age\" feature we just can replace None values with some mean value, but we gonna do it in a bit more complex way.\nWe will locate some groups, based on Sex and Pclass - lets check the difference in ages in several groups. \n print(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"male\")][\"Age\"].median()) \n from itertools import *\nl1, l2 = [1,2,3], [\"female\",\"male\"]\nfor c,s in product(l1,l2):\n    msk = (df[\"Pclass\"]==c) & (df[\"Sex\"]==s)\n    df.loc[msk,\"Age\"] = df[msk][\"Age\"].fillna(df[msk][\"Age\"].median()) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show() \n ### <a class=\"anchor\" id=\"2.1.2_bullet\" style=\"color:#3B61A3\">  2.1.2 Filling \"Fare\" feature\nI will manually fill None value with the mean value for passanger class.\nAfter that we can replace Fare with a rank, because i assume that the value of difference is not important. \n print(df.loc[1044])\ndf.loc[1044,\"Fare\"] = df[df[\"Pclass\"]==3][\"Fare\"].mean() \n df[\"Fare\"] = df[\"Fare\"].rank(method='max') \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Fare\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show() \n ### <a class=\"anchor\" id=\"2.1.3_bullet\" style=\"color:#3B61A3\">  2.1.3 Filling \"Embarked\" feature\nWe have two passangers, whose \"Embarked\" information is unknown \n df[df[\"Embarked\"].isna()] \n According to https://www.encyclopedia-titanica.org/titanic-survivor/amelia-icard.html we can fill nan values with \"S\" \n df.loc[df[\"Embarked\"].isna(),\"Embarked\"] = \"S\" \n ## <a class=\"anchor\" id=\"2.2_bullet\" style=\"color:#3B61A3\">  2.2 Encoding features and droping unnecessary \n We can try to apply OneHot encoder for all columns to see how spars will be the matrix \n onehot_df = pd.DataFrame(index=df.index)\n\nfor c in [\"Pclass\",\"Sex\",\"Embarked\",\"Deck\",\"Ticket_p\",\"Surname\",\"Title\"]:\n    encoded = OneHotEncoder().fit_transform(df[c].to_numpy().reshape(-1,1)).toarray()\n    columns = [f\"{c}_{i}\" for i in range(encoded.shape[1])]\n    _df =pd.DataFrame(data=encoded, columns=columns, index=df.index)\n    onehot_df = pd.concat([_df,onehot_df], axis=1)\n    \nonehot_df = pd.concat([onehot_df,df[[\"Survived\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Cabin\",\"Namesakes\",\"Kid\",\"Alone\",\"Side\"]]], axis=1)\n\nfor c in [\"Age\",\"Fare\",\"Cabin\",\"SibSp\",\"Parch\"]:\n    onehot_df[c] = MinMaxScaler().fit_transform(onehot_df[c].to_numpy().reshape(-1,1)) \n onehot_df.head(10).style.background_gradient(cmap=\"Blues\") \n Resulting matrix looks like too spars, because of Surnames features, which should provide us some groups of survivals.\nNow we gonna try to use it for the baseline. In the next versions, i'll try some other configurations \n # <a class=\"anchor\" id=\"3_bullet\" style=\"color:#292F55\">  3. Model development \n df_train = onehot_df.copy(deep=True)\nmask = df_train[\"Survived\"].isna()\ntrain, deploy = df_train[~mask], df_train[mask]\ndeploy = deploy.drop(\"Survived\", axis=1)\ntrain.loc[:,\"Survived\"] = train.loc[:,\"Survived\"].astype(bool)\nx_train, y_train = train.drop(\"Survived\", axis=1), train[\"Survived\"].astype(int) \n ## <a class=\"anchor\" id=\"3.1_bullet\" style=\"color:#3B61A3\">  3.1 Models baselines \n We will define the method, which fits the given model and puts all the neccesery data into different structures to use them further:\n\n* deploy_acc  - model accuracy for deploy dataset\n* train_acc   - model accuracy after the validation\n* models_dict - dictionary of the models\n \n deploy_acc, train_acc, models_dict= {},{},{}\n\ndef baseline(name, model, verbose=True):\n    models_dict[name] = model\n    models_dict[name].fit(x_train,y_train)\n    y_train_hat = models_dict[name].predict(x_train)\n    train_acc[name] = accuracy_score(y_train,y_train_hat)\n    if verbose:\n        skplt.metrics.plot_confusion_matrix(y_train, y_train_hat, normalize=True, figsize=(5,5))\n    submition = pd.DataFrame(models_dict[name].predict(deploy), index= deploy.index,columns = [\"Survived\"]).astype(int)\n    submition.to_csv(f'{name}.csv') \n I've tried several Gridsearches for CVs with Kfold. And after a bunch of deploys, i chose those models.\nI chose models which gave me the best deploy accuracy. This models gonna be not \"Best model for Survival prediction\" , but \"The best model to predict the test set\", which is not the exect solution for the task. \n params = {\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}\nname, model = \"lr_baseline\", LogisticRegression(**params)\nbaseline(name, model, verbose=False)\n\nname, model = \"svm_baseline\", SVC(**{'C': 5, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'})\nbaseline(name, model, verbose=False)\n\nparams = {\"eta\":0.1,\"gamma\":0,\"max_depth\":6,\"lambda\":0.1,\"alpha\":10}\nname, model = \"xg_baseline\", XGBClassifier(**params)\nbaseline(name, model, verbose=False)\n\nparams = {\"rsm\":0.1, \"learning_rate\":0.005,\"iterations\":500,\"l2_leaf_reg\":5,\"verbose\":False}\nname, model = \"cb_baseline\", CatBoostClassifier(**params)\nbaseline(name, model, verbose=False) \n fig = plt.figure(figsize=(35,10))\ncount=1\nfor k in models_dict:\n    ax = fig.add_subplot(1,len(models_dict),count)\n    count+=1\n    skplt.metrics.plot_confusion_matrix(y_train, models_dict[k].predict(x_train), normalize=True, figsize=(5,5),ax=ax, cmap=\"Blues\")\n    ax.set_title(k)\nplt.show() \n deploy_acc[\"lr_baseline\"]  = 0.79904\ndeploy_acc[\"svm_baseline\"] = 0.80382\ndeploy_acc[\"xg_baseline\"]  = 0.78947\ndeploy_acc[\"cb_baseline\"]  = 0.79425 \nprint(\"Accuracy on the deployment set:\")\nfor k in deploy_acc:\n    print(f\"{k}\\t:\\t{deploy_acc[k]}\") \n print(\"Accuracy on the training set:\")\nfor k in train_acc:\n    print(f\"{k}\\t:\\t{train_acc[k]}\") \n ### <a class=\"anchor\" id=\"3.2_bullet\" style=\"color:#3B61A3\"> 3.2 Ensemble models \n name, model = \"ensemble\", StackingClassifier(classifiers=(models_dict[\"svm_baseline\"],models_dict[\"lr_baseline\"],\n                                                                    models_dict[\"xg_baseline\"], models_dict[\"cb_baseline\"]),\n                                               meta_classifier=LogisticRegression(**{\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}),\n                                               use_features_in_secondary=True)\nbaseline(name, model, verbose=False) \n deploy_acc[\"ensemble\"]  = 0.80622 \n We see, that all 5 models has different sepations on the data (even on the trains set)\nNow we gonna combine this models into peculiar ensemble.\nWe gonna put som waights, according to there deploy results. \n ens_train, ens_deploy = {}, {}\nfor k in models_dict:\n    ens_train[k] = models_dict[k].predict(x_train) * deploy_acc[k]\n    ens_deploy[k] = models_dict[k].predict(deploy) * deploy_acc[k]\nx_train = pd.concat([pd.DataFrame(ens_train, index=x_train.index),x_train], axis=1)        \ndeploy = pd.concat([pd.DataFrame(ens_deploy, index=deploy.index),deploy], axis=1) \n model = SVC()\nmodel.fit(x_train,y_train)\nsubmition = pd.DataFrame({\"PassengerId\":deploy.index,\"Survived\":model.predict(deploy)}).astype(int) \n submition.to_csv(\"mixture.csv\",index=False) #0.81100 \n ![Upvote!](https://img.shields.io/badge/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)",
    "code_source": "from sklearn.preprocessing import OneHotEncoder, LabelEncoder, MinMaxScaler, LabelBinarizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression, RidgeClassifierCV\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import LinearSVC, SVC\n\nfrom mlxtend.classifier import StackingClassifier\nfrom catboost import CatBoostClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n\nimport plotly.express as px\nfrom matplotlib import pyplot as plt\nimport scikitplot as skplt\nimport missingno as msno\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport os\nimport re\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000) \n cm = [\"#273176\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\"]\ngradient = [\"#292F55\",\"#273176\",\"#223A92\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\",\"#C7B679\",\"#957447\"]\nsns.palplot(gradient) \n path = \"/kaggle/input/titanic/\"\ndf_tr = pd.read_csv(f\"{path}train.csv\").set_index(\"PassengerId\", drop=True)\ndf_ts = pd.read_csv(f\"{path}test.csv\").set_index(\"PassengerId\", drop=True)\ndf = pd.concat([df_tr, df_ts], axis=0)\ndf.head(10).style.background_gradient(cmap='Blues') \n msno.bar(df, figsize=(30,2), color=gradient) \n df[\"Deck\"] = df[\"Cabin\"].str[:1]\ndf[\"Deck\"] = df[\"Deck\"].replace(np.nan,\"N/A\")\nprint(\"All Deck descriptors:\")\nprint(set(df[\"Deck\"].values)) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Deck\"]!=\"N/A\"]\nfig = px.histogram(dfplt, x=\"Deck\",color=\"Survived\",\n                   color_discrete_sequence=cm)\nfig.show() \n df.loc[df[\"Deck\"]=='T',\"Deck\"] = 'N/A' \n replaces = {'B51 B53 B55': 'B55', 'B52 B54 B56': 'B56', 'B57 B59 B63 B66': 'B66', 'B58 B60': 'B60', \n            'B82 B84': 'B84', 'B96 B98': 'B98', 'C22 C26': 'C26', 'C23 C25 C27': 'C27', 'C55 C57': 'C57',\n            'C62 C64': 'C64', 'D10 D12': 'D12', 'E39 E41': 'E41', 'F E46': 'E46', 'F E57': 'E57',\n            'F E69': 'E69', 'F G63': 'G63', 'F G73': 'G73', 'F': None, 'D': None, ' ': None, 'T': None, np.nan: None}\ndf[\"Cabin\"] = df[\"Cabin\"].replace(replaces)\ndf[\"Cabin\"] = df.fillna(np.nan)[\"Cabin\"].str[1:].astype(float) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Cabin\",color=\"Survived\", height=300,\n                   color_discrete_sequence=cm)\nfig.show() \n df[\"Side\"] = df[\"Cabin\"]\ndf.loc[df[\"Side\"]!=0,\"Side\"] = (df[\"Cabin\"][df[\"Cabin\"]!=0]%2-0.5)*2\n\ns = df[df[\"Side\"]==1]\nprint(f'Survived for side 1\\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Side\"]==-1]\nprint(f'Survived for side -1\\t {len(s[s[\"Survived\"]==1])/len(s)}') \n for i in set(df[\"Deck\"].values):\n    v = df[df[\"Deck\"]==i][\"Cabin\"]//2\n    df.loc[df[\"Deck\"]==i, \"Cabin\"]= v\n    df.loc[(df[\"Deck\"]==i) & (df[\"Cabin\"]==0),\"Cabin\"] = np.median(v)\n    \ndf.loc[df[\"Cabin\"].isna(),\"Cabin\"]=-1\ndf[\"Cabin\"] = df[\"Cabin\"].astype(int) \n dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter_3d(dfplt, x=\"Cabin\", y=\"Side\", z= \"Deck\", color=\"Survived\",\n                    color_discrete_sequence=cm, size_max=6, width=1000, height=1000)\nfig.show() \n df[\"Side\"] = df[\"Side\"].fillna(0)\nmsno.bar(df, figsize=(30,2), color=cm) \n lin_rep = lambda x: x.replace({'LINE':\"370160\"})\ndf = lin_rep(df) \n prefixes = []\nnums, prefs = [],[]\nfor i in df[\"Ticket\"].values:   \n    if not i.isdigit():\n        nums.append(int(re.search('.* {1}([0-9]+)', i).groups()[0]))\n        prefix = re.search('(.*)( {1})[0-9]+', i).groups()[0]\n        prefs.append(prefix.replace(\".\",\"\").replace(\" \", \"\").replace(\"/\",\"\")) # Needed to put in one group such prefixes as \"A/5\", \"A/5.\", \"A.5\" etc.\n    else:\n        nums.append(int(i))\n        prefs.append(\"\")\ndf[\"Ticket\"] = nums\ndf[\"Ticket_p\"] = prefs \n dfplt = df.copy(deep=True)\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show() \n drop = [\"SP\", \"SOP\", \"Fa\", \"SCOW\", \"PPP\", \"AS\", \"CASOTON\", \"SWPP\", \"SCAHBasle\", \"SCA3\", \"STONOQ\", \"AQ4\", \"A2\", \"LP\", \"AQ3\", \"\"]\ndf = df.replace(drop, 'N/A') \n dfplt = df.copy(deep=True)\ndfplt= dfplt[dfplt[\"Ticket_p\"] != \"N/A\"]\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show() \n df[[\"Surname\",\"Name\"]] = [i.split(\",\") for i in df[\"Name\"].values] \n a = df.groupby(\"Surname\")[\"Surname\"].count()\nfam_list = a[a>1].index.values\ndf.loc[~df[\"Surname\"].isin(fam_list),\"Surname\"] = \"Other\" \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n df[\"Namesakes\"] = 1\ndf.loc[df[\"Surname\"]==\"Other\",\"Namesakes\"] = 0 \n not_imp_s = [\"Braund\",\"Allen\",\"Moran\",\"Meyer\",\"Holverson\",\"Turpin\",\"Arnold-Franchi\",\"Panula\",\"Harris\",\"Skoog\",\"Kantor\",\"Petroff\",\"Gustafsson\",\"Zabour\",\n             \"Jussila\",\"Attalah\",\"Baxter\",\"Hickman\",\"Nasser\",\"Futrelle\",\"Navratil\",\"Calic\",\"Bourke\",\"Strom\",\"Backstrom\",\"Ali\",\"Jacobsohn\",\"Larsson\",\n             \"Carter\",\"Lobb\",\"Taussig\",\"Johnson\",\"Abelson\",\"Hart\",\"Graham\",\"Pears\",\"Barbara\",\"O'Brien\",\"Hakkarainen\",\"Van Impe\",\"Flynn\",\"Silvey\",\"Hagland\",\n             \"Morley\",\"Renouf\",\"Stanley\",\"Penasco y Castellana\",\"Webber\",\"Coleff\",\"Yasbeck\",\"Collyer\",\"Thorneycroft\",\"Jensen\",\"Newell\",\"Saad\",\"Thayer\",\"Hoyt\",\n             \"Andrews\",\"Lam\",\"Harper\",\"Nicola-Yarred\",\"Doling\",\"Hamalainen\",\"Beckwith\",\"Mellinger\",\"Bishop\",\"Hippach\",\"Richards\",\"Baclini\",\"Goldenberg\",\n             \"Beane\",\"Duff Gordon\",\"Tylor\",\"Dick\",\"Chambers\",\"Moor\",\"Snyder\", \"Howard\", \"Jefferys\", \"Franklin\",\"Abelseth\",\"Straus\",\"Khalil\",\"Dyker\",\"Stengel\",\n             \"Foley\",\"Buckley\",\"Zakarian\",\"Peacock\",\"Mahon\",\"Clark\",\"Pokrnic\",\"Ware\",\"Gibson\",\"Taylor\"]\ndf = df.replace(not_imp_s,'Other') \n df[(df[\"Surname\"]==\"Other\") & (df[\"Namesakes\"]==True)].head(10).style.background_gradient(cmap=\"Blues\") \n s = df[df[\"Namesakes\"]==0]\nprint(f'Have no Namesakes \\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Namesakes\"]==1]\nprint(f'Have Namesakes \\t\\t {len(s[s[\"Survived\"]==1])/len(s)}') \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n drop = [\"Abbott\",\"Keane\",\"Minahan\",\"Crosby\",\"Hocking\",\"Dean\",\"Mallet\",\"\"]\ndf = df.replace(drop,'Other') \n df[\"Title\"] = pd.DataFrame(df[\"Name\"].str.strip().str.split(\".\").tolist()).set_index(df.index).iloc[:,0]\ndf[\"Title\"] = df[\"Title\"].fillna(\"Others\") \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n rename = {\"Miss\":\"Ms\",\n          \"Mrs\": \"Mme\",\n          \"Others\": [\"Don\",\"Rev\",\"Dr\",\"Lady\",\"Sir\",\"Mlle\",\"Col\",\"the Countess\",\"Mme\",\"Major\",\"Capt\",\"Jonkheer\",\"Dona\"]}\nfor k in rename:\n    df[\"Title\"] = df[\"Title\"].replace(rename[k],k) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show() \n dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Parch\", color = \"Survived\", size_max=6\n                 ,color_discrete_sequence=cm,width=1200, height=500)\nfig.show() \n df[(df[\"Age\"]==5) & (df[\"Parch\"]==0)]\n# 5 y.o child traveling by hereself? \n #df.loc[df[\"Name\"]==\"Emanuel, Miss. Virginia Ethel\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Dowdell, Miss. Elizabeth\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]==\"Albimona, Mr. Nassef Cassem\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Hassan, Mr. Houssein G N\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]=='Watt, Mrs. James (Elizabeth \"Bessie\" Inglis Milne)',\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Watt, Miss. Bertha J\",\"Parch\"]=1 \n df[\"Kid\"]=0\ndf.loc[(df[\"Age\"]<18),\"Kid\"]=1\nprint(f'Kids survived koeff:\\t{len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==1)])}') \n df[\"Old\"]=0\ndf.loc[(df[\"Age\"]>60),\"Old\"]=1\nprint(f'Elder survived koeff:\\t{len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==1)])}') \n df[\"Alone\"] = 0\ndf.loc[(df[\"Parch\"]==0) & (df[\"SibSp\"]==0),\"Alone\"]=1\nprint(f'Alone survived koeff:\\t\\t{len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Not Alone survived koeff:\\t{len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==1)])}') \n msno.bar(df, figsize=(30,2), color=gradient) \n print(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"male\")][\"Age\"].median()) \n from itertools import *\nl1, l2 = [1,2,3], [\"female\",\"male\"]\nfor c,s in product(l1,l2):\n    msk = (df[\"Pclass\"]==c) & (df[\"Sex\"]==s)\n    df.loc[msk,\"Age\"] = df[msk][\"Age\"].fillna(df[msk][\"Age\"].median()) \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show() \n print(df.loc[1044])\ndf.loc[1044,\"Fare\"] = df[df[\"Pclass\"]==3][\"Fare\"].mean() \n df[\"Fare\"] = df[\"Fare\"].rank(method='max') \n dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Fare\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show() \n df[df[\"Embarked\"].isna()] \n df.loc[df[\"Embarked\"].isna(),\"Embarked\"] = \"S\" \n onehot_df = pd.DataFrame(index=df.index)\n\nfor c in [\"Pclass\",\"Sex\",\"Embarked\",\"Deck\",\"Ticket_p\",\"Surname\",\"Title\"]:\n    encoded = OneHotEncoder().fit_transform(df[c].to_numpy().reshape(-1,1)).toarray()\n    columns = [f\"{c}_{i}\" for i in range(encoded.shape[1])]\n    _df =pd.DataFrame(data=encoded, columns=columns, index=df.index)\n    onehot_df = pd.concat([_df,onehot_df], axis=1)\n    \nonehot_df = pd.concat([onehot_df,df[[\"Survived\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Cabin\",\"Namesakes\",\"Kid\",\"Alone\",\"Side\"]]], axis=1)\n\nfor c in [\"Age\",\"Fare\",\"Cabin\",\"SibSp\",\"Parch\"]:\n    onehot_df[c] = MinMaxScaler().fit_transform(onehot_df[c].to_numpy().reshape(-1,1)) \n onehot_df.head(10).style.background_gradient(cmap=\"Blues\") \n df_train = onehot_df.copy(deep=True)\nmask = df_train[\"Survived\"].isna()\ntrain, deploy = df_train[~mask], df_train[mask]\ndeploy = deploy.drop(\"Survived\", axis=1)\ntrain.loc[:,\"Survived\"] = train.loc[:,\"Survived\"].astype(bool)\nx_train, y_train = train.drop(\"Survived\", axis=1), train[\"Survived\"].astype(int) \n deploy_acc, train_acc, models_dict= {},{},{}\n\ndef baseline(name, model, verbose=True):\n    models_dict[name] = model\n    models_dict[name].fit(x_train,y_train)\n    y_train_hat = models_dict[name].predict(x_train)\n    train_acc[name] = accuracy_score(y_train,y_train_hat)\n    if verbose:\n        skplt.metrics.plot_confusion_matrix(y_train, y_train_hat, normalize=True, figsize=(5,5))\n    submition = pd.DataFrame(models_dict[name].predict(deploy), index= deploy.index,columns = [\"Survived\"]).astype(int)\n    submition.to_csv(f'{name}.csv') \n params = {\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}\nname, model = \"lr_baseline\", LogisticRegression(**params)\nbaseline(name, model, verbose=False)\n\nname, model = \"svm_baseline\", SVC(**{'C': 5, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'})\nbaseline(name, model, verbose=False)\n\nparams = {\"eta\":0.1,\"gamma\":0,\"max_depth\":6,\"lambda\":0.1,\"alpha\":10}\nname, model = \"xg_baseline\", XGBClassifier(**params)\nbaseline(name, model, verbose=False)\n\nparams = {\"rsm\":0.1, \"learning_rate\":0.005,\"iterations\":500,\"l2_leaf_reg\":5,\"verbose\":False}\nname, model = \"cb_baseline\", CatBoostClassifier(**params)\nbaseline(name, model, verbose=False) \n fig = plt.figure(figsize=(35,10))\ncount=1\nfor k in models_dict:\n    ax = fig.add_subplot(1,len(models_dict),count)\n    count+=1\n    skplt.metrics.plot_confusion_matrix(y_train, models_dict[k].predict(x_train), normalize=True, figsize=(5,5),ax=ax, cmap=\"Blues\")\n    ax.set_title(k)\nplt.show() \n deploy_acc[\"lr_baseline\"]  = 0.79904\ndeploy_acc[\"svm_baseline\"] = 0.80382\ndeploy_acc[\"xg_baseline\"]  = 0.78947\ndeploy_acc[\"cb_baseline\"]  = 0.79425 \nprint(\"Accuracy on the deployment set:\")\nfor k in deploy_acc:\n    print(f\"{k}\\t:\\t{deploy_acc[k]}\") \n print(\"Accuracy on the training set:\")\nfor k in train_acc:\n    print(f\"{k}\\t:\\t{train_acc[k]}\") \n name, model = \"ensemble\", StackingClassifier(classifiers=(models_dict[\"svm_baseline\"],models_dict[\"lr_baseline\"],\n                                                                    models_dict[\"xg_baseline\"], models_dict[\"cb_baseline\"]),\n                                               meta_classifier=LogisticRegression(**{\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}),\n                                               use_features_in_secondary=True)\nbaseline(name, model, verbose=False) \n deploy_acc[\"ensemble\"]  = 0.80622 \n ens_train, ens_deploy = {}, {}\nfor k in models_dict:\n    ens_train[k] = models_dict[k].predict(x_train) * deploy_acc[k]\n    ens_deploy[k] = models_dict[k].predict(deploy) * deploy_acc[k]\nx_train = pd.concat([pd.DataFrame(ens_train, index=x_train.index),x_train], axis=1)        \ndeploy = pd.concat([pd.DataFrame(ens_deploy, index=deploy.index),deploy], axis=1) \n model = SVC()\nmodel.fit(x_train,y_train)\nsubmition = pd.DataFrame({\"PassengerId\":deploy.index,\"Survived\":model.predict(deploy)}).astype(int) \n submition.to_csv(\"mixture.csv\",index=False) #0.81100",
    "markdown_source": "<h1 style=\"font-size:250%;color:#292F55\"> Titanic - Machine Learning from Disaster</h1>\n\n*Top 3% Titanic solution - For this last version best model score is 0.81100*.\n![](https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/2-rms-titanic-ship-plans-jose-elias-sofia-pereira.jpg) \n <a style=\"font-size:200%;color:#292F55\">Table Of Content\n* [<a style=\"font-size:150%;color:#292F55\">1. EDA & Feature Engeneering](#1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.1 Passengers location analisys](#1.1_bullet) - Survival for different Deck / Cabin numbers\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.2 Groups and family bonds analisys](#1.2_bullet) - Ticket numbers analisys, Names / Surnames\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.3 Personal features analisys](#1.3_bullet) - Age / Status analisys\n* [<a style=\"font-size:150%;color:#292F55\">2. Data preparation](#2_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Filling None values](#2.1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.2 Encoding features and droping unnecessary](#2.2_bullet)\n* [<a style=\"font-size:150%;color:#292F55\">3. Model development](#3_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Catboost baseline](#2.1_bullet)\n    \n \n # <a class=\"anchor\" id=\"1_bullet\" style=\"color:#292F55\"> 1. Exploratory Data Analysis (EDA) \n ## <a class=\"anchor\" id=\"1.1_bullet\" style=\"color:#3B61A3\"> 1.1 Passengers location analisys \n\nI assume, that the location of passengers at the moment of the disaster may affect on the surviving rate.\n\nFor this case we will try to analyze such location, referring to the time of the disaster - 23:40. It means that some passengers may already have been in their cabins, some of them was hanging on some restaurants and \"bars\" (linked to there Pclass and maby cabin location) etc.\n\nAnyway, we do not know their location at that moment, but we can create some feature to describe it somehow to help our model.\n\nOffcourse, we have smth like 80% None values in \"Cabin\" feature - but still some useful information can be extracted + we need to be careful with filling the gaps. \n ### <a class=\"anchor\" id=\"1.1.1_bullet\" style=\"color:#3B61A3\"> 1.1.1 Survival for different Deck numbers\nDeck descriptors are coded inside of the Cabin numbers\nWe will extract them as a new feature.\nUnknowns we will mark as \"N/A\" \n What we can see from such graphs:\n*     Only one PassengerId have been on the Deck T - and he is in train set, so we can drop the \"T\" value\n*     There ara some dependancies between surviving rate and the Deck number:\n\n|deck|died|survived|ratio|\n|:--:|:--:|:------:|:---:|\n|C   |24  |35      |0.4  |\n|G   |2   |2       |0.5  |\n|D   |8   |25      |0.24 |\n|A   |8   |7       |0.53 |\n|B   |12  |35      |0.26 |\n|F   |5   |8       |0.38 |\n|E   |8   |24      |0.25 |\n        \nIn this case - we can put such new features into the model and encode them. \n ### <a class=\"anchor\" id=\"1.1.2_bullet\" style=\"color:#3B61A3\"> 1.1.2 Cabin numbers analisys\nSome of the passangers have shared several cabins - thay may have the same cabin number or leave in 3 of 4 cabins at the same time (families). But actually not only families or reletives shared cabins, but some collegues, friends etc. In this case i will try to create a features, which will describe the location of passangers, linked to there Cabin number.\n\nSome of the cabins has ambiquouse values - i will hardcode them - giving maximum values to multiple cabins \nfor a passanger. Or just rename them is several other ways, according to the Deck plans from https://www.encyclopedia-titanica.org/titanic-deckplans/ \n We can see that there is no accurate dependency between Cabin number and the Survival in general - maby it can work on connection with some other features. Some extra information we can take from the Cabin number - is the Side of the ship (left or right) ,according to the even or odd number of it. The side of the ship can effect much on the serviving rate. \n As we can see - passangers survived more often, living on the 1, then on the side -1\n\nTo fill the missing values for \"Cabin\", we will put median values for all passangers in specific Decks.\nBefore this, we will devide number of the Cabin by two - because the \"side\" location has been already taken from the data.\nIf Deck number is unknown - we will just mark Cabin as -1 - mwaning \"Unknown\" \n Now we gonna plot some developed \"coordinates\" of the passangers, to find some patterns in survival. \n We can see some patterns in the data:\n  - For example, all of the passangers on the \"1\" side of the Deck D survived.\n  - For only some of decks the \"closer\" location to zero may cause the better survival (maby those passangers was closer to the ladders) \n In the end - we have to fillna for \"Side\" feature with 0 - refering to unknown side of the ship \n ## <a class=\"anchor\" id=\"1.2_bullet\" style=\"color:#3B61A3\">  1.2 Groups and family bonds analisys\nSome groups of passangers, should be connected via ticket numbers, surnames, classP and etc. We will try to put the data into the shape in which our model will detect such connections\n### <a class=\"anchor\" id=\"1.2.1_bullet\" style=\"color:#3B61A3\">  1.2.1 Ticket numbers analisys \n **\"LINE\" tickets:**\nAll Tickets number contains some numbers, except \"LINE\" tickets www.encyclopedia-titanica.org\nPhiladelphia's westbound voyage was cancelled, and several shipmates forced to travel aboard Titanic as passengers (Some of them have LINE ticket number):\n - August Johnson (Johnson, Mr. Alfred) - **LINE** - 370160\n - William Cahoone Jr. Johnson - **LINE** - 370160\n - William Henry T\u00f6rnquist - **LINE** - 370160\n - Andrew John Shannon (Lionel Leonard) - **LINE** - 370160\n\nWe will not analize them much, in this part, but we should take it into account \n Some of the tickets contains several prefixes refering for some specific sale policies - maby it may be usefull for the model (we will save it into Ticket_p) but at the same time wew will clear our ticket number from umbiques information (It may be some hidden connections in the ticket numbers). \n We can see that some of prefixes appear only one time or only in train dataset. Lets clean them in order not to confuse our model.\n\nWe wil do it manualy - couse it is not much off them, and we gonna check them, if maby there is some sintax mistakes. \n We do not know much about the meaning of this prefixes, but there are some dependencies:\n* No passangers survived with the prefix A4\n* Most of the passangers with WC prefix - died \n ### <a class=\"anchor\" id=\"1.2.2_bullet\" style=\"color:#3B61A3\">  1.2.2 Names, surnames and status feature\nTo get more information about the family bonds - we will extract surnames instead of Names, and put them into features list/ \n We will get all same-surname groups into one list, to put some feature for it\nAll others will be marked with \"Other\".(*) \n Lets visualize Surviving rates for families: \n The same thing as in (*) we gonna do for those Surnames who do not exist in test set.\nAgain, i gonna do it manually, cause i dont wanna work with automatization here =)\n\nBut just before this we will put some extra feature which mean \"Has any namesakes\" to determin if the person in som relatio-like group. It may look the same as SibSp, but guess, that som connections between people is hidden. \n Now we will delete all the Families, for which number of Survived equel to not Survived (Again ill do it manually) \n ## <a class=\"anchor\" id=\"1.3_bullet\" style=\"color:#3B61A3\">  1.3 Personal features analisys\n### <a class=\"anchor\" id=\"1.3.1_bullet\" style=\"color:#3B61A3\">  1.3.1 Title features\nPassangers with different Titles may hav different survival rate (may be connected to so some position on groups, status of inner features) \n I desided to delete values with low frequancy - for our model not to be messed up. \n ### <a class=\"anchor\" id=\"1.3.2_bullet\" style=\"color:#3B61A3\">  1.3.2 Parch and Age\nThis features may have crucial effect on the target. Parants was saving there children befor them, and many other connections may be inside of the just two attributes \n In the end i desided not to fix it, cause if takes some extra information about the data, and it is kind of cheating.\nBut i will leave it there just in case someone will need it \n We will manually set two more features:\n* \"Kid\" feature - for less then 18 y.o passangers - there survival rate is higher \n* 'Alone' feature - for those who was travalling alone (>18 e.o, Parch & SibSp ==0). \n* 'Old' feature - elder people died more often. I took 60 y.o as a treashold, after checking several and chooseing the one \n # <a class=\"anchor\" id=\"2_bullet\" style=\"color:#292F55\">  2. Data preparation\n## <a class=\"anchor\" id=\"2.1_bullet\" style=\"color:#3B61A3\">  2.1 Filling None values\n### <a class=\"anchor\" id=\"2.1.1_bullet\" style=\"color:#3B61A3\">  2.1.1 Filling \"Age\" None values \n For the \"Age\" feature we just can replace None values with some mean value, but we gonna do it in a bit more complex way.\nWe will locate some groups, based on Sex and Pclass - lets check the difference in ages in several groups. \n ### <a class=\"anchor\" id=\"2.1.2_bullet\" style=\"color:#3B61A3\">  2.1.2 Filling \"Fare\" feature\nI will manually fill None value with the mean value for passanger class.\nAfter that we can replace Fare with a rank, because i assume that the value of difference is not important. \n ### <a class=\"anchor\" id=\"2.1.3_bullet\" style=\"color:#3B61A3\">  2.1.3 Filling \"Embarked\" feature\nWe have two passangers, whose \"Embarked\" information is unknown \n According to https://www.encyclopedia-titanica.org/titanic-survivor/amelia-icard.html we can fill nan values with \"S\" \n ## <a class=\"anchor\" id=\"2.2_bullet\" style=\"color:#3B61A3\">  2.2 Encoding features and droping unnecessary \n We can try to apply OneHot encoder for all columns to see how spars will be the matrix \n Resulting matrix looks like too spars, because of Surnames features, which should provide us some groups of survivals.\nNow we gonna try to use it for the baseline. In the next versions, i'll try some other configurations \n # <a class=\"anchor\" id=\"3_bullet\" style=\"color:#292F55\">  3. Model development \n ## <a class=\"anchor\" id=\"3.1_bullet\" style=\"color:#3B61A3\">  3.1 Models baselines \n We will define the method, which fits the given model and puts all the neccesery data into different structures to use them further:\n\n* deploy_acc  - model accuracy for deploy dataset\n* train_acc   - model accuracy after the validation\n* models_dict - dictionary of the models\n \n I've tried several Gridsearches for CVs with Kfold. And after a bunch of deploys, i chose those models.\nI chose models which gave me the best deploy accuracy. This models gonna be not \"Best model for Survival prediction\" , but \"The best model to predict the test set\", which is not the exect solution for the task. \n ### <a class=\"anchor\" id=\"3.2_bullet\" style=\"color:#3B61A3\"> 3.2 Ensemble models \n We see, that all 5 models has different sepations on the data (even on the trains set)\nNow we gonna combine this models into peculiar ensemble.\nWe gonna put som waights, according to there deploy results. \n ![Upvote!](https://img.shields.io/badge/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)",
    "n_cells": 101,
    "n_code_cells": 59,
    "n_markdown_cells": 42,
    "n_raw_cells": 0,
    "n_outputs": 59,
    "r_code_cells": 0.5841584158415841,
    "r_markdown_cells": 0.4158415841584158,
    "r_raw_cells": 0.0,
    "r_outputs": 1.0,
    "n_exceptions": 0,
    "r_exceptions": 0.0,
    "n_lines": 413,
    "n_lines_code": 281,
    "n_lines_markdown": 132,
    "lines_per_cell": [
        24,
        4,
        3,
        12,
        1,
        5,
        1,
        9,
        4,
        4,
        6,
        15,
        1,
        5,
        6,
        5,
        1,
        7,
        5,
        7,
        1,
        6,
        3,
        2,
        1,
        3,
        9,
        2,
        1,
        12,
        4,
        3,
        2,
        5,
        3,
        2,
        1,
        2,
        3,
        1,
        5,
        4,
        2,
        8,
        1,
        4,
        5,
        1,
        2,
        3,
        2,
        4,
        5,
        1,
        4,
        2,
        6,
        2,
        2,
        8,
        4,
        4,
        4,
        4,
        3,
        1,
        2,
        6,
        5,
        5,
        3,
        2,
        1,
        5,
        2,
        1,
        1,
        1,
        1,
        1,
        12,
        1,
        2,
        1,
        6,
        1,
        6,
        11,
        2,
        14,
        8,
        7,
        3,
        1,
        5,
        1,
        3,
        6,
        3,
        1,
        1
    ],
    "lines_per_code_cell": [
        24,
        3,
        5,
        1,
        4,
        6,
        1,
        6,
        5,
        7,
        7,
        6,
        2,
        2,
        12,
        4,
        2,
        5,
        1,
        3,
        5,
        2,
        8,
        1,
        4,
        5,
        2,
        2,
        4,
        5,
        4,
        6,
        2,
        8,
        4,
        4,
        4,
        1,
        6,
        5,
        5,
        2,
        1,
        5,
        1,
        1,
        12,
        1,
        6,
        11,
        14,
        8,
        7,
        3,
        5,
        1,
        6,
        3,
        1
    ],
    "lines_per_markdown_cell": [
        4,
        12,
        1,
        9,
        4,
        15,
        5,
        1,
        5,
        1,
        3,
        1,
        3,
        9,
        1,
        3,
        3,
        2,
        2,
        1,
        4,
        1,
        3,
        1,
        2,
        2,
        4,
        3,
        2,
        3,
        2,
        1,
        1,
        1,
        2,
        1,
        1,
        6,
        2,
        1,
        3,
        1
    ],
    "ave_lines_per_cell": 4.089108910891089,
    "ave_lines_per_code_cell": 4.762711864406779,
    "ave_lines_per_markdown_cell": 3.142857142857143,
    "max_lines_per_cell": 24,
    "max_lines_per_code_cell": 24,
    "max_lines_per_markdown_cell": 15,
    "min_lines_per_cell": 1,
    "min_lines_per_code_cell": 1,
    "min_lines_per_markdown_cell": 1,
    "n_chars": 25265,
    "n_chars_code": 14132,
    "n_chars_markdown": 11133,
    "chars_per_cell": [
        775,
        295,
        181,
        976,
        91,
        273,
        44,
        772,
        229,
        139,
        223,
        546,
        38,
        709,
        529,
        200,
        358,
        272,
        390,
        259,
        100,
        290,
        253,
        72,
        95,
        375,
        567,
        65,
        296,
        477,
        196,
        249,
        156,
        237,
        179,
        229,
        66,
        120,
        133,
        44,
        211,
        394,
        66,
        1066,
        103,
        182,
        211,
        114,
        103,
        316,
        147,
        168,
        234,
        82,
        168,
        250,
        272,
        74,
        177,
        379,
        331,
        296,
        297,
        337,
        258,
        44,
        228,
        407,
        202,
        230,
        273,
        76,
        42,
        231,
        160,
        25,
        117,
        46,
        106,
        86,
        653,
        58,
        220,
        78,
        304,
        81,
        277,
        539,
        314,
        629,
        291,
        248,
        95,
        80,
        488,
        33,
        204,
        360,
        140,
        52,
        114
    ],
    "chars_per_code_cell": [
        775,
        181,
        273,
        44,
        139,
        223,
        38,
        529,
        200,
        272,
        259,
        290,
        72,
        65,
        477,
        196,
        156,
        237,
        66,
        133,
        211,
        66,
        1066,
        103,
        182,
        211,
        103,
        147,
        168,
        234,
        168,
        272,
        74,
        379,
        296,
        297,
        337,
        44,
        407,
        202,
        230,
        76,
        42,
        231,
        25,
        46,
        653,
        58,
        304,
        539,
        629,
        291,
        248,
        95,
        488,
        33,
        360,
        140,
        52
    ],
    "chars_per_markdown_cell": [
        295,
        976,
        91,
        772,
        229,
        546,
        709,
        358,
        390,
        100,
        253,
        95,
        375,
        567,
        296,
        249,
        179,
        229,
        120,
        44,
        394,
        114,
        316,
        82,
        250,
        177,
        331,
        258,
        228,
        273,
        160,
        117,
        106,
        86,
        220,
        78,
        81,
        277,
        314,
        80,
        204,
        114
    ],
    "ave_chars_per_line": 61.17433414043583,
    "ave_chars_per_cell": 250.14851485148515,
    "ave_chars_per_code_cell": 239.52542372881356,
    "ave_chars_per_markdown_cell": 265.07142857142856,
    "max_chars_per_cell": 1066,
    "max_chars_per_code_cell": 1066,
    "max_chars_per_markdownell": 976,
    "min_chars_per_cell": 25,
    "min_chars_per_code_cell": 25,
    "min_chars_per_markdown_cell": 44,
    "r_lines_code": 0.6803874092009685,
    "r_lines_markdown": 0.3196125907990315,
    "r_chars_markdown": 0.44064911933504847,
    "r_chars_code": 0.5593508806649515,
    "all_cells": [
        {
            "source": "from sklearn.preprocessing import OneHotEncoder, LabelEncoder, MinMaxScaler, LabelBinarizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression, RidgeClassifierCV\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import LinearSVC, SVC\n\nfrom mlxtend.classifier import StackingClassifier\nfrom catboost import CatBoostClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n\nimport plotly.express as px\nfrom matplotlib import pyplot as plt\nimport scikitplot as skplt\nimport missingno as msno\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport os\nimport re\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)",
            "mc_idx": 0,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0273224043715847,
                "Data_Transform": 0.04371584699453552,
                "Model_Train": 0.04918032786885246,
                "Model_Evaluation": 0.01639344262295082,
                "Model_Interpretation": 0.00546448087431694,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.01639344262295082,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 18
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "plotly": 1,
                    "matplotlib": 1,
                    "columns": 1,
                    ".max": 2
                },
                "Data_Transform": {
                    "minmaxscaler": 2,
                    "labelencoder": 2,
                    "onehotencoder": 1,
                    "binarizer": 1,
                    "stack": 1,
                    ".exp": 1
                },
                "Model_Train": {
                    "model": 1,
                    "randomforestclassifier": 2,
                    "logisticregression": 1,
                    "ridge": 1,
                    "svc": 2,
                    "stackingclassifier": 1,
                    ".linear": 1
                },
                "Model_Evaluation": {
                    "accuracy_score": 2,
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plotly.express": 1,
                    "matplotlib": 1,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<IPython.core.display.HTML object>"
                    ]
                },
                "mc_idx": 0,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "<h1 style=\"font-size:250%;color:#292F55\"> Titanic - Machine Learning from Disaster</h1>\n\n*Top 3% Titanic solution - For this last version best model score is 0.81100*.\n![](https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/2-rms-titanic-ship-plans-jose-elias-sofia-pereira.jpg)",
            "mc_idx": 1,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "cm = [\"#273176\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\"]\ngradient = [\"#292F55\",\"#273176\",\"#223A92\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\",\"#C7B679\",\"#957447\"]\nsns.palplot(gradient)",
            "mc_idx": 2,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Interpretation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.5,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 1.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c001_o000_image_0.png",
                    1,
                    0,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 648x72 with 1 Axes>"
                    ]
                },
                "mc_idx": 2,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 0
            }
        },
        {
            "source": "<a style=\"font-size:200%;color:#292F55\">Table Of Content\n* [<a style=\"font-size:150%;color:#292F55\">1. EDA & Feature Engeneering](#1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.1 Passengers location analisys](#1.1_bullet) - Survival for different Deck / Cabin numbers\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.2 Groups and family bonds analisys](#1.2_bullet) - Ticket numbers analisys, Names / Surnames\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.3 Personal features analisys](#1.3_bullet) - Age / Status analisys\n* [<a style=\"font-size:150%;color:#292F55\">2. Data preparation](#2_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Filling None values](#2.1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.2 Encoding features and droping unnecessary](#2.2_bullet)\n* [<a style=\"font-size:150%;color:#292F55\">3. Model development](#3_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Catboost baseline](#2.1_bullet)\n    \n",
            "mc_idx": 3,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# <a class=\"anchor\" id=\"1_bullet\" style=\"color:#292F55\"> 1. Exploratory Data Analysis (EDA)",
            "mc_idx": 4,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "path = \"/kaggle/input/titanic/\"\ndf_tr = pd.read_csv(f\"{path}train.csv\").set_index(\"PassengerId\", drop=True)\ndf_ts = pd.read_csv(f\"{path}test.csv\").set_index(\"PassengerId\", drop=True)\ndf = pd.concat([df_tr, df_ts], axis=0)\ndf.head(10).style.background_gradient(cmap='Blues')",
            "mc_idx": 5,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.375,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.125,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {
                    ".concat(": 1,
                    ".set_index": 2,
                    ".concat": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7f55d60d9a90>"
                    ]
                },
                "mc_idx": 5,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "msno.bar(df, figsize=(30,2), color=gradient)",
            "mc_idx": 6,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c003_o001_image_1.png",
                    3,
                    1,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 2160x144 with 3 Axes>"
                    ]
                },
                "mc_idx": 6,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 1
            }
        },
        {
            "source": "## <a class=\"anchor\" id=\"1.1_bullet\" style=\"color:#3B61A3\"> 1.1 Passengers location analisys \n\nI assume, that the location of passengers at the moment of the disaster may affect on the surviving rate.\n\nFor this case we will try to analyze such location, referring to the time of the disaster - 23:40. It means that some passengers may already have been in their cabins, some of them was hanging on some restaurants and \"bars\" (linked to there Pclass and maby cabin location) etc.\n\nAnyway, we do not know their location at that moment, but we can create some feature to describe it somehow to help our model.\n\nOffcourse, we have smth like 80% None values in \"Cabin\" feature - but still some useful information can be extracted + we need to be careful with filling the gaps.",
            "mc_idx": 7,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.1.1_bullet\" style=\"color:#3B61A3\"> 1.1.1 Survival for different Deck numbers\nDeck descriptors are coded inside of the Cabin numbers\nWe will extract them as a new feature.\nUnknowns we will mark as \"N/A\"",
            "mc_idx": 8,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[\"Deck\"] = df[\"Cabin\"].str[:1]\ndf[\"Deck\"] = df[\"Deck\"].replace(np.nan,\"N/A\")\nprint(\"All Deck descriptors:\")\nprint(set(df[\"Deck\"].values))",
            "mc_idx": 9,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "All Deck descriptors:\n{'E', 'A', 'T', 'C', 'G', 'N/A', 'D', 'B', 'F'}\n"
                    ]
                },
                "mc_idx": 9,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Deck\"]!=\"N/A\"]\nfig = px.histogram(dfplt, x=\"Deck\",color=\"Survived\",\n                   color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 10,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    5,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        ",
                        "<div>                            <div id=\"3343d9f5-c42b-4ea5-9300-81764300941c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"3343d9f5-c42b-4ea5-9300-81764300941c\")) {                    Plotly.newPlot(                        \"3343d9f5-c42b-4ea5-9300-81764300941c\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Deck=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"xxaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Deck=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"E\", \"C\", \"B\", \"C\", \"F\", \"E\", \"A\", \"D\", \"C\", \"B\", \"D\", \"C\", \"B\", \"F\", \"B\", \"A\", \"C\", \"A\", \"G\", \"C\", \"G\", \"C\", \"E\", \"B\", \"C\", \"A\", \"D\", \"C\", \"C\", \"C\", \"C\", \"T\", \"C\", \"C\", \"E\", \"C\", \"C\", \"E\", \"E\", \"A\", \"B\", \"C\", \"C\", \"C\", \"D\", \"C\", \"B\", \"C\", \"A\", \"D\", \"D\", \"E\", \"B\", \"C\", \"F\", \"C\", \"F\", \"C\", \"B\", \"D\", \"E\", \"F\", \"D\", \"B\", \"A\", \"B\", \"A\", \"B\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Deck=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"xxaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Deck\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('3343d9f5-c42b-4ea5-9300-81764300941c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 1
            }
        },
        {
            "source": "What we can see from such graphs:\n*     Only one PassengerId have been on the Deck T - and he is in train set, so we can drop the \"T\" value\n*     There ara some dependancies between surviving rate and the Deck number:\n\n|deck|died|survived|ratio|\n|:--:|:--:|:------:|:---:|\n|C   |24  |35      |0.4  |\n|G   |2   |2       |0.5  |\n|D   |8   |25      |0.24 |\n|A   |8   |7       |0.53 |\n|B   |12  |35      |0.26 |\n|F   |5   |8       |0.38 |\n|E   |8   |24      |0.25 |\n        \nIn this case - we can put such new features into the model and encode them.",
            "mc_idx": 11,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df.loc[df[\"Deck\"]=='T',\"Deck\"] = 'N/A'",
            "mc_idx": 12,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    6,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.1.2_bullet\" style=\"color:#3B61A3\"> 1.1.2 Cabin numbers analisys\nSome of the passangers have shared several cabins - thay may have the same cabin number or leave in 3 of 4 cabins at the same time (families). But actually not only families or reletives shared cabins, but some collegues, friends etc. In this case i will try to create a features, which will describe the location of passangers, linked to there Cabin number.\n\nSome of the cabins has ambiquouse values - i will hardcode them - giving maximum values to multiple cabins \nfor a passanger. Or just rename them is several other ways, according to the Deck plans from https://www.encyclopedia-titanica.org/titanic-deckplans/",
            "mc_idx": 13,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "replaces = {'B51 B53 B55': 'B55', 'B52 B54 B56': 'B56', 'B57 B59 B63 B66': 'B66', 'B58 B60': 'B60', \n            'B82 B84': 'B84', 'B96 B98': 'B98', 'C22 C26': 'C26', 'C23 C25 C27': 'C27', 'C55 C57': 'C57',\n            'C62 C64': 'C64', 'D10 D12': 'D12', 'E39 E41': 'E41', 'F E46': 'E46', 'F E57': 'E57',\n            'F E69': 'E69', 'F G63': 'G63', 'F G73': 'G73', 'F': None, 'D': None, ' ': None, 'T': None, np.nan: None}\ndf[\"Cabin\"] = df[\"Cabin\"].replace(replaces)\ndf[\"Cabin\"] = df.fillna(np.nan)[\"Cabin\"].str[1:].astype(float)",
            "mc_idx": 14,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".fillna(": 1,
                    ".replace(": 1,
                    ".astype(": 1,
                    ".fillna": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    7,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Cabin\",color=\"Survived\", height=300,\n                   color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 15,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    8,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"047b4d4a-05e3-403f-8377-dff738c187e5\" class=\"plotly-graph-div\" style=\"height:300px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"047b4d4a-05e3-403f-8377-dff738c187e5\")) {                    Plotly.newPlot(                        \"047b4d4a-05e3-403f-8377-dff738c187e5\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Cabin=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [null, null, null, 46.0, null, null, null, null, null, null, null, null, null, 27.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30.0, null, null, null, 83.0, null, null, null, null, null, null, null, null, 73.0, null, null, null, null, null, null, null, null, null, 31.0, null, null, null, 5.0, null, null, null, 26.0, null, null, null, null, 110.0, null, null, null, null, null, null, null, 60.0, null, null, null, null, 26.0, null, null, null, null, null, null, null, 123.0, null, 86.0, null, null, null, null, null, 2.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 19.0, null, null, 7.0, null, null, 49.0, null, null, null, null, null, 32.0, null, null, null, null, null, null, null, null, null, null, 6.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 78.0, null, null, null, 6.0, 87.0, null, null, null, 67.0, 94.0, null, null, null, null, 118.0, null, null, null, null, null, null, 19.0, null, null, null, null, null, null, null, 26.0, null, null, null, null, null, null, null, null, null, null, null, 124.0, 91.0, null, null, 2.0, null, null, null, null, null, null, 128.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 82.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 44.0, null, 27.0, null, null, null, null, null, 111.0, null, 38.0, null, null, 63.0, null, null, null, null, null, null, null, null, null, 14.0, null, null, null, null, null, null, null, 37.0, null, null, null, 30.0, null, null, null, null, 26.0, null, null, null, null, null, 65.0, null, null, null, 46.0, null, null, null, null, null, null, 95.0, null, null, null, null, null, 38.0, null, null, null, 86.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 10.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 50.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 48.0, null, 58.0, null, null, null, null, null, 71.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 68.0, 63.0, null, null, null, null, 124.0, null, null, 73.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 46.0, null, 22.0, null, 30.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 77.0, null, null, 38.0, null, 6.0, null, null, null, null, 84.0, null, null, null, null, null, null, null, null, null, null, 36.0, null, null, null, null, null, null, null, 102.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 24.0, null, null, 55.0, null, null, null, null, null, null, null, null, null, null, null, null], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Cabin=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [85.0, null, 123.0, null, null, 6.0, 103.0, null, null, null, 56.0, null, 6.0, null, null, 78.0, null, null, null, null, null, null, 33.0, null, 52.0, null, null, 28.0, null, 33.0, null, null, null, null, null, null, null, null, 27.0, 12.0, null, null, null, null, 101.0, null, null, 69.0, null, 47.0, null, null, null, 2.0, null, null, null, 33.0, null, 4.0, null, null, null, null, null, 2.0, 4.0, 80.0, null, null, null, null, 31.0, null, 36.0, null, 15.0, null, 93.0, null, 83.0, null, null, null, null, 35.0, null, null, 77.0, null, null, null, null, 125.0, 99.0, null, null, null, 7.0, null, null, null, null, null, null, 49.0, 106.0, 60.0, null, null, 101.0, 26.0, null, 65.0, 36.0, 54.0, 66.0, null, null, 7.0, 34.0, null, null, 32.0, null, null, 18.0, null, null, 40.0, null, 2.0, 27.0, 33.0, null, null, null, 33.0, null, null, 37.0, null, null, 35.0, 50.0, null, null, null, null, null, null, null, 98.0, null, 36.0, 6.0, null, null, null, 78.0, null, null, null, null, null, 10.0, 52.0, null, null, 98.0, null, null, null, null, 34.0, null, null, null, 104.0, 92.0, null, 21.0, null, 12.0, null, null, null, null, null, 49.0, 93.0, null, 20.0, 79.0, null, null, null, null, 25.0, null, 33.0, null, 73.0, 18.0, null, null, null, null, null, 39.0, 22.0, null, null, null, null, 70.0, null, null, 16.0, 67.0, null, null, null, 101.0, 25.0, null, null, 44.0, null, null, 68.0, 68.0, 41.0, 20.0, null, 20.0, null, null, null, null, 125.0, null, null, 4.0, 19.0, null, 9.0, 23.0, 50.0, null, 35.0, null, null, 33.0, 26.0, null, null, null, null, null, 126.0, null, null, null, 55.0, 49.0, 5.0, 20.0, null, null, null, 64.0, 24.0, null, 24.0, null, null, 90.0, 126.0, 45.0, 101.0, null, 8.0, null, null, 5.0, 101.0, 45.0, 66.0, null, null, null, 121.0, null, null, 77.0, null, 98.0, 11.0, null, null, 3.0, null, 20.0, null, null, 17.0, null, null, 98.0, null, null, 8.0, 69.0, null, 121.0, null, null, 28.0, null, null, 49.0, null, 47.0, null, 92.0, 28.0, null, null, 17.0, null, 17.0, null, null, null, 35.0, null, null, 50.0, null, 42.0, 148.0], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Cabin=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [null, null, null, null, null, null, null, null, null, null, null, null, 45.0, null, 31.0, null, null, null, null, null, null, null, null, null, 66.0, null, 36.0, null, 21.0, null, null, null, null, null, 78.0, null, null, null, null, null, null, 34.0, null, null, 19.0, null, 9.0, null, 15.0, null, 31.0, null, null, 27.0, null, null, null, 63.0, null, 61.0, null, null, null, null, 66.0, null, null, null, 53.0, 27.0, null, null, null, 43.0, 130.0, 132.0, null, 101.0, null, null, null, 57.0, null, null, null, null, null, null, null, null, null, null, 71.0, null, null, null, 46.0, null, null, null, 116.0, null, null, null, null, null, null, null, null, null, null, null, 29.0, null, 57.0, null, null, 6.0, 6.0, null, null, null, 28.0, null, null, null, null, null, null, null, null, 51.0, null, null, null, null, null, null, null, null, null, null, 66.0, null, null, null, 46.0, null, null, null, 54.0, null, null, null, null, null, 97.0, null, 22.0, null, null, null, null, null, null, null, 10.0, null, null, null, null, null, null, null, null, null, null, 116.0, 4.0, 45.0, null, 52.0, 30.0, null, 60.0, null, null, null, null, null, null, null, null, null, null, null, 34.0, null, null, null, null, null, 64.0, null, null, null, null, null, 11.0, null, null, null, null, null, null, 11.0, null, null, 80.0, null, null, null, 33.0, null, null, null, null, null, null, null, null, null, null, null, 85.0, null, 37.0, null, null, 86.0, null, null, 34.0, null, null, 21.0, null, null, null, null, null, null, 89.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 6.0, null, 89.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 45.0, 46.0, null, null, null, null, 34.0, null, null, null, null, null, null, null, null, null, null, null, 26.0, 26.0, null, 69.0, null, null, null, null, null, 32.0, null, 78.0, null, null, null, null, 57.0, 2.0, null, null, null, 4.0, null, null, null, null, 18.0, null, null, null, 106.0, null, null, null, null, null, null, null, 55.0, null, null, null, null, null, null, 12.0, null, null, null, null, 60.0, 101.0, null, null, null, null, null, null, null, 50.0, null, null, null, null, null, null, 41.0, 56.0, null, 34.0, null, null, null, 39.0, null, null, null, null, null, null, null, null, null, null, null, 24.0, 28.0, null, null, null, 31.0, null, 41.0, null, null, 7.0, null, null, null, 40.0, 38.0, null, 80.0, null, null, null, 78.0, null, null, 105.0, null, null, null], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"height\": 300, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Cabin\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('047b4d4a-05e3-403f-8377-dff738c187e5');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 15,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 0
            }
        },
        {
            "source": "We can see that there is no accurate dependency between Cabin number and the Survival in general - maby it can work on connection with some other features. Some extra information we can take from the Cabin number - is the Side of the ship (left or right) ,according to the even or odd number of it. The side of the ship can effect much on the serviving rate.",
            "mc_idx": 16,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[\"Side\"] = df[\"Cabin\"]\ndf.loc[df[\"Side\"]!=0,\"Side\"] = (df[\"Cabin\"][df[\"Cabin\"]!=0]%2-0.5)*2\n\ns = df[df[\"Side\"]==1]\nprint(f'Survived for side 1\\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Side\"]==-1]\nprint(f'Survived for side -1\\t {len(s[s[\"Survived\"]==1])/len(s)}')",
            "mc_idx": 17,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    9,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Survived for side 1\t 0.5076923076923077\nSurvived for side -1\t 0.4276729559748428\n"
                    ]
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 0
            }
        },
        {
            "source": "As we can see - passangers survived more often, living on the 1, then on the side -1\n\nTo fill the missing values for \"Cabin\", we will put median values for all passangers in specific Decks.\nBefore this, we will devide number of the Cabin by two - because the \"side\" location has been already taken from the data.\nIf Deck number is unknown - we will just mark Cabin as -1 - mwaning \"Unknown\"",
            "mc_idx": 18,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "for i in set(df[\"Deck\"].values):\n    v = df[df[\"Deck\"]==i][\"Cabin\"]//2\n    df.loc[df[\"Deck\"]==i, \"Cabin\"]= v\n    df.loc[(df[\"Deck\"]==i) & (df[\"Cabin\"]==0),\"Cabin\"] = np.median(v)\n    \ndf.loc[df[\"Cabin\"].isna(),\"Cabin\"]=-1\ndf[\"Cabin\"] = df[\"Cabin\"].astype(int)",
            "mc_idx": 19,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".median": 2,
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 19,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "Now we gonna plot some developed \"coordinates\" of the passangers, to find some patterns in survival.",
            "mc_idx": 20,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter_3d(dfplt, x=\"Cabin\", y=\"Side\", z= \"Deck\", color=\"Survived\",\n                    color_discrete_sequence=cm, size_max=6, width=1000, height=1000)\nfig.show()",
            "mc_idx": 21,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 1,
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"33991d93-358a-4f59-a927-48299b1d6f11\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"33991d93-358a-4f59-a927-48299b1d6f11\")) {                    Plotly.newPlot(                        \"33991d93-358a-4f59-a927-48299b1d6f11\",                        [{\"hovertemplate\": \"Survived=0.0<br>Cabin=%{x}<br>Side=%{y}<br>Deck=%{z}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"scene\": \"scene\", \"showlegend\": true, \"type\": \"scatter3d\", \"x\": [-1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 2, -1, -1, -1, 13, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, 61, -1, 43, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, 3, -1, -1, 24, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, 3, 43, -1, -1, -1, 33, 47, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 45, -1, -1, 1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, 13, -1, -1, -1, -1, -1, 55, -1, 19, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, 15, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, 32, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, 19, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, 29, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, 31, -1, -1, -1, -1, 62, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, 11, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, 19, -1, 3, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], \"y\": [null, null, null, -1.0, null, null, null, null, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, 1.0, null, null, null, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, null, null, 1.0, null, null, null, 1.0, null, null, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, null, 1.0, null, -1.0, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1.0, null, null, 1.0, null, null, 1.0, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, -1.0, 1.0, null, null, null, 1.0, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, -1.0, 1.0, null, null, -1.0, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, 1.0, null, null, null, null, null, 1.0, null, -1.0, null, null, 1.0, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, 1.0, null, null, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, 1.0, null, null, null, -1.0, null, null, null, null, null, null, 1.0, null, null, null, null, null, -1.0, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, -1.0, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, 1.0, null, null, null, null, -1.0, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, -1.0, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1.0, null, null, -1.0, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null], \"z\": [\"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"G\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"G\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"C\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"B\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]}, {\"hovertemplate\": \"Survived=1.0<br>Cabin=%{x}<br>Side=%{y}<br>Deck=%{z}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"scene\": \"scene\", \"showlegend\": true, \"type\": \"scatter3d\", \"x\": [42, -1, 61, -1, -1, 3, 51, -1, -1, -1, 28, -1, 3, -1, -1, 39, -1, -1, -1, -1, -1, -1, 16, -1, 26, -1, -1, 14, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, 13, 6, -1, -1, -1, -1, 50, -1, -1, 34, -1, 23, -1, -1, -1, 1, -1, -1, -1, 16, -1, 2, -1, -1, -1, -1, -1, 1, 2, 40, -1, -1, -1, -1, 15, -1, 18, -1, 7, -1, 46, -1, 41, -1, -1, -1, -1, 17, -1, -1, 38, -1, -1, -1, -1, 62, 49, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 24, 53, 30, -1, -1, 50, 13, -1, 32, 18, 27, 33, -1, -1, 3, 17, -1, -1, 16, -1, -1, 9, -1, -1, 20, -1, 1, 13, 16, -1, -1, -1, 16, -1, -1, 18, -1, -1, 17, 25, -1, -1, -1, -1, -1, -1, -1, 49, -1, 18, 3, -1, -1, -1, 39, -1, -1, -1, -1, -1, 5, 26, -1, -1, 49, -1, -1, -1, -1, 17, -1, -1, -1, 52, 46, -1, 10, -1, 6, -1, -1, -1, -1, -1, 24, 46, -1, 10, 39, -1, -1, -1, -1, 12, -1, 16, -1, 36, 9, -1, -1, -1, -1, -1, 19, 11, -1, -1, -1, -1, 35, -1, -1, 8, 33, -1, -1, -1, 50, 12, -1, -1, 22, -1, -1, 34, 34, 20, 10, -1, 10, -1, -1, -1, -1, 62, -1, -1, 2, 9, -1, 4, 11, 25, -1, 17, -1, -1, 16, 13, -1, -1, -1, -1, -1, 63, -1, -1, -1, 27, 24, 2, 10, -1, -1, -1, 32, 12, -1, 12, -1, -1, 45, 63, 22, 50, -1, 4, -1, -1, 2, 50, 22, 33, -1, -1, -1, 60, -1, -1, 38, -1, 49, 5, -1, -1, 1, -1, 10, -1, -1, 8, -1, -1, 49, -1, -1, 4, 34, -1, 60, -1, -1, 14, -1, -1, 24, -1, 23, -1, 46, 14, -1, -1, 8, -1, 8, -1, -1, -1, 17, -1, -1, 25, -1, 21, 74], \"y\": [1.0, null, 1.0, null, null, -1.0, 1.0, null, null, null, -1.0, null, -1.0, null, null, -1.0, null, null, null, null, null, null, 1.0, null, -1.0, null, null, -1.0, null, 1.0, null, null, null, null, null, null, null, null, 1.0, -1.0, null, null, null, null, 1.0, null, null, 1.0, null, 1.0, null, null, null, -1.0, null, null, null, 1.0, null, -1.0, null, null, null, null, null, -1.0, -1.0, -1.0, null, null, null, null, 1.0, null, -1.0, null, 1.0, null, 1.0, null, 1.0, null, null, null, null, 1.0, null, null, 1.0, null, null, null, null, 1.0, 1.0, null, null, null, 1.0, null, null, null, null, null, null, 1.0, -1.0, -1.0, null, null, 1.0, -1.0, null, 1.0, -1.0, -1.0, -1.0, null, null, 1.0, -1.0, null, null, -1.0, null, null, -1.0, null, null, -1.0, null, -1.0, 1.0, 1.0, null, null, null, 1.0, null, null, 1.0, null, null, 1.0, -1.0, null, null, null, null, null, null, null, -1.0, null, -1.0, -1.0, null, null, null, -1.0, null, null, null, null, null, -1.0, -1.0, null, null, -1.0, null, null, null, null, -1.0, null, null, null, -1.0, -1.0, null, 1.0, null, -1.0, null, null, null, null, null, 1.0, 1.0, null, -1.0, 1.0, null, null, null, null, 1.0, null, 1.0, null, 1.0, -1.0, null, null, null, null, null, 1.0, -1.0, null, null, null, null, -1.0, null, null, -1.0, 1.0, null, null, null, 1.0, 1.0, null, null, -1.0, null, null, -1.0, -1.0, 1.0, -1.0, null, -1.0, null, null, null, null, 1.0, null, null, -1.0, 1.0, null, 1.0, 1.0, -1.0, null, 1.0, null, null, 1.0, -1.0, null, null, null, null, null, -1.0, null, null, null, 1.0, 1.0, 1.0, -1.0, null, null, null, -1.0, -1.0, null, -1.0, null, null, -1.0, -1.0, 1.0, 1.0, null, -1.0, null, null, 1.0, 1.0, 1.0, -1.0, null, null, null, 1.0, null, null, 1.0, null, -1.0, 1.0, null, null, 1.0, null, -1.0, null, null, 1.0, null, null, -1.0, null, null, -1.0, 1.0, null, 1.0, null, null, -1.0, null, null, 1.0, null, 1.0, null, -1.0, -1.0, null, null, 1.0, null, 1.0, null, null, null, 1.0, null, null, -1.0, null, -1.0, -1.0], \"z\": [\"C\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"G\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"F\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"D\", \"N/A\", \"D\", \"N/A\", \"C\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"C\", \"B\", \"N/A\", \"N/A\", \"E\", \"C\", \"N/A\", \"C\", \"E\", \"C\", \"B\", \"N/A\", \"N/A\", \"C\", \"E\", \"N/A\", \"N/A\", \"C\", \"D\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"F\", \"C\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"D\", \"G\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"C\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"C\", \"N/A\", \"D\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"C\", \"N/A\", \"D\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"F\", \"N/A\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"E\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"C\", \"E\", \"B\", \"D\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"F\", \"D\", \"N/A\", \"D\", \"A\", \"B\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"D\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"D\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"E\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"C\", \"C\", \"C\", \"E\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"B\", \"B\", \"D\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"B\", \"D\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"E\", \"B\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"C\", \"N/A\", \"C\", \"D\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"B\", \"C\"]}],                        {\"height\": 1000, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"scene\": {\"domain\": {\"x\": [0.0, 1.0], \"y\": [0.0, 1.0]}, \"xaxis\": {\"title\": {\"text\": \"Cabin\"}}, \"yaxis\": {\"title\": {\"text\": \"Side\"}}, \"zaxis\": {\"title\": {\"text\": \"Deck\"}}}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1000},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('33991d93-358a-4f59-a927-48299b1d6f11');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "We can see some patterns in the data:\n  - For example, all of the passangers on the \"1\" side of the Deck D survived.\n  - For only some of decks the \"closer\" location to zero may cause the better survival (maby those passangers was closer to the ladders)",
            "mc_idx": 22,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[\"Side\"] = df[\"Side\"].fillna(0)\nmsno.bar(df, figsize=(30,2), color=cm)",
            "mc_idx": 23,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".fillna(": 1,
                    ".fillna": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c012_o001_image_2.png",
                    12,
                    1,
                    2
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 2160x144 with 3 Axes>"
                    ]
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 1
            }
        },
        {
            "source": "In the end - we have to fillna for \"Side\" feature with 0 - refering to unknown side of the ship",
            "mc_idx": 24,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## <a class=\"anchor\" id=\"1.2_bullet\" style=\"color:#3B61A3\">  1.2 Groups and family bonds analisys\nSome groups of passangers, should be connected via ticket numbers, surnames, classP and etc. We will try to put the data into the shape in which our model will detect such connections\n### <a class=\"anchor\" id=\"1.2.1_bullet\" style=\"color:#3B61A3\">  1.2.1 Ticket numbers analisys",
            "mc_idx": 25,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**\"LINE\" tickets:**\nAll Tickets number contains some numbers, except \"LINE\" tickets www.encyclopedia-titanica.org\nPhiladelphia's westbound voyage was cancelled, and several shipmates forced to travel aboard Titanic as passengers (Some of them have LINE ticket number):\n - August Johnson (Johnson, Mr. Alfred) - **LINE** - 370160\n - William Cahoone Jr. Johnson - **LINE** - 370160\n - William Henry T\u00f6rnquist - **LINE** - 370160\n - Andrew John Shannon (Lionel Leonard) - **LINE** - 370160\n\nWe will not analize them much, in this part, but we should take it into account",
            "mc_idx": 26,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "lin_rep = lambda x: x.replace({'LINE':\"370160\"})\ndf = lin_rep(df)",
            "mc_idx": 27,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 27,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "Some of the tickets contains several prefixes refering for some specific sale policies - maby it may be usefull for the model (we will save it into Ticket_p) but at the same time wew will clear our ticket number from umbiques information (It may be some hidden connections in the ticket numbers).",
            "mc_idx": 28,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "prefixes = []\nnums, prefs = [],[]\nfor i in df[\"Ticket\"].values:   \n    if not i.isdigit():\n        nums.append(int(re.search('.* {1}([0-9]+)', i).groups()[0]))\n        prefix = re.search('(.*)( {1})[0-9]+', i).groups()[0]\n        prefs.append(prefix.replace(\".\",\"\").replace(\" \", \"\").replace(\"/\",\"\")) # Needed to put in one group such prefixes as \"A/5\", \"A/5.\", \"A.5\" etc.\n    else:\n        nums.append(int(i))\n        prefs.append(\"\")\ndf[\"Ticket\"] = nums\ndf[\"Ticket_p\"] = prefs",
            "mc_idx": 29,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 3,
                    ".replace": 3
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    14,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 29,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show()",
            "mc_idx": 30,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    15,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"7fce9260-136e-4bf5-824b-0373080fe871\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7fce9260-136e-4bf5-824b-0373080fe871\")) {                    Plotly.newPlot(                        \"7fce9260-136e-4bf5-824b-0373080fe871\",                        [{\"hovertemplate\": \"Survived=0.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"showlegend\": true, \"type\": \"scattergl\", \"xaarisaris\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"WC\", \"\", \"\", \"\", \"\", \"WEP\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOTONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOPP\", \"\", \"\", \"\", \"\", \"\", \"WC\", \"SOTONOQ\", \"\", \"\", \"PC\", \"\", \"\", \"CA\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"A4\", \"\", \"\", \"\", \"\", \"STONO2\", \"SCPARIS\", \"C\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOTONO2\", \"SOPP\", \"\", \"\", \"CA\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CASOTON\", \"SOTONOQ\", \"\", \"\", \"WC\", \"\"], \"xaxis\": \"x\", \"y\": [\"Braund, Mr. Owen Harris\", \"Allen, Mr. William Henry\", \"Moran, Mr. James\", \"McCarthy, Mr. Timothy J\", \"Palsson, Master. Gosta Leonard\", \"Saundercock, Mr. William Henry\", \"Andersson, Mr. Anders Johan\", \"Vestrom, Miss. Hulda Amanda Adolfina\", \"Rice, Master. Eugene\", \"Vander Planke, Mrs. Julius (Emelia Maria Vandemoortele)\", \"Fynney, Mr. Joseph J\", \"Palsson, Miss. Torborg Danira\", \"Emir, Mr. Farred Chehab\", \"Fortune, Mr. Charles Alexander\", \"Todoroff, Mr. Lalio\", \"Uruchurtu, Don. Manuel E\", \"Wheadon, Mr. Edward H\", \"Meyer, Mr. Edgar Joseph\", \"Holverson, Mr. Alexander Oskar\", \"Cann, Mr. Ernest Charles\", \"Vander Planke, Miss. Augusta Maria\", \"Ahlin, Mrs. Johan (Johanna Persdotter Larsson)\", \"Turpin, Mrs. William John Robert (Dorothy Ann Wonnacott)\", \"Kraeff, Mr. Theodor\", \"Rogers, Mr. William John\", \"Lennon, Mr. Denis\", \"Samaan, Mr. Youssef\", \"Arnold-Franchi, Mrs. Josef (Josefine Franchi)\", \"Panula, Master. Juha Niilo\", \"Nosworthy, Mr. Richard Cater\", \"Ostby, Mr. Engelhart Cornelius\", \"Novel, Mr. Mansouer\", \"Goodwin, Master. William Frederick\", \"Sirayanian, Mr. Orsen\", \"Harris, Mr. Henry Birkhardt\", \"Skoog, Master. Harald\", \"Stewart, Mr. Albert A\", \"Crease, Mr. Ernest James\", \"Kink, Mr. Vincenz\", \"Jenkin, Mr. Stephen Curnow\", \"Goodwin, Miss. Lillian Amy\", \"Hood, Mr. Ambrose Jr\", \"Chronopoulos, Mr. Apostolos\", \"Moen, Mr. Sigurd Hansen\", \"Staneff, Mr. Ivan\", \"Moutal, Mr. Rahamin Haim\", \"Waelens, Mr. Achille\", \"Carrau, Mr. Francisco M\", \"Ford, Mr. William Neal\", \"Slocovski, Mr. Selman Francis\", \"Celotti, Mr. Francesco\", \"Christmann, Mr. Emil\", \"Andreasson, Mr. Paul Edvin\", \"Chaffee, Mr. Herbert Fuller\", \"Dean, Mr. Bertram Frank\", \"Coxon, Mr. Daniel\", \"Shorney, Mr. Charles Joseph\", \"Goldschmidt, Mr. George B\", \"Kantor, Mr. Sinai\", \"Petranec, Miss. Matilda\", \"Petroff, Mr. Pastcho (\\\"Pentcho\\\")\", \"White, Mr. Richard Frasar\", \"Johansson, Mr. Gustaf Joel\", \"Gustafsson, Mr. Anders Vilhelm\", \"Mionoff, Mr. Stoytcho\", \"Rekic, Mr. Tido\", \"Porter, Mr. Walter Chamberlain\", \"Zabour, Miss. Hileni\", \"Barton, Mr. David John\", \"Jussila, Miss. Katriina\", \"Attalah, Miss. Malake\", \"Pekoniemi, Mr. Edvard\", \"Connors, Mr. Patrick\", \"Turpin, Mr. William John Robert\", \"Baxter, Mr. Quigg Edmond\", \"Andersson, Miss. Ellis Anna Maria\", \"Hickman, Mr. Stanley George\", \"Moore, Mr. Leonard Charles\", \"Nasser, Mr. Nicholas\", \"White, Mr. Percival Wayland\", \"McMahon, Mr. Martin\", \"Ekstrom, Mr. Johan\", \"Drazenoic, Mr. Jozef\", \"Coelho, Mr. Domingos Fernandeo\", \"Robins, Mrs. Alexander A (Grace Charity Laury)\", \"Sobey, Mr. Samuel James Hayden\", \"Richard, Mr. Emile\", \"Futrelle, Mr. Jacques Heath\", \"Osen, Mr. Olaf Elon\", \"Giglio, Mr. Victor\", \"Boulos, Mrs. Joseph (Sultana)\", \"Burke, Mr. Jeremiah\", \"Andrew, Mr. Edgardo Samuel\", \"Nicholls, Mr. Joseph Charles\", \"Ford, Miss. Robina Maggie \\\"Ruby\\\"\", \"Navratil, Mr. Michel (\\\"Louis M Hoffman\\\")\", \"Byles, Rev. Thomas Roussel Davids\", \"Bateman, Rev. Robert James\", \"Meo, Mr. Alfonzo\", \"van Billiard, Mr. Austin Blyler\", \"Olsen, Mr. Ole Martin\", \"Williams, Mr. Charles Duane\", \"Corn, Mr. Harry\", \"Smiljanic, Mr. Mile\", \"Sage, Master. Thomas Henry\", \"Cribb, Mr. John Hatfield\", \"Bengtsson, Mr. John Viktor\", \"Calic, Mr. Jovo\", \"Panula, Master. Eino Viljami\", \"Skoog, Mrs. William (Anna Bernhardina Karlsson)\", \"Baumann, Mr. John D\", \"Ling, Mr. Lee\", \"Van der hoef, Mr. Wyckoff\", \"Rice, Master. Arthur\", \"Sivola, Mr. Antti Wilhelm\", \"Smith, Mr. James Clinch\", \"Klasen, Mr. Klas Albin\", \"Lefebre, Master. Henry Forbes\", \"Isham, Miss. Ann Elizabeth\", \"Hale, Mr. Reginald\", \"Leonard, Mr. Lionel\", \"Sage, Miss. Constance Gladys\", \"Pernot, Mr. Rene\", \"Asplund, Master. Clarence Gustaf Hugo\", \"Rood, Mr. Hugh Roscoe\", \"Bourke, Mr. John\", \"Turcin, Mr. Stjepan\", \"Carbines, Mr. William\", \"Mernagh, Mr. Robert\", \"Olsen, Mr. Karl Siegwart Andreas\", \"Yrois, Miss. Henriette (\\\"Mrs Harbeck\\\")\", \"Vande Walle, Mr. Nestor Cyriel\", \"Sage, Mr. Frederick\", \"Johanson, Mr. Jakob Alfred\", \"Youseff, Mr. Gerious\", \"Strom, Miss. Telma Matilda\", \"Backstrom, Mr. Karl Alfred\", \"Ali, Mr. Ahmed\", \"Perkin, Mr. John Henry\", \"Givard, Mr. Hans Kristensen\", \"Kiernan, Mr. Philip\", \"Jacobsohn, Mr. Sidney Samuel\", \"Harris, Mr. Walter\", \"Bracken, Mr. James H\", \"Green, Mr. George Henry\", \"Nenkoff, Mr. Christo\", \"Berglund, Mr. Karl Ivar Sven\", \"Lovell, Mr. John Hall (\\\"Henry\\\")\", \"Fahlstrom, Mr. Arne Jonas\", \"Lefebre, Miss. Mathilde\", \"Larsson, Mr. Bengt Edvin\", \"Sjostedt, Mr. Ernst Adolf\", \"Leyson, Mr. Robert William Norman\", \"Harknett, Miss. Alice Phoebe\", \"Hold, Mr. Stephen\", \"Pengelly, Mr. Frederick William\", \"Hunt, Mr. George Henry\", \"Zabour, Miss. Thamine\", \"Coleridge, Mr. Reginald Charles\", \"Maenpaa, Mr. Matti Alexanteri\", \"Attalah, Mr. Sleiman\", \"Minahan, Dr. William Edward\", \"Lindahl, Miss. Agda Thorilda Viktoria\", \"Carter, Rev. Ernest Courtenay\", \"Reed, Mr. James George\", \"Strom, Mrs. Wilhelm (Elna Matilda Persson)\", \"Stead, Mr. William Thomas\", \"Lobb, Mr. William Arthur\", \"Rosblom, Mrs. Viktor (Helena Wilhelmina)\", \"Smith, Mr. Thomas\", \"Taussig, Mr. Emil\", \"Harrison, Mr. William\", \"Henry, Miss. Delia\", \"Reeves, Mr. David\", \"Panula, Mr. Ernesti Arvid\", \"Cairns, Mr. Alexander\", \"Natsch, Mr. Charles H\", \"Lindblom, Miss. Augusta Charlotta\", \"Parkes, Mr. Francis \\\"Frank\\\"\", \"Rice, Master. Eric\", \"Duane, Mr. Frank\", \"Olsson, Mr. Nils Johan Goransson\", \"de Pelsmaeker, Mr. Alfons\", \"Smith, Mr. Richard William\", \"Stankovic, Mr. Ivan\", \"Naidenoff, Mr. Penko\", \"Levy, Mr. Rene Jacques\", \"Haas, Miss. Aloisia\", \"Mineff, Mr. Ivan\", \"Lewy, Mr. Ervin G\", \"Hanna, Mr. Mansour\", \"Allison, Miss. Helen Loraine\", \"Johnson, Mr. William Cahoone Jr\", \"Williams, Mr. Howard Hugh \\\"Harry\\\"\", \"Abelson, Mr. Samuel\", \"Lahtinen, Mrs. William (Anna Sylfven)\", \"Hendekovic, Mr. Ignjac\", \"Hart, Mr. Benjamin\", \"Moraweck, Dr. Ernest\", \"Dennis, Mr. Samuel\", \"Danoff, Mr. Yoto\", \"Sage, Mr. George John Jr\", \"Nysveen, Mr. Johan Hansen\", \"Partner, Mr. Austen\", \"Graham, Mr. George Edward\", \"Vander Planke, Mr. Leo Edmondus\", \"Denkoff, Mr. Mitto\", \"Pears, Mr. Thomas Clinton\", \"Blackwell, Mr. Stephen Weart\", \"Collander, Mr. Erik Gustaf\", \"Sedgwick, Mr. Charles Frederick Waddington\", \"Fox, Mr. Stanley Hubert\", \"Dimic, Mr. Jovan\", \"Odahl, Mr. Nils Martin\", \"Williams-Lambert, Mr. Fletcher Fellows\", \"Elias, Mr. Tannous\", \"Arnold-Franchi, Mr. Josef\", \"Yousif, Mr. Wazli\", \"Vanden Steen, Mr. Leo Peter\", \"Funk, Miss. Annie Clemmer\", \"Skoog, Mr. Wilhelm\", \"del Carlo, Mr. Sebastiano\", \"Barbara, Mrs. (Catherine David)\", \"Asim, Mr. Adola\", \"O'Brien, Mr. Thomas\", \"Adahl, Mr. Mauritz Nils Martin\", \"Wiklund, Mr. Jakob Alfred\", \"Beavan, Mr. William Thomas\", \"Ringhini, Mr. Sante\", \"Palsson, Miss. Stina Viola\", \"Widener, Mr. Harry Elkins\", \"Betros, Mr. Tannous\", \"Gustafsson, Mr. Karl Gideon\", \"Tikkanen, Mr. Juho\", \"Plotcharsky, Mr. Vasil\", \"Davies, Mr. Charles Henry\", \"Goodwin, Master. Sidney Leonard\", \"Sadlier, Mr. Matthew\", \"Gustafsson, Mr. Johan Birger\", \"Johansson, Mr. Erik\", \"Olsson, Miss. Elina\", \"McKane, Mr. Peter David\", \"Pain, Dr. Alfred\", \"Adams, Mr. John\", \"Jussila, Miss. Mari Aina\", \"Hakkarainen, Mr. Pekka Pietari\", \"Oreskovic, Miss. Marija\", \"Gale, Mr. Shadrach\", \"Widegren, Mr. Carl/Charles Peter\", \"Birkeland, Mr. Hans Martin Monsen\", \"Lefebre, Miss. Ida\", \"Sdycoff, Mr. Todor\", \"Hart, Mr. Henry\", \"Cunningham, Mr. Alfred Fleming\", \"Meek, Mrs. Thomas (Annie Louise Rowley)\", \"Matthews, Mr. William John\", \"Van Impe, Miss. Catharina\", \"Gheorgheff, Mr. Stanio\", \"Charters, Mr. David\", \"Zimmerman, Mr. Leo\", \"Danbom, Mrs. Ernst Gilbert (Anna Sigrid Maria Brogren)\", \"Rosblom, Mr. Viktor Richard\", \"Wiseman, Mr. Phillippe\", \"Flynn, Mr. James\", \"Kallio, Mr. Nikolai Erland\", \"Silvey, Mr. William Baird\", \"Ford, Miss. Doolina Margaret \\\"Daisy\\\"\", \"Fortune, Mr. Mark\", \"Kvillner, Mr. Johan Henrik Johannesson\", \"Hampe, Mr. Leon\", \"Petterson, Mr. Johan Emil\", \"West, Mr. Edwy Arthur\", \"Hagland, Mr. Ingvald Olai Olsen\", \"Foreman, Mr. Benjamin Laventall\", \"Peduzzi, Mr. Joseph\", \"Millet, Mr. Francis Davis\", \"O'Connor, Mr. Maurice\", \"Morley, Mr. William\", \"Gee, Mr. Arthur H\", \"Milling, Mr. Jacob Christian\", \"Maisner, Mr. Simon\", \"Goncalves, Mr. Manuel Estanslas\", \"Campbell, Mr. William\", \"Smart, Mr. John Montgomery\", \"Scanlan, Mr. James\", \"Keefe, Mr. Arthur\", \"Cacic, Mr. Luka\", \"Strandberg, Miss. Ida Sofia\", \"Clifford, Mr. George Quincy\", \"Renouf, Mr. Peter Henry\", \"Braund, Mr. Lewis Richard\", \"Karlsson, Mr. Nils August\", \"Goodwin, Master. Harold Victor\", \"Frost, Mr. Anthony Wood \\\"Archie\\\"\", \"Rouse, Mr. Richard Henry\", \"Lefebre, Miss. Jeannie\", \"Kent, Mr. Edward Austin\", \"Somerton, Mr. Francis William\", \"Hagland, Mr. Konrad Mathias Reiersen\", \"Windelov, Mr. Einar\", \"Molson, Mr. Harry Markland\", \"Artagaveytia, Mr. Ramon\", \"Stanley, Mr. Edward Roland\", \"Yousseff, Mr. Gerious\", \"Shellard, Mr. Frederick William\", \"Allison, Mrs. Hudson J C (Bessie Waldo Daniels)\", \"Svensson, Mr. Olof\", \"Calic, Mr. Petar\", \"Canavan, Miss. Mary\", \"O'Sullivan, Miss. Bridget Mary\", \"Laitinen, Miss. Kristina Sofia\", \"Penasco y Castellana, Mr. Victor de Satode\", \"Olsen, Mr. Henry Margido\", \"Webber, Mr. James\", \"Coleff, Mr. Satio\", \"Walker, Mr. William Anderson\", \"Ryan, Mr. Patrick\", \"Pavlovic, Mr. Stefo\", \"Vovk, Mr. Janko\", \"Lahoud, Mr. Sarkis\", \"Kassem, Mr. Fared\", \"Farrell, Mr. James\", \"Farthing, Mr. John\", \"Salonen, Mr. Johan Werner\", \"Hocking, Mr. Richard George\", \"Toufik, Mr. Nakli\", \"Elias, Mr. Joseph Jr\", \"Cacic, Miss. Marija\", \"Butt, Major. Archibald Willingham\", \"Risien, Mr. Samuel Beard\", \"Andersson, Miss. Ingeborg Constanzia\", \"Andersson, Miss. Sigrid Elisabeth\", \"Douglas, Mr. Walter Donald\", \"Nicholson, Mr. Arthur Ernest\", \"Goldsmith, Mr. Frank John\", \"Sharp, Mr. Percival James R\", \"O'Brien, Mr. Timothy\", \"Wright, Mr. George\", \"Robbins, Mr. Victor\", \"Morrow, Mr. Thomas Rowan\", \"Sivic, Mr. Husein\", \"Norman, Mr. Robert Douglas\", \"Simmons, Mr. John\", \"Meanwell, Miss. (Marion Ogden)\", \"Davies, Mr. Alfred J\", \"Stoytcheff, Mr. Ilia\", \"Palsson, Mrs. Nils (Alma Cornelia Berglund)\", \"Doharr, Mr. Tannous\", \"Rush, Mr. Alfred George John\", \"Patchett, Mr. George\", \"Caram, Mrs. Joseph (Maria Elias)\", \"Downton, Mr. William James\", \"Ross, Mr. John Hugo\", \"Paulner, Mr. Uscher\", \"Jarvis, Mr. John Denzil\", \"Gilinski, Mr. Eliezer\", \"Murdlin, Mr. Joseph\", \"Rintamaki, Mr. Matti\", \"Elsbury, Mr. William James\", \"Bourke, Miss. Mary\", \"Chapman, Mr. John Henry\", \"Van Impe, Mr. Jean Baptiste\", \"Johnson, Mr. Alfred\", \"Boulos, Mr. Hanna\", \"Slabenoff, Mr. Petco\", \"Harrington, Mr. Charles H\", \"Torber, Mr. Ernst William\", \"Lindell, Mr. Edvard Bengtsson\", \"Karaic, Mr. Milan\", \"Andersson, Mrs. Anders Johan (Alfrida Konstantia Brogren)\", \"Jardin, Mr. Jose Neto\", \"Horgan, Mr. John\", \"Brocklebank, Mr. William Alfred\", \"Danbom, Mr. Ernst Gilbert\", \"Lobb, Mrs. William Arthur (Cordelia K Stanlick)\", \"Gavey, Mr. Lawrence\", \"Yasbeck, Mr. Antoni\", \"Hansen, Mr. Henry Damsgaard\", \"Bowen, Mr. David John \\\"Dai\\\"\", \"Sutton, Mr. Frederick\", \"Kirkland, Rev. Charles Leonard\", \"Bostandyeff, Mr. Guentcho\", \"O'Connell, Mr. Patrick D\", \"Lundahl, Mr. Johan Svensson\", \"Parr, Mr. William Henry Marsh\", \"Skoog, Miss. Mabel\", \"Leinonen, Mr. Antti Gustaf\", \"Collyer, Mr. Harvey\", \"Panula, Mrs. Juha (Maria Emilia Ojala)\", \"Thorneycroft, Mr. Percival\", \"Jensen, Mr. Hans Peder\", \"Skoog, Miss. Margit Elizabeth\", \"Cor, Mr. Liudevit\", \"Willey, Mr. Edward\", \"Mitkoff, Mr. Mito\", \"Kalvik, Mr. Johannes Halvorsen\", \"Hegarty, Miss. Hanora \\\"Nora\\\"\", \"Hickman, Mr. Leonard Mark\", \"Radeff, Mr. Alexander\", \"Bourke, Mrs. John (Catherine)\", \"Eitemiller, Mr. George Floyd\", \"Newell, Mr. Arthur Webster\", \"Badt, Mr. Mohamed\", \"Colley, Mr. Edward Pomeroy\", \"Coleff, Mr. Peju\", \"Hickman, Mr. Lewis\", \"Butler, Mr. Reginald Fenton\", \"Rommetvedt, Mr. Knud Paust\", \"Cook, Mr. Jacob\", \"Davidson, Mr. Thornton\", \"Mitchell, Mr. Henry Michael\", \"Watson, Mr. Ennis Hastings\", \"Edvardsson, Mr. Gustaf Hjalmar\", \"Sawyer, Mr. Frederick Charles\", \"Goodwin, Mrs. Frederick (Augusta Tyler)\", \"Peters, Miss. Katie\", \"Olsvigen, Mr. Thor Anderson\", \"Goodwin, Mr. Charles Edward\", \"Brown, Mr. Thomas William Solomon\", \"Laroche, Mr. Joseph Philippe Lemercier\", \"Panula, Mr. Jaako Arnold\", \"Dakic, Mr. Branko\", \"Fischer, Mr. Eberhard Thelander\", \"Saad, Mr. Khalil\", \"Weir, Col. John\", \"Chapman, Mr. Charles Henry\", \"Kelly, Mr. James\", \"Thayer, Mr. John Borland\", \"Humblen, Mr. Adolf Mathias Nicolai Olsen\", \"Barbara, Miss. Saiide\", \"Gallagher, Mr. Martin\", \"Hansen, Mr. Henrik Juul\", \"Morley, Mr. Henry Samuel (\\\"Mr Henry Marshall\\\")\", \"Klaber, Mr. Herman\", \"Larsson, Mr. August Viktor\", \"Greenberg, Mr. Samuel\", \"Soholt, Mr. Peter Andreas Lauritz Andersen\", \"McEvoy, Mr. Michael\", \"Johnson, Mr. Malkolm Joackim\", \"Jensen, Mr. Svend Lauritz\", \"Gillespie, Mr. William Henry\", \"Hodges, Mr. Henry Price\", \"Oreskovic, Mr. Luka\", \"Bryhl, Mr. Kurt Arnold Gottfrid\", \"Ilmakangas, Miss. Pieta Sofia\", \"Hassan, Mr. Houssein G N\", \"Knight, Mr. Robert J\", \"Berriman, Mr. William John\", \"Troupiansky, Mr. Moses Aaron\", \"Williams, Mr. Leslie\", \"Ford, Mrs. Edward (Margaret Ann Watson)\", \"Ivanoff, Mr. Kanio\", \"Nankoff, Mr. Minko\", \"Cavendish, Mr. Tyrell William\", \"McNamee, Mr. Neal\", \"Crosby, Capt. Edward Gifford\", \"Abbott, Mr. Rossmore Edward\", \"Marvin, Mr. Daniel Warner\", \"Connaghton, Mr. Michael\", \"Vande Velde, Mr. Johannes Joseph\", \"Jonkoff, Mr. Lalio\", \"Carlsson, Mr. August Sigfrid\", \"Bailey, Mr. Percy Andrew\", \"Theobald, Mr. Thomas Leonard\", \"Garfirth, Mr. John\", \"Nirva, Mr. Iisakki Antino Aijo\", \"Eklund, Mr. Hans Linus\", \"Brewe, Dr. Arthur Jackson\", \"Mangan, Miss. Mary\", \"Moran, Mr. Daniel J\", \"Gronnestad, Mr. Daniel Danielsen\", \"Lievens, Mr. Rene Aime\", \"Jensen, Mr. Niels Peder\", \"Mack, Mrs. (Mary)\", \"Elias, Mr. Dibo\", \"Myhrman, Mr. Pehr Fabian Oliver Malkolm\", \"Tobin, Mr. Roger\", \"Kilgannon, Mr. Thomas J\", \"Long, Mr. Milton Clyde\", \"Johnston, Mr. Andrew G\", \"Ali, Mr. William\", \"Harmer, Mr. Abraham (David Lishin)\", \"Rice, Master. George Hugh\", \"Guggenheim, Mr. Benjamin\", \"Keane, Mr. Andrew \\\"Andy\\\"\", \"Gaskell, Mr. Alfred\", \"Sage, Miss. Stella Anna\", \"Hoyt, Mr. William Fisher\", \"Dantcheff, Mr. Ristiu\", \"Otter, Mr. Richard\", \"Ibrahim Shawah, Mr. Yousseff\", \"Van Impe, Mrs. Jean Baptiste (Rosalie Paula Govaert)\", \"Ponesell, Mr. Martin\", \"Johansson, Mr. Karl Johan\", \"Andrews, Mr. Thomas Jr\", \"Pettersson, Miss. Ellen Natalia\", \"Meyer, Mr. August\", \"Alexander, Mr. William\", \"Lester, Mr. James\", \"Slemen, Mr. Richard James\", \"Andersson, Miss. Ebba Iris Alfrida\", \"Tomlin, Mr. Ernest Portage\", \"Fry, Mr. Richard\", \"Heininen, Miss. Wendla Maria\", \"Mallet, Mr. Albert\", \"Holm, Mr. John Fredrik Alexander\", \"Skoog, Master. Karl Thorsten\", \"Reuchlin, Jonkheer. John George\", \"Panula, Master. Urho Abraham\", \"Flynn, Mr. John\", \"Lam, Mr. Len\", \"Saad, Mr. Amin\", \"Augustsson, Mr. Albert\", \"Allum, Mr. Owen George\", \"Pasic, Mr. Jakob\", \"Sirota, Mr. Maurice\", \"Alhomaki, Mr. Ilmari Rudolf\", \"Mudd, Mr. Thomas Charles\", \"Lemberopolous, Mr. Peter L\", \"Culumovic, Mr. Jeso\", \"Abbing, Mr. Anthony\", \"Sage, Mr. Douglas Bullen\", \"Markoff, Mr. Marin\", \"Harper, Rev. John\", \"Andersson, Master. Sigvard Harald Elias\", \"Svensson, Mr. Johan\", \"Boulos, Miss. Nourelain\", \"Carter, Mrs. Ernest Courtenay (Lilian Hughes)\", \"Razi, Mr. Raihed\", \"Hansen, Mr. Claus Peter\", \"Giles, Mr. Frederick Edward\", \"Sage, Miss. Dorothy Edith \\\"Dolly\\\"\", \"Gill, Mr. John William\", \"Roebling, Mr. Washington Augustus II\", \"van Melkebeke, Mr. Philemon\", \"Balkic, Mr. Cerin\", \"Carlsson, Mr. Frans Olof\", \"Vander Cruyssen, Mr. Victor\", \"Gustafsson, Mr. Alfred Ossian\", \"Petroff, Mr. Nedelio\", \"Laleff, Mr. Kristo\", \"Markun, Mr. Johann\", \"Dahlberg, Miss. Gerda Ulrika\", \"Banfield, Mr. Frederick James\", \"Sutehall, Mr. Henry Jr\", \"Rice, Mrs. William (Margaret Norton)\", \"Montvila, Rev. Juozas\", \"Johnston, Miss. Catherine Helen \\\"Carrie\\\"\", \"Dooley, Mr. Patrick\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [\"PC\", \"STONO2\", \"\", \"\", \"\", \"PP\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"SCParisasle\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"CA\", \"\", \"\", \"\", \"WC\", \"\", \"\", \"FCC\", \"PC\", \"\", \"WEP\", \"\", \"\", \"SCPARIS\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SWPP\", \"\", \"PC\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"SCParis\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"PC\", \"\", \"CA\", \"\", \"\", \"PC\", \"STONO2\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"PC\", \"\", \"\", \"PC\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"PC\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"PPP\", \"\", \"\", \"\", \"\", \"\"], \"xaxis\": \"x\", \"y\": [\"Cumings, Mrs. John Bradley (Florence Briggs Thayer)\", \"Heikkinen, Miss. Laina\", \"Futrelle, Mrs. Jacques Heath (Lily May Peel)\", \"Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)\", \"Nasser, Mrs. Nicholas (Adele Achem)\", \"Sandstrom, Miss. Marguerite Rut\", \"Bonnell, Miss. Elizabeth\", \"Hewlett, Mrs. (Mary D Kingcome) \", \"Williams, Mr. Charles Eugene\", \"Masselmani, Mrs. Fatima\", \"Beesley, Mr. Lawrence\", \"McGowan, Miss. Anna \\\"Annie\\\"\", \"Sloper, Mr. William Thompson\", \"Asplund, Mrs. Carl Oscar (Selma Augusta Emilia Johansson)\", \"O'Dwyer, Miss. Ellen \\\"Nellie\\\"\", \"Spencer, Mrs. William Augustus (Marie Eugenie)\", \"Glynn, Miss. Mary Agatha\", \"Mamee, Mr. Hanna\", \"Nicola-Yarred, Miss. Jamila\", \"Laroche, Miss. Simonne Marie Anne Andree\", \"Devaney, Miss. Margaret Delia\", \"O'Driscoll, Miss. Bridget\", \"Harper, Mrs. Henry Sleeper (Myna Haxtun)\", \"Faunthorpe, Mrs. Lizzie (Elizabeth Anne Wilkinson)\", \"Woolner, Mr. Hugh\", \"Rugg, Miss. Emily\", \"West, Miss. Constance Mirium\", \"Icard, Miss. Amelie\", \"Moubarek, Master. Gerios\", \"Nye, Mrs. (Elizabeth Ramell)\", \"Andersson, Miss. Erna Alexandra\", \"Bing, Mr. Lee\", \"Caldwell, Master. Alden Gates\", \"Dowdell, Miss. Elizabeth\", \"Sheerlinck, Mr. Jan Baptist\", \"McDermott, Miss. Brigdet Delia\", \"Ilett, Miss. Bertha\", \"Backstrom, Mrs. Karl Alfred (Maria Mathilda Gustafsson)\", \"Fortune, Miss. Mabel Helen\", \"Greenfield, Mr. William Bertram\", \"Doling, Mrs. John T (Ada Julia Bone)\", \"Salkjelsvik, Miss. Anna Kristine\", \"Moss, Mr. Albert Johan\", \"Moran, Miss. Bertha\", \"Webber, Miss. Susan\", \"Nicola-Yarred, Master. Elias\", \"Madsen, Mr. Fridtjof Arne\", \"Peter, Miss. Anna\", \"Weisz, Mrs. Leopold (Mathilde Francoise Pede)\", \"Newsom, Miss. Helen Monypeny\", \"Nysten, Miss. Anna Sofia\", \"Hakkarainen, Mrs. Pekka Pietari (Elin Matilda Dolck)\", \"Andersson, Mr. August Edvard (\\\"Wennerstrom\\\")\", \"Pears, Mrs. Thomas (Edith Wearne)\", \"Gilnagh, Miss. Katherine \\\"Katie\\\"\", \"Watt, Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \"Goldsmith, Master. Frank John William \\\"Frankie\\\"\", \"Chibnall, Mrs. (Edith Martha Bowerman)\", \"Johnson, Miss. Eleanor Ileen\", \"Becker, Master. Richard F\", \"Kink-Heilmann, Miss. Luise Gretchen\", \"O'Brien, Mrs. Thomas (Johanna \\\"Hannah\\\" Godfrey)\", \"Romaine, Mr. Charles Hallace (\\\"Mr C Rolmane\\\")\", \"Pinsky, Mrs. (Rosa)\", \"Andersen-Jensen, Miss. Carla Christine Nielsine\", \"Navratil, Master. Michel M\", \"Brown, Mrs. James Joseph (Margaret Tobin)\", \"Lurette, Miss. Elise\", \"Madigan, Miss. Margaret \\\"Maggie\\\"\", \"Cohen, Mr. Gurshon \\\"Gus\\\"\", \"Albimona, Mr. Nassef Cassem\", \"Carr, Miss. Helen \\\"Ellen\\\"\", \"Blank, Mr. Henry\", \"Cameron, Miss. Clear Annie\", \"Newell, Miss. Madeleine\", \"Honkanen, Miss. Eliina\", \"Bazzani, Miss. Albina\", \"Sunderland, Mr. Victor Francis\", \"Hoyt, Mr. Frederick Maxfield\", \"Mellors, Mr. William John\", \"Harris, Mrs. Henry Birkhardt (Irene Wallach)\", \"Asplund, Miss. Lillian Gertrud\", \"Collyer, Miss. Marjorie \\\"Lottie\\\"\", \"Murphy, Miss. Katherine \\\"Kate\\\"\", \"Hamalainen, Mrs. William (Anna)\", \"Beckwith, Mr. Richard Leonard\", \"Touma, Mrs. Darwis (Hanne Youssef Razi)\", \"Thorne, Mrs. Gertrude Maybelle\", \"Cherry, Miss. Gladys\", \"Ward, Miss. Anna\", \"Parrish, Mrs. (Lutie Davis)\", \"Asplund, Master. Edvin Rojj Felix\", \"Persson, Mr. Ernst Ulrik\", \"Graham, Mrs. William Thompson (Edith Junkins)\", \"Bissette, Miss. Amelia\", \"Tornquist, Mr. William Henry\", \"Mellinger, Mrs. (Elizabeth Anne Maidment)\", \"Healy, Miss. Hanora \\\"Nora\\\"\", \"Andrews, Miss. Kornelia Theodosia\", \"Abbott, Mrs. Stanton (Rosa Hunt)\", \"Dorking, Mr. Edward Arthur\", \"de Mulder, Mr. Theodore\", \"Hosono, Mr. Masabumi\", \"Connolly, Miss. Kate\", \"Barber, Miss. Ellen \\\"Nellie\\\"\", \"Bishop, Mrs. Dickinson H (Helen Walton)\", \"Saalfeld, Mr. Adolphe\", \"Baxter, Mrs. James (Helene DeLaudeniere Chaput)\", \"Kelly, Miss. Anna Katherine \\\"Annie Kate\\\"\", \"McCoy, Mr. Bernard\", \"Keane, Miss. Nora A\", \"Allison, Master. Hudson Trevor\", \"Fleming, Miss. Margaret\", \"Penasco y Castellana, Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \"Francatelli, Miss. Laura Mabel\", \"Hays, Miss. Margaret Bechstein\", \"Ryerson, Miss. Emily Borie\", \"Nilsson, Miss. Helmina Josefina\", \"Kantor, Mrs. Sinai (Miriam Sternin)\", \"Wick, Miss. Mary Natalie\", \"Spedden, Mrs. Frederic Oakley (Margaretta Corning Stone)\", \"Slayter, Miss. Hilda Mary\", \"Caldwell, Mrs. Albert Francis (Sylvia Mae Harbaugh)\", \"Young, Miss. Marie Grice\", \"Ball, Mrs. (Ada E Hall)\", \"Goldsmith, Mrs. Frank John (Emily Alice Brown)\", \"Hippach, Miss. Jean Gertrude\", \"McCoy, Miss. Agnes\", \"Frauenthal, Mrs. Henry William (Clara Heinsheimer)\", \"Burns, Miss. Elizabeth Margaret\", \"Dahl, Mr. Karl Edwart\", \"Navratil, Master. Edmond Roger\", \"Fortune, Miss. Alice Elizabeth\", \"Brown, Miss. Amelia \\\"Mildred\\\"\", \"Smith, Miss. Marion Elsie\", \"Davison, Mrs. Thomas Henry (Mary E Finck)\", \"Coutts, Master. William Loch \\\"William\\\"\", \"Bowerman, Miss. Elsie Edith\", \"McGovern, Miss. Mary\", \"Mockler, Miss. Helen Mary \\\"Ellie\\\"\", \"Warren, Mrs. Frank Manley (Anna Sophia Atkinson)\", \"Moussa, Mrs. (Mantoura Boulos)\", \"Jermyn, Miss. Annie\", \"Aubart, Mme. Leontine Pauline\", \"Harder, Mr. George Achilles\", \"Meyer, Mrs. Edgar Joseph (Leila Saks)\", \"Landergren, Miss. Aurora Adelia\", \"Bidois, Miss. Rosalie\", \"Nakid, Miss. Maria (\\\"Mary\\\")\", \"Holverson, Mrs. Alexander Oskar (Mary Aline Towner)\", \"Buss, Miss. Kate\", \"Lehmann, Miss. Bertha\", \"Carter, Mr. William Ernest\", \"Jansson, Mr. Carl Olof\", \"Newell, Miss. Marjorie\", \"Sandstrom, Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \"Trout, Mrs. William H (Jessie L)\", \"Niskanen, Mr. Juha\", \"Richards, Master. William Rowe\", \"Minahan, Miss. Daisy E\", \"Sundman, Mr. Johan Julian\", \"Drew, Mrs. James Vivian (Lulu Thorne Christian)\", \"Silven, Miss. Lyyli Karoliina\", \"Clarke, Mrs. Charles V (Ada Maria Winfield)\", \"Phillips, Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\", \"Pickard, Mr. Berk (Berk Trembisky)\", \"Bjornstrom-Steffansson, Mr. Mauritz Hakan\", \"Thorneycroft, Mrs. Percival (Florence Kate White)\", \"Louch, Mrs. Charles Alexander (Alice Adelaide Slow)\", \"Carter, Miss. Lucile Polk\", \"Richards, Mrs. Sidney (Emily Hocking)\", \"Hart, Mrs. Benjamin (Esther Ada Bloomfield)\", \"Reynaldo, Ms. Encarnacion\", \"Johannesen-Bratthammer, Mr. Bernt\", \"Dodge, Master. Washington\", \"Mellinger, Miss. Madeleine Violet\", \"Seward, Mr. Frederic Kimber\", \"Baclini, Miss. Marie Catherine\", \"Peuchen, Major. Arthur Godfrey\", \"Goldenberg, Mr. Samuel L\", \"Jalsevac, Mr. Ivan\", \"Kenyon, Mrs. Frederick R (Marion)\", \"Toomey, Miss. Ellen\", \"Anderson, Mr. Harry\", \"Baclini, Miss. Helene Barbara\", \"West, Mrs. Edwy Arthur (Ada Mary Worth)\", \"Jerwan, Mrs. Amin S (Marie Marthe Thuillard)\", \"Hirvonen, Miss. Hildur E\", \"Turkula, Mrs. (Hedwig)\", \"Bishop, Mr. Dickinson H\", \"Hoyt, Mrs. Frederick Maxfield (Jane Anne Forby)\", \"Coutts, Master. Eden Leslie \\\"Neville\\\"\", \"Eustis, Miss. Elizabeth Mussey\", \"Maioni, Miss. Roberta\", \"Quick, Mrs. Frederick Charles (Jane Richards)\", \"Bradley, Mr. George (\\\"George Arthur Brayton\\\")\", \"Lang, Mr. Fang\", \"Daly, Mr. Eugene Patrick\", \"McGough, Mr. James Robert\", \"Rothschild, Mrs. Martin (Elizabeth L. Barrett)\", \"Lemore, Mrs. (Amelia Milley)\", \"Angle, Mrs. William A (Florence \\\"Mary\\\" Agnes Hughes)\", \"Perreault, Miss. Anne\", \"Hippach, Mrs. Louis Albert (Ida Sophia Fischer)\", \"Ridsdale, Miss. Lucy\", \"Quick, Miss. Phyllis May\", \"Peter, Mrs. Catherine (Catherine Rizk)\", \"Hart, Miss. Eva Miriam\", \"LeRoy, Miss. Bertha\", \"Frolicher, Miss. Hedwig Margaritha\", \"Crosby, Miss. Harriet R\", \"Beane, Mr. Edward\", \"Beane, Mrs. Edward (Ethel Clarke)\", \"Padro y Manent, Mr. Julian\", \"Davies, Master. John Morgan Jr\", \"Thayer, Mr. John Borland Jr\", \"Leeni, Mr. Fahim (\\\"Philip Zenni\\\")\", \"Ohman, Miss. Velin\", \"Duff Gordon, Lady. (Lucille Christiana Sutherland) (\\\"Mrs Morgan\\\")\", \"Taussig, Mrs. Emil (Tillie Mandelbaum)\", \"de Messemaeker, Mrs. Guillaume Joseph (Emma)\", \"Jonsson, Mr. Carl\", \"Harris, Mr. George\", \"Appleton, Mrs. Edward Dale (Charlotte Lamson)\", \"Flynn, Mr. John Irwin (\\\"Irving\\\")\", \"Kelly, Miss. Mary\", \"Garside, Miss. Ethel\", \"Silvey, Mrs. William Baird (Alice Munger)\", \"Jussila, Mr. Eiriik\", \"Christy, Miss. Julie Rachel\", \"Thayer, Mrs. John Borland (Marian Longstreth Morris)\", \"Taussig, Miss. Ruth\", \"Frolicher-Stehli, Mr. Maxmillian\", \"Stephenson, Mrs. Walter Bertram (Martha Eustis)\", \"Leitch, Miss. Jessie Wills\", \"Duff Gordon, Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \"Jacobsohn, Mrs. Sidney Samuel (Amy Frances Christy)\", \"Homer, Mr. Harry (\\\"Mr E Haven\\\")\", \"Daniel, Mr. Robert Williams\", \"Laroche, Mrs. Joseph (Juliette Marie Louise Lafargue)\", \"Shutes, Miss. Elizabeth W\", \"Murphy, Miss. Margaret Jane\", \"Herman, Miss. Alice\", \"Becker, Miss. Marion Louise\", \"Kimball, Mr. Edwin Nelson Jr\", \"Nakid, Mr. Sahid\", \"Longley, Miss. Gretchen Fiske\", \"Barkworth, Mr. Algernon Henry Wilson\", \"Stahelin-Maeglin, Dr. Max\", \"Davis, Miss. Mary\", \"Sagesser, Mlle. Emma\", \"Foo, Mr. Choong\", \"Baclini, Miss. Eugenie\", \"Harper, Mr. Henry Sleeper\", \"Simonius-Blumer, Col. Oberst Alfons\", \"Stanley, Miss. Amy Zillah Elsie\", \"Doling, Miss. Elsie\", \"O'Leary, Miss. Hanora \\\"Norah\\\"\", \"Frauenthal, Dr. Henry William\", \"Lindqvist, Mr. Eino William\", \"Taylor, Mrs. Elmer Zebley (Juliet Cummins Wright)\", \"Brown, Mrs. Thomas William Solomon (Elizabeth Catherine Ford)\", \"Wilhelms, Mr. Charles\", \"Turja, Miss. Anna Sofia\", \"Cardeza, Mr. Thomas Drake Martinez\", \"Hassab, Mr. Hammad\", \"Madill, Miss. Georgette Alexandra\", \"Dick, Mr. Albert Adrian\", \"Karun, Miss. Manca\", \"Lam, Mr. Ali\", \"Mullens, Miss. Katherine \\\"Katie\\\"\", \"Astor, Mrs. John Jacob (Madeleine Talmadge Force)\", \"Silverthorne, Mr. Spencer Victor\", \"Kelly, Mrs. Florence \\\"Fannie\\\"\", \"Calderhead, Mr. Edward Pennington\", \"Cleaver, Miss. Alice\", \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\", \"Mayne, Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \"Taylor, Mr. Elmer Zebley\", \"Endres, Miss. Caroline Louise\", \"Troutt, Miss. Edwina Celia \\\"Winnie\\\"\", \"Harper, Miss. Annie Jessie \\\"Nina\\\"\", \"Chambers, Mr. Norman Campbell\", \"Renouf, Mrs. Peter Henry (Lillian Jefferys)\", \"Mannion, Miss. Margareth\", \"Allen, Miss. Elisabeth Walton\", \"Lesurer, Mr. Gustave J\", \"Hawksford, Mr. Walter James\", \"Ryerson, Miss. Susan Parker \\\"Suzette\\\"\", \"Stranden, Mr. Juho\", \"Sinkkonen, Miss. Anna\", \"Wells, Miss. Joan\", \"Moor, Master. Meier\", \"Herman, Mrs. Samuel (Jane Laver)\", \"Hamalainen, Master. Viljo\", \"Rothes, the Countess. of (Lucy Noel Martha Dyer-Edwards)\", \"Barah, Mr. Hanna Assi\", \"Carter, Mrs. William Ernest (Lucile Polk)\", \"Hogeboom, Mrs. John C (Anna Andrews)\", \"Hocking, Mrs. Elizabeth (Eliza Needs)\", \"Emanuel, Miss. Virginia Ethel\", \"Robert, Mrs. Edward Scott (Elisabeth Walton McMillan)\", \"Ayoub, Miss. Banoura\", \"Dick, Mrs. Albert Adrian (Vera Gillespie)\", \"Sjoblom, Miss. Anna Sofia\", \"Dean, Master. Bertram Vere\", \"Leader, Dr. Alice (Farnham)\", \"Osman, Mrs. Mara\", \"Collyer, Mrs. Harvey (Charlotte Annie Tate)\", \"Carter, Master. William Thornton II\", \"Thomas, Master. Assad Alexander\", \"Hedman, Mr. Oskar Arvid\", \"Chambers, Mrs. Norman Campbell (Bertha Griggs)\", \"Hays, Mrs. Charles Melville (Clara Jennings Gregg)\", \"Lulic, Mr. Nikola\", \"Moor, Mrs. (Beila)\", \"Mallet, Master. Andre\", \"McCormack, Mr. Thomas Joseph\", \"Stone, Mrs. George Nelson (Martha Evelyn)\", \"Yasbeck, Mrs. Antoni (Selini Alexander)\", \"Richards, Master. George Sibley\", \"Compton, Miss. Sara Rebecca\", \"Chip, Mr. Chang\", \"Marechal, Mr. Pierre\", \"Serepeca, Miss. Augusta\", \"Goldenberg, Mrs. Samuel L (Edwiga Grabowska)\", \"Lines, Miss. Mary Conover\", \"Aks, Mrs. Sam (Leah Rosen)\", \"Wick, Mrs. George Dennick (Mary Hitchcock)\", \"Daly, Mr. Peter Denis \", \"Baclini, Mrs. Solomon (Latifa Qurban)\", \"Swift, Mrs. Frederick Joel (Margaret Welles Barron)\", \"Bystrom, Mrs. (Karolina)\", \"Duran y More, Miss. Asuncion\", \"Johnson, Master. Harold Theodor\", \"Beckwith, Mrs. Richard Leonard (Sallie Monypeny)\", \"Abelson, Mrs. Samuel (Hannah Wizosky)\", \"Najib, Miss. Adele Kiamie \\\"Jane\\\"\", \"Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)\", \"Shelley, Mrs. William (Imanita Parrish Hall)\", \"Graham, Miss. Margaret Edith\", \"Behr, Mr. Karl Howell\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"showlegend\": true, \"type\": \"scattergl\", \"xaris\", \"\", \"\", \"\", \"\", \"\", \"SOPP\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"LP\", \"\", \"PC\", \"AQ3\", \"PC\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"SOTONOQ\", \"\", \"PC\", \"\", \"\", \"CA\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"CA\", \"\", \"CA\", \"PC\", \"A5\", \"\", \"\", \"\", \"\", \"FCC\", \"PC\", \"FCC\", \"SOC\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"SCPARIS\", \"CA\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"CA\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"SOTONOQ\", \"\", \"\", \"\", \"A5\", \"PC\", \"SOTONOQ\", \"\", \"\"], \"xaxis\": \"x\", \"y\": [\"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"Myles, Mr. Thomas Francis\", \"Wirz, Mr. Albert\", \"Hirvonen, Mrs. Alexander (Helga E Lindqvist)\", \"Svensson, Mr. Johan Cervin\", \"Connolly, Miss. Kate\", \"Caldwell, Mr. Albert Francis\", \"Abrahim, Mrs. Joseph (Sophie Halaut Easu)\", \"Davies, Mr. John Samuel\", \"Ilieff, Mr. Ylio\", \"Jones, Mr. Charles Cresson\", \"Snyder, Mrs. John Pillsbury (Nelle Stevenson)\", \"Howard, Mr. Benjamin\", \"Chaffee, Mrs. Herbert Fuller (Carrie Constance Toogood)\", \"del Carlo, Mrs. Sebastiano (Argenia Genovesi)\", \"Keane, Mr. Daniel\", \"Assaf, Mr. Gerios\", \"Ilmakangas, Miss. Ida Livija\", \"Assaf Khalil, Mrs. Mariana (Miriam\\\")\\\"\", \"Rothschild, Mr. Martin\", \"Olsen, Master. Artur Karl\", \"Flegenheim, Mrs. Alfred (Antoinette)\", \"Williams, Mr. Richard Norris II\", \"Ryerson, Mrs. Arthur Larned (Emily Maria Borie)\", \"Robins, Mr. Alexander A\", \"Ostby, Miss. Helene Ragnhild\", \"Daher, Mr. Shedid\", \"Brady, Mr. John Bertram\", \"Samaan, Mr. Elias\", \"Louch, Mr. Charles Alexander\", \"Jefferys, Mr. Clifford Thomas\", \"Dean, Mrs. Bertram (Eva Georgetta Light)\", \"Johnston, Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \"Mock, Mr. Philipp Edmund\", \"Katavelas, Mr. Vassilios (Catavelas Vassilios\\\")\\\"\", \"Roth, Miss. Sarah A\", \"Cacic, Miss. Manda\", \"Sap, Mr. Julius\", \"Hee, Mr. Ling\", \"Karun, Mr. Franz\", \"Franklin, Mr. Thomas Parham\", \"Goldsmith, Mr. Nathan\", \"Corbett, Mrs. Walter H (Irene Colvin)\", \"Kimball, Mrs. Edwin Nelson Jr (Gertrude Parsons)\", \"Peltomaki, Mr. Nikolai Johannes\", \"Chevre, Mr. Paul Romaine\", \"Shaughnessy, Mr. Patrick\", \"Bucknell, Mrs. William Robert (Emma Eliza Ward)\", \"Coutts, Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \"Smith, Mr. Lucien Philip\", \"Pulbaum, Mr. Franz\", \"Hocking, Miss. Ellen Nellie\\\"\\\"\", \"Fortune, Miss. Ethel Flora\", \"Mangiavacchi, Mr. Serafino Emilio\", \"Rice, Master. Albert\", \"Cor, Mr. Bartol\", \"Abelseth, Mr. Olaus Jorgensen\", \"Davison, Mr. Thomas Henry\", \"Chaudanson, Miss. Victorine\", \"Dika, Mr. Mirko\", \"McCrae, Mr. Arthur Gordon\", \"Bjorklund, Mr. Ernst Herbert\", \"Bradley, Miss. Bridget Delia\", \"Ryerson, Master. John Borie\", \"Corey, Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \"Burns, Miss. Mary Delia\", \"Moore, Mr. Clarence Bloomfield\", \"Tucker, Mr. Gilbert Milligan Jr\", \"Fortune, Mrs. Mark (Mary McDougald)\", \"Mulvihill, Miss. Bertha E\", \"Minkoff, Mr. Lazar\", \"Nieminen, Miss. Manta Josefina\", \"Ovies y Rodriguez, Mr. Servando\", \"Geiger, Miss. Amalie\", \"Keeping, Mr. Edwin\", \"Miles, Mr. Frank\", \"Cornell, Mrs. Robert Clifford (Malvina Helen Lamson)\", \"Aldworth, Mr. Charles Augustus\", \"Doyle, Miss. Elizabeth\", \"Boulos, Master. Akar\", \"Straus, Mr. Isidor\", \"Case, Mr. Howard Brown\", \"Demetri, Mr. Marinko\", \"Lamb, Mr. John Joseph\", \"Khalil, Mr. Betros\", \"Barry, Miss. Julia\", \"Badman, Miss. Emily Louisa\", \"O'Donoghue, Ms. Bridget\", \"Wells, Master. Ralph Lester\", \"Dyker, Mrs. Adolf Fredrik (Anna Elisabeth Judith Andersson)\", \"Pedersen, Mr. Olaf\", \"Davidson, Mrs. Thornton (Orian Hays)\", \"Guest, Mr. Robert\", \"Birnbaum, Mr. Jakob\", \"Tenglin, Mr. Gunnar Isidor\", \"Cavendish, Mrs. Tyrell William (Julia Florence Siegel)\", \"Makinen, Mr. Kalle Edvard\", \"Braf, Miss. Elin Ester Maria\", \"Nancarrow, Mr. William Henry\", \"Stengel, Mrs. Charles Emil Henry (Annie May Morris)\", \"Weisz, Mr. Leopold\", \"Foley, Mr. William\", \"Johansson Palmquist, Mr. Oskar Leander\", \"Thomas, Mrs. Alexander (Thamine Thelma\\\")\\\"\", \"Holthen, Mr. Johan Martin\", \"Buckley, Mr. Daniel\", \"Ryan, Mr. Edward\", \"Willer, Mr. Aaron (Abi Weller\\\")\\\"\", \"Swane, Mr. George\", \"Stanton, Mr. Samuel Ward\", \"Shine, Miss. Ellen Natalia\", \"Evans, Miss. Edith Corse\", \"Buckley, Miss. Katherine\", \"Straus, Mrs. Isidor (Rosalie Ida Blun)\", \"Chronopoulos, Mr. Demetrios\", \"Thomas, Mr. John\", \"Sandstrom, Miss. Beatrice Irene\", \"Beattie, Mr. Thomson\", \"Chapman, Mrs. John Henry (Sara Elizabeth Lawry)\", \"Watt, Miss. Bertha J\", \"Kiernan, Mr. John\", \"Schabert, Mrs. Paul (Emma Mock)\", \"Carver, Mr. Alfred John\", \"Kennedy, Mr. John\", \"Cribb, Miss. Laura Alice\", \"Brobeck, Mr. Karl Rudolf\", \"McCoy, Miss. Alicia\", \"Bowenur, Mr. Solomon\", \"Petersen, Mr. Marius\", \"Spinner, Mr. Henry John\", \"Gracie, Col. Archibald IV\", \"Lefebre, Mrs. Frank (Frances)\", \"Thomas, Mr. Charles P\", \"Dintcheff, Mr. Valtcho\", \"Carlsson, Mr. Carl Robert\", \"Zakarian, Mr. Mapriededer\", \"Schmidt, Mr. August\", \"Drapkin, Miss. Jennie\", \"Goodwin, Mr. Charles Frederick\", \"Goodwin, Miss. Jessie Allis\", \"Daniels, Miss. Sarah\", \"Ryerson, Mr. Arthur Larned\", \"Beauchamp, Mr. Henry James\", \"Lindeberg-Lind, Mr. Erik Gustaf (Mr Edward Lingrey\\\")\\\"\", \"Vander Planke, Mr. Julius\", \"Hilliard, Mr. Herbert Henry\", \"Davies, Mr. Evan\", \"Crafton, Mr. John Bertram\", \"Lahtinen, Rev. William\", \"Earnshaw, Mrs. Boulton (Olive Potter)\", \"Matinoff, Mr. Nicola\", \"Storey, Mr. Thomas\", \"Klasen, Mrs. (Hulda Kristina Eugenia Lofqvist)\", \"Asplund, Master. Filip Oscar\", \"Duquemin, Mr. Joseph\", \"Bird, Miss. Ellen\", \"Lundin, Miss. Olga Elida\", \"Borebank, Mr. John James\", \"Peacock, Mrs. Benjamin (Edith Nile)\", \"Smyth, Miss. Julia\", \"Touma, Master. Georges Youssef\", \"Wright, Miss. Marion\", \"Pearce, Mr. Ernest\", \"Peruschitz, Rev. Joseph Maria\", \"Kink-Heilmann, Mrs. Anton (Luise Heilmann)\", \"Brandeis, Mr. Emil\", \"Ford, Mr. Edward Watson\", \"Cassebeer, Mrs. Henry Arthur Jr (Eleanor Genevieve Fosdick)\", \"Hellstrom, Miss. Hilda Maria\", \"Lithman, Mr. Simon\", \"Zakarian, Mr. Ortin\", \"Dyker, Mr. Adolf Fredrik\", \"Torfa, Mr. Assad\", \"Asplund, Mr. Carl Oscar Vilhelm Gustafsson\", \"Brown, Miss. Edith Eileen\", \"Sincock, Miss. Maude\", \"Stengel, Mr. Charles Emil Henry\", \"Becker, Mrs. Allen Oliver (Nellie E Baumgardner)\", \"Compton, Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \"McCrie, Mr. James Matthew\", \"Compton, Mr. Alexander Taylor Jr\", \"Marvin, Mrs. Daniel Warner (Mary Graham Carmichael Farquarson)\", \"Lane, Mr. Patrick\", \"Douglas, Mrs. Frederick Charles (Mary Helene Baxter)\", \"Maybery, Mr. Frank Hubert\", \"Phillips, Miss. Alice Frances Louisa\", \"Davies, Mr. Joseph\", \"Sage, Miss. Ada\", \"Veal, Mr. James\", \"Angle, Mr. William A\", \"Salomon, Mr. Abraham L\", \"van Billiard, Master. Walter John\", \"Lingane, Mr. John\", \"Drew, Master. Marshall Brines\", \"Karlsson, Mr. Julius Konrad Eugen\", \"Spedden, Master. Robert Douglas\", \"Nilsson, Miss. Berta Olivia\", \"Baimbrigge, Mr. Charles Robert\", \"Rasmussen, Mrs. (Lena Jacobsen Solvang)\", \"Murphy, Miss. Nora\", \"Danbom, Master. Gilbert Sigvard Emanuel\", \"Astor, Col. John Jacob\", \"Quick, Miss. Winifred Vera\", \"Andrew, Mr. Frank Thomas\", \"Omont, Mr. Alfred Fernand\", \"McGowan, Miss. Katherine\", \"Collett, Mr. Sidney C Stuart\", \"Rosenbaum, Miss. Edith Louise\", \"Delalic, Mr. Redjo\", \"Andersen, Mr. Albert Karvin\", \"Finoli, Mr. Luigi\", \"Deacon, Mr. Percy William\", \"Howard, Mrs. Benjamin (Ellen Truelove Arman)\", \"Andersson, Miss. Ida Augusta Margareta\", \"Head, Mr. Christopher\", \"Mahon, Miss. Bridget Delia\", \"Wick, Mr. George Dennick\", \"Widener, Mrs. George Dunton (Eleanor Elkins)\", \"Thomson, Mr. Alexander Morrison\", \"Duran y More, Miss. Florentina\", \"Reynolds, Mr. Harold J\", \"Cook, Mrs. (Selena Rogers)\", \"Karlsson, Mr. Einar Gervasius\", \"Candee, Mrs. Edward (Helen Churchill Hungerford)\", \"Moubarek, Mrs. George (Omine Amenia\\\" Alexander)\\\"\", \"Asplund, Mr. Johan Charles\", \"McNeill, Miss. Bridget\", \"Everett, Mr. Thomas James\", \"Hocking, Mr. Samuel James Metcalfe\", \"Sweet, Mr. George Frederick\", \"Willard, Miss. Constance\", \"Wiklund, Mr. Karl Johan\", \"Linehan, Mr. Michael\", \"Cumings, Mr. John Bradley\", \"Vendel, Mr. Olof Edvin\", \"Warren, Mr. Frank Manley\", \"Baccos, Mr. Raffull\", \"Hiltunen, Miss. Marta\", \"Douglas, Mrs. Walter Donald (Mahala Dutton)\", \"Lindstrom, Mrs. Carl Johan (Sigrid Posse)\", \"Christy, Mrs. (Alice Frances)\", \"Spedden, Mr. Frederic Oakley\", \"Hyman, Mr. Abraham\", \"Johnston, Master. William Arthur Willie\\\"\\\"\", \"Kenyon, Mr. Frederick R\", \"Karnes, Mrs. J Frank (Claire Bennett)\", \"Drew, Mr. James Vivian\", \"Hold, Mrs. Stephen (Annie Margaret Hill)\", \"Khalil, Mrs. Betros (Zahie Maria\\\" Elias)\\\"\", \"West, Miss. Barbara J\", \"Abrahamsson, Mr. Abraham August Johannes\", \"Clark, Mr. Walter Miller\", \"Salander, Mr. Karl Johan\", \"Wenzel, Mr. Linhart\", \"MacKay, Mr. George William\", \"Mahon, Mr. John\", \"Niklasson, Mr. Samuel\", \"Bentham, Miss. Lilian W\", \"Midtsjo, Mr. Karl Albert\", \"de Messemaeker, Mr. Guillaume Joseph\", \"Nilsson, Mr. August Ferdinand\", \"Wells, Mrs. Arthur Henry (Addie\\\" Dart Trevaskis)\\\"\", \"Klasen, Miss. Gertrud Emilia\", \"Portaluppi, Mr. Emilio Ilario Giuseppe\", \"Lyntakoff, Mr. Stanko\", \"Chisholm, Mr. Roderick Robert Crispin\", \"Warren, Mr. Charles William\", \"Howard, Miss. May Elizabeth\", \"Pokrnic, Mr. Mate\", \"McCaffry, Mr. Thomas Francis\", \"Fox, Mr. Patrick\", \"Clark, Mrs. Walter Miller (Virginia McDowell)\", \"Lennon, Miss. Mary\", \"Saade, Mr. Jean Nassr\", \"Bryhl, Miss. Dagmar Jenny Ingeborg \", \"Parker, Mr. Clifford Richard\", \"Faunthorpe, Mr. Harry\", \"Ware, Mr. John James\", \"Oxenham, Mr. Percy Thomas\", \"Oreskovic, Miss. Jelka\", \"Peacock, Master. Alfred Edward\", \"Fleming, Miss. Honora\", \"Touma, Miss. Maria Youssef\", \"Rosblom, Miss. Salli Helena\", \"Dennis, Mr. William\", \"Franklin, Mr. Charles (Charles Fardon)\", \"Snyder, Mr. John Pillsbury\", \"Mardirosian, Mr. Sarkis\", \"Ford, Mr. Arthur\", \"Rheims, Mr. George Alexander Lucien\", \"Daly, Miss. Margaret Marcella Maggie\\\"\\\"\", \"Nasr, Mr. Mustafa\", \"Dodge, Dr. Washington\", \"Wittevrongel, Mr. Camille\", \"Angheloff, Mr. Minko\", \"Laroche, Miss. Louise\", \"Samaan, Mr. Hanna\", \"Loring, Mr. Joseph Holland\", \"Johansson, Mr. Nils\", \"Olsson, Mr. Oscar Wilhelm\", \"Malachard, Mr. Noel\", \"Phillips, Mr. Escott Robert\", \"Pokrnic, Mr. Tome\", \"McCarthy, Miss. Catherine Katie\\\"\\\"\", \"Crosby, Mrs. Edward Gifford (Catherine Elizabeth Halstead)\", \"Allison, Mr. Hudson Joshua Creighton\", \"Aks, Master. Philip Frank\", \"Hays, Mr. Charles Melville\", \"Hansen, Mrs. Claus Peter (Jennie L Howard)\", \"Cacic, Mr. Jego Grga\", \"Vartanian, Mr. David\", \"Sadowitz, Mr. Harry\", \"Carr, Miss. Jeannie\", \"White, Mrs. John Stuart (Ella Holmes)\", \"Hagardon, Miss. Kate\", \"Spencer, Mr. William Augustus\", \"Rogers, Mr. Reginald Harry\", \"Jonsson, Mr. Nils Hilding\", \"Jefferys, Mr. Ernest Wilfred\", \"Andersson, Mr. Johan Samuel\", \"Krekorian, Mr. Neshan\", \"Nesson, Mr. Israel\", \"Rowe, Mr. Alfred G\", \"Kreuchen, Miss. Emilie\", \"Assam, Mr. Ali\", \"Becker, Miss. Ruth Elizabeth\", \"Rosenshine, Mr. George (Mr George Thorne\\\")\\\"\", \"Clarke, Mr. Charles Valentine\", \"Enander, Mr. Ingvar\", \"Davies, Mrs. John Morgan (Elizabeth Agnes Mary White) \", \"Dulles, Mr. William Crothers\", \"Thomas, Mr. Tannous\", \"Nakid, Mrs. Said (Waika Mary\\\" Mowad)\\\"\", \"Cor, Mr. Ivan\", \"Maguire, Mr. John Edward\", \"de Brito, Mr. Jose Joaquim\", \"Elias, Mr. Joseph\", \"Denbury, Mr. Herbert\", \"Betros, Master. Seman\", \"Fillbrook, Mr. Joseph Charles\", \"Lundstrom, Mr. Thure Edvin\", \"Sage, Mr. John George\", \"Cardeza, Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \"van Billiard, Master. James William\", \"Abelseth, Miss. Karen Marie\", \"Botsford, Mr. William Hull\", \"Whabee, Mrs. George Joseph (Shawneene Abi-Saab)\", \"Giles, Mr. Ralph\", \"Walcroft, Miss. Nellie\", \"Greenfield, Mrs. Leo David (Blanche Strouse)\", \"Stokes, Mr. Philip Joseph\", \"Dibden, Mr. William\", \"Herman, Mr. Samuel\", \"Dean, Miss. Elizabeth Gladys Millvina\\\"\\\"\", \"Julian, Mr. Henry Forbes\", \"Brown, Mrs. John Murray (Caroline Lane Lamson)\", \"Lockyer, Mr. Edward\", \"O'Keefe, Mr. Patrick\", \"Lindell, Mrs. Edvard Bengtsson (Elin Gerda Persson)\", \"Sage, Master. William Henry\", \"Mallet, Mrs. Albert (Antoinette Magnin)\", \"Ware, Mrs. John James (Florence Louise Long)\", \"Strilic, Mr. Ivan\", \"Harder, Mrs. George Achilles (Dorothy Annan)\", \"Sage, Mrs. John (Annie Bullen)\", \"Caram, Mr. Joseph\", \"Riihivouri, Miss. Susanna Juhantytar Sanni\\\"\\\"\", \"Gibson, Mrs. Leonard (Pauline C Boeson)\", \"Pallas y Castello, Mr. Emilio\", \"Giles, Mr. Edgar\", \"Wilson, Miss. Helen Alice\", \"Ismay, Mr. Joseph Bruce\", \"Harbeck, Mr. William H\", \"Dodge, Mrs. Washington (Ruth Vidaver)\", \"Bowen, Miss. Grace Scott\", \"Kink, Miss. Maria\", \"Cotterill, Mr. Henry Harry\\\"\\\"\", \"Hipkins, Mr. William Edward\", \"Asplund, Master. Carl Edgar\", \"O'Connor, Mr. Patrick\", \"Foley, Mr. Joseph\", \"Risien, Mrs. Samuel (Emma)\", \"McNamee, Mrs. Neal (Eileen O'Leary)\", \"Wheeler, Mr. Edwin Frederick\\\"\\\"\", \"Herman, Miss. Kate\", \"Aronsson, Mr. Ernst Axel Algot\", \"Ashby, Mr. John\", \"Canavan, Mr. Patrick\", \"Palsson, Master. Paul Folke\", \"Payne, Mr. Vivian Ponsonby\", \"Lines, Mrs. Ernest H (Elizabeth Lindsey James)\", \"Abbott, Master. Eugene Joseph\", \"Gilbert, Mr. William\", \"Kink-Heilmann, Mr. Anton\", \"Smith, Mrs. Lucien Philip (Mary Eloise Hughes)\", \"Colbert, Mr. Patrick\", \"Frolicher-Stehli, Mrs. Maxmillian (Margaretha Emerentia Stehli)\", \"Larsson-Rondberg, Mr. Edvard A\", \"Conlon, Mr. Thomas Henry\", \"Bonnell, Miss. Caroline\", \"Gale, Mr. Harry\", \"Gibson, Miss. Dorothy Winifred\", \"Carrau, Mr. Jose Pedro\", \"Frauenthal, Mr. Isaac Gerald\", \"Nourney, Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \"Ware, Mr. William Jeffery\", \"Widener, Mr. George Dunton\", \"Riordan, Miss. Johanna Hannah\\\"\\\"\", \"Peacock, Miss. Treasteall\", \"Naughton, Miss. Hannah\", \"Minahan, Mrs. William Edward (Lillian E Thorpe)\", \"Henriksson, Miss. Jenny Lovisa\", \"Spector, Mr. Woolf\", \"Oliva y Ocana, Dona. Fermina\", \"Saether, Mr. Simon Sivertsen\", \"Ware, Mr. Frederick\", \"Peter, Master. Michael J\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Ticket_p\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('7fce9260-136e-4bf5-824b-0373080fe871');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 0
            }
        },
        {
            "source": "We can see that some of prefixes appear only one time or only in train dataset. Lets clean them in order not to confuse our model.\n\nWe wil do it manualy - couse it is not much off them, and we gonna check them, if maby there is some sintax mistakes.",
            "mc_idx": 31,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "drop = [\"SP\", \"SOP\", \"Fa\", \"SCOW\", \"PPP\", \"AS\", \"CASOTON\", \"SWPP\", \"SCAHBasle\", \"SCA3\", \"STONOQ\", \"AQ4\", \"A2\", \"LP\", \"AQ3\", \"\"]\ndf = df.replace(drop, 'N/A')",
            "mc_idx": 32,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt= dfplt[dfplt[\"Ticket_p\"] != \"N/A\"]\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show()",
            "mc_idx": 33,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    17,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"ab8fe60e-d6d3-4297-a85f-406d236d04c8\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ab8fe60e-d6d3-4297-a85f-406d236d04c8\")) {                    Plotly.newPlot(                        \"ab8fe60e-d6d3-4297-a85f-406d236d04c8\",                        [{\"hovertemplate\": \"Survived=0.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"A5\", \"A5\", \"PC\", \"CA\", \"PC\", \"A5\", \"SCA4\", \"A4\", \"CA\", \"PC\", \"CA\", \"CA\", \"SOC\", \"WC\", \"SOTONOQ\", \"WEP\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"SOC\", \"A4\", \"SOTONOQ\", \"A5\", \"CA\", \"SCPARIS\", \"PC\", \"CA\", \"WC\", \"A5\", \"A5\", \"PC\", \"SOTONOQ\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"CA\", \"SCPARIS\", \"CA\", \"SOTONOQ\", \"A5\", \"WC\", \"PP\", \"A5\", \"CA\", \"WC\", \"WC\", \"STONO2\", \"A5\", \"CA\", \"PC\", \"SCParis\", \"PC\", \"A5\", \"FCC\", \"A5\", \"CA\", \"PC\", \"SCPARIS\", \"SOTONOQ\", \"C\", \"PC\", \"STONO2\", \"SOC\", \"CA\", \"STONO2\", \"A5\", \"A4\", \"STONO2\", \"WC\", \"CA\", \"CA\", \"A5\", \"SOTONOQ\", \"CA\", \"A5\", \"A5\", \"SOTONOQ\", \"PC\", \"A4\", \"CA\", \"PC\", \"C\", \"SOTONOQ\", \"PC\", \"PC\", \"PC\", \"SOTONOQ\", \"SOTONOQ\", \"A4\", \"A4\", \"A5\", \"STONO2\", \"A5\", \"SCAH\", \"SOTONOQ\", \"A5\", \"STONO2\", \"CA\", \"SOPP\", \"SOC\", \"SOC\", \"A5\", \"FC\", \"CA\", \"CA\", \"CA\", \"SCParis\", \"STONO2\", \"WC\", \"WEP\", \"CA\", \"SOTONO2\", \"SOPP\", \"WC\", \"SOTONOQ\", \"PC\", \"CA\", \"PC\", \"A4\", \"STONO2\", \"SCPARIS\", \"C\", \"SOTONO2\", \"SOPP\", \"CA\", \"CA\", \"CA\", \"PC\", \"SOTONOQ\", \"WC\"], \"xaxis\": \"x\", \"y\": [\"Braund, Mr. Owen Harris\", \"Saundercock, Mr. William Henry\", \"Uruchurtu, Don. Manuel E\", \"Wheadon, Mr. Edward H\", \"Meyer, Mr. Edgar Joseph\", \"Cann, Mr. Ernest Charles\", \"Rogers, Mr. William John\", \"Nosworthy, Mr. Richard Cater\", \"Goodwin, Master. William Frederick\", \"Stewart, Mr. Albert A\", \"Jenkin, Mr. Stephen Curnow\", \"Goodwin, Miss. Lillian Amy\", \"Hood, Mr. Ambrose Jr\", \"Ford, Mr. William Neal\", \"Slocovski, Mr. Selman Francis\", \"Chaffee, Mr. Herbert Fuller\", \"Dean, Mr. Bertram Frank\", \"Goldschmidt, Mr. George B\", \"Pekoniemi, Mr. Edvard\", \"Baxter, Mr. Quigg Edmond\", \"Hickman, Mr. Stanley George\", \"Moore, Mr. Leonard Charles\", \"Coelho, Mr. Domingos Fernandeo\", \"Robins, Mrs. Alexander A (Grace Charity Laury)\", \"Sobey, Mr. Samuel James Hayden\", \"Richard, Mr. Emile\", \"Giglio, Mr. Victor\", \"Nicholls, Mr. Joseph Charles\", \"Ford, Miss. Robina Maggie \\\"Ruby\\\"\", \"Meo, Mr. Alfonzo\", \"van Billiard, Mr. Austin Blyler\", \"Williams, Mr. Charles Duane\", \"Corn, Mr. Harry\", \"Sage, Master. Thomas Henry\", \"Baumann, Mr. John D\", \"Sivola, Mr. Antti Wilhelm\", \"Isham, Miss. Ann Elizabeth\", \"Sage, Miss. Constance Gladys\", \"Pernot, Mr. Rene\", \"Sage, Mr. Frederick\", \"Ali, Mr. Ahmed\", \"Perkin, Mr. John Henry\", \"Harris, Mr. Walter\", \"Berglund, Mr. Karl Ivar Sven\", \"Lovell, Mr. John Hall (\\\"Henry\\\")\", \"Leyson, Mr. Robert William Norman\", \"Harknett, Miss. Alice Phoebe\", \"Coleridge, Mr. Reginald Charles\", \"Maenpaa, Mr. Matti Alexanteri\", \"Lobb, Mr. William Arthur\", \"Reeves, Mr. David\", \"Natsch, Mr. Charles H\", \"Levy, Mr. Rene Jacques\", \"Lewy, Mr. Ervin G\", \"Williams, Mr. Howard Hugh \\\"Harry\\\"\", \"Hart, Mr. Benjamin\", \"Dennis, Mr. Samuel\", \"Sage, Mr. George John Jr\", \"Graham, Mr. George Edward\", \"del Carlo, Mr. Sebastiano\", \"Asim, Mr. Adola\", \"Adahl, Mr. Mauritz Nils Martin\", \"Ringhini, Mr. Sante\", \"Tikkanen, Mr. Juho\", \"Davies, Mr. Charles Henry\", \"Goodwin, Master. Sidney Leonard\", \"Hakkarainen, Mr. Pekka Pietari\", \"Charters, Mr. David\", \"Wiseman, Mr. Phillippe\", \"Kallio, Mr. Nikolai Erland\", \"Ford, Miss. Doolina Margaret \\\"Daisy\\\"\", \"Kvillner, Mr. Johan Henrik Johannesson\", \"West, Mr. Edwy Arthur\", \"Peduzzi, Mr. Joseph\", \"Goncalves, Mr. Manuel Estanslas\", \"Goodwin, Master. Harold Victor\", \"Rouse, Mr. Richard Henry\", \"Somerton, Mr. Francis William\", \"Windelov, Mr. Einar\", \"Artagaveytia, Mr. Ramon\", \"Stanley, Mr. Edward Roland\", \"Shellard, Mr. Frederick William\", \"Penasco y Castellana, Mr. Victor de Satode\", \"Olsen, Mr. Henry Margido\", \"Webber, Mr. James\", \"Farthing, Mr. John\", \"Douglas, Mr. Walter Donald\", \"Robbins, Mr. Victor\", \"Simmons, Mr. John\", \"Meanwell, Miss. (Marion Ogden)\", \"Davies, Mr. Alfred J\", \"Rush, Mr. Alfred George John\", \"Murdlin, Mr. Joseph\", \"Rintamaki, Mr. Matti\", \"Elsbury, Mr. William James\", \"Chapman, Mr. John Henry\", \"Jardin, Mr. Jose Neto\", \"Lobb, Mrs. William Arthur (Cordelia K Stanlick)\", \"Leinonen, Mr. Antti Gustaf\", \"Collyer, Mr. Harvey\", \"Willey, Mr. Edward\", \"Hickman, Mr. Leonard Mark\", \"Hickman, Mr. Lewis\", \"Cook, Mr. Jacob\", \"Davidson, Mr. Thornton\", \"Mitchell, Mr. Henry Michael\", \"Goodwin, Mrs. Frederick (Augusta Tyler)\", \"Goodwin, Mr. Charles Edward\", \"Laroche, Mr. Joseph Philippe Lemercier\", \"Ilmakangas, Miss. Pieta Sofia\", \"Ford, Mrs. Edward (Margaret Ann Watson)\", \"Crosby, Capt. Edward Gifford\", \"Abbott, Mr. Rossmore Edward\", \"Nirva, Mr. Iisakki Antino Aijo\", \"Mack, Mrs. (Mary)\", \"Johnston, Mr. Andrew G\", \"Ali, Mr. William\", \"Guggenheim, Mr. Benjamin\", \"Sage, Miss. Stella Anna\", \"Hoyt, Mr. William Fisher\", \"Lester, Mr. James\", \"Heininen, Miss. Wendla Maria\", \"Mallet, Mr. Albert\", \"Holm, Mr. John Fredrik Alexander\", \"Alhomaki, Mr. Ilmari Rudolf\", \"Mudd, Mr. Thomas Charles\", \"Abbing, Mr. Anthony\", \"Sage, Mr. Douglas Bullen\", \"Sage, Miss. Dorothy Edith \\\"Dolly\\\"\", \"Roebling, Mr. Washington Augustus II\", \"Sutehall, Mr. Henry Jr\", \"Johnston, Miss. Catherine Helen \\\"Carrie\\\"\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"PC\", \"STONO2\", \"PP\", \"PC\", \"SCParis\", \"PC\", \"CA\", \"CA\", \"CA\", \"SOC\", \"PC\", \"C\", \"STONO2\", \"CA\", \"PC\", \"PC\", \"A5\", \"FCC\", \"STONO2\", \"SOTONOQ\", \"CA\", \"PC\", \"PC\", \"PC\", \"PC\", \"CA\", \"A5\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"CA\", \"PC\", \"PC\", \"C\", \"PC\", \"SC\", \"PP\", \"STONO2\", \"STONO2\", \"SOTONOQ\", \"SCAH\", \"FCC\", \"FCC\", \"CA\", \"CA\", \"PC\", \"PC\", \"CA\", \"WC\", \"FCC\", \"PC\", \"WEP\", \"SCPARIS\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"SCParis\", \"PC\", \"PC\", \"PC\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"STONO2\", \"CA\", \"CA\", \"SCPARIS\", \"PC\", \"PC\", \"SCPARIS\"], \"xaxis\": \"x\", \"y\": [\"Cumings, Mrs. John Bradley (Florence Briggs Thayer)\", \"Heikkinen, Miss. Laina\", \"Sandstrom, Miss. Marguerite Rut\", \"Spencer, Mrs. William Augustus (Marie Eugenie)\", \"Laroche, Miss. Simonne Marie Anne Andree\", \"Harper, Mrs. Henry Sleeper (Myna Haxtun)\", \"Rugg, Miss. Emily\", \"West, Miss. Constance Mirium\", \"Nye, Mrs. (Elizabeth Ramell)\", \"Ilett, Miss. Bertha\", \"Greenfield, Mr. William Bertram\", \"Madsen, Mr. Fridtjof Arne\", \"Hakkarainen, Mrs. Pekka Pietari (Elin Matilda Dolck)\", \"Watt, Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \"Brown, Mrs. James Joseph (Margaret Tobin)\", \"Lurette, Miss. Elise\", \"Cohen, Mr. Gurshon \\\"Gus\\\"\", \"Cameron, Miss. Clear Annie\", \"Honkanen, Miss. Eliina\", \"Sunderland, Mr. Victor Francis\", \"Collyer, Miss. Marjorie \\\"Lottie\\\"\", \"Thorne, Mrs. Gertrude Maybelle\", \"Ward, Miss. Anna\", \"Graham, Mrs. William Thompson (Edith Junkins)\", \"Bissette, Miss. Amelia\", \"Abbott, Mrs. Stanton (Rosa Hunt)\", \"Dorking, Mr. Edward Arthur\", \"Baxter, Mrs. James (Helene DeLaudeniere Chaput)\", \"Penasco y Castellana, Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \"Francatelli, Miss. Laura Mabel\", \"Ryerson, Miss. Emily Borie\", \"Young, Miss. Marie Grice\", \"Frauenthal, Mrs. Henry William (Clara Heinsheimer)\", \"Coutts, Master. William Loch \\\"William\\\"\", \"Aubart, Mme. Leontine Pauline\", \"Meyer, Mrs. Edgar Joseph (Leila Saks)\", \"Landergren, Miss. Aurora Adelia\", \"Bidois, Miss. Rosalie\", \"Lehmann, Miss. Bertha\", \"Sandstrom, Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \"Niskanen, Mr. Juha\", \"Sundman, Mr. Johan Julian\", \"Pickard, Mr. Berk (Berk Trembisky)\", \"Louch, Mrs. Charles Alexander (Alice Adelaide Slow)\", \"Hart, Mrs. Benjamin (Esther Ada Bloomfield)\", \"Toomey, Miss. Ellen\", \"West, Mrs. Edwy Arthur (Ada Mary Worth)\", \"Coutts, Master. Eden Leslie \\\"Neville\\\"\", \"McGough, Mr. James Robert\", \"Rothschild, Mrs. Martin (Elizabeth L. Barrett)\", \"Lemore, Mrs. (Amelia Milley)\", \"Ridsdale, Miss. Lucy\", \"Hart, Miss. Eva Miriam\", \"LeRoy, Miss. Bertha\", \"Crosby, Miss. Harriet R\", \"Padro y Manent, Mr. Julian\", \"Davies, Master. John Morgan Jr\", \"Flynn, Mr. John Irwin (\\\"Irving\\\")\", \"Jussila, Mr. Eiriik\", \"Duff Gordon, Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \"Laroche, Mrs. Joseph (Juliette Marie Louise Lafargue)\", \"Shutes, Miss. Elizabeth W\", \"Sagesser, Mlle. Emma\", \"Harper, Mr. Henry Sleeper\", \"Stanley, Miss. Amy Zillah Elsie\", \"Frauenthal, Dr. Henry William\", \"Lindqvist, Mr. Eino William\", \"Cardeza, Mr. Thomas Drake Martinez\", \"Hassab, Mr. Hammad\", \"Astor, Mrs. John Jacob (Madeleine Talmadge Force)\", \"Silverthorne, Mr. Spencer Victor\", \"Calderhead, Mr. Edward Pennington\", \"Mayne, Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \"Endres, Miss. Caroline Louise\", \"Lesurer, Mr. Gustave J\", \"Ryerson, Miss. Susan Parker \\\"Suzette\\\"\", \"Stranden, Mr. Juho\", \"Dean, Master. Bertram Vere\", \"Collyer, Mrs. Harvey (Charlotte Annie Tate)\", \"Mallet, Master. Andre\", \"Compton, Miss. Sara Rebecca\", \"Lines, Miss. Mary Conover\", \"Duran y More, Miss. Asuncion\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"A4\", \"WEP\", \"SCPARIS\", \"STONO2\", \"PC\", \"C\", \"PC\", \"PC\", \"PC\", \"A5\", \"SCAH\", \"CA\", \"CA\", \"WC\", \"SOTONOQ\", \"STONO2\", \"PC\", \"CA\", \"SCPARIS\", \"PC\", \"PC\", \"FCC\", \"PC\", \"PC\", \"A4\", \"FC\", \"STONO2\", \"A5\", \"C\", \"PC\", \"PC\", \"PP\", \"SCAH\", \"CA\", \"SOTONOQ\", \"CA\", \"CA\", \"PC\", \"SCA4\", \"SOPP\", \"PC\", \"SOTONOQ\", \"PC\", \"WC\", \"SOPP\", \"CA\", \"PC\", \"PC\", \"PC\", \"SOPP\", \"A4\", \"CA\", \"A5\", \"CA\", \"PC\", \"CA\", \"FC\", \"PC\", \"C\", \"SOTONOQ\", \"SOC\", \"SCPARIS\", \"WC\", \"PC\", \"CA\", \"PC\", \"PC\", \"WC\", \"FCC\", \"CA\", \"SOTONO2\", \"CA\", \"CA\", \"CA\", \"SC\", \"CA\", \"WC\", \"SOTONOQ\", \"A5\", \"SOTONOQ\", \"A5\", \"PC\", \"SCParis\", \"SOPP\", \"PC\", \"PC\", \"CA\", \"SOTONOQ\", \"PC\", \"CA\", \"PC\", \"CA\", \"CA\", \"CA\", \"PC\", \"A5\", \"FCC\", \"PC\", \"FCC\", \"SOC\", \"CA\", \"CA\", \"SCPARIS\", \"CA\", \"CA\", \"SCPARIS\", \"PC\", \"SCPARIS\", \"PC\", \"CA\", \"CA\", \"SCPARIS\", \"SOTONOQ\", \"A5\", \"PC\", \"SOTONOQ\"], \"xaxis\": \"x\", \"y\": [\"Davies, Mr. John Samuel\", \"Chaffee, Mrs. Herbert Fuller (Carrie Constance Toogood)\", \"del Carlo, Mrs. Sebastiano (Argenia Genovesi)\", \"Ilmakangas, Miss. Ida Livija\", \"Rothschild, Mr. Martin\", \"Olsen, Master. Artur Karl\", \"Flegenheim, Mrs. Alfred (Antoinette)\", \"Williams, Mr. Richard Norris II\", \"Ryerson, Mrs. Arthur Larned (Emily Maria Borie)\", \"Robins, Mr. Alexander A\", \"Louch, Mr. Charles Alexander\", \"Jefferys, Mr. Clifford Thomas\", \"Dean, Mrs. Bertram (Eva Georgetta Light)\", \"Johnston, Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \"Goldsmith, Mr. Nathan\", \"Peltomaki, Mr. Nikolai Johannes\", \"Chevre, Mr. Paul Romaine\", \"Coutts, Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \"Pulbaum, Mr. Franz\", \"Chaudanson, Miss. Victorine\", \"Ryerson, Master. John Borie\", \"Corey, Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \"Ovies y Rodriguez, Mr. Servando\", \"Straus, Mr. Isidor\", \"Badman, Miss. Emily Louisa\", \"Davidson, Mrs. Thornton (Orian Hays)\", \"Makinen, Mr. Kalle Edvard\", \"Nancarrow, Mr. William Henry\", \"Holthen, Mr. Johan Martin\", \"Evans, Miss. Edith Corse\", \"Straus, Mrs. Isidor (Rosalie Ida Blun)\", \"Sandstrom, Miss. Beatrice Irene\", \"Chapman, Mrs. John Henry (Sara Elizabeth Lawry)\", \"Watt, Miss. Bertha J\", \"Drapkin, Miss. Jennie\", \"Goodwin, Mr. Charles Frederick\", \"Goodwin, Miss. Jessie Allis\", \"Ryerson, Mr. Arthur Larned\", \"Davies, Mr. Evan\", \"Duquemin, Mr. Joseph\", \"Bird, Miss. Ellen\", \"Peacock, Mrs. Benjamin (Edith Nile)\", \"Brandeis, Mr. Emil\", \"Ford, Mr. Edward Watson\", \"Lithman, Mr. Simon\", \"Sincock, Miss. Maude\", \"Compton, Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \"Compton, Mr. Alexander Taylor Jr\", \"Douglas, Mrs. Frederick Charles (Mary Helene Baxter)\", \"Phillips, Miss. Alice Frances Louisa\", \"Davies, Mr. Joseph\", \"Sage, Miss. Ada\", \"van Billiard, Master. Walter John\", \"Baimbrigge, Mr. Charles Robert\", \"Astor, Col. John Jacob\", \"Andrew, Mr. Frank Thomas\", \"Omont, Mr. Alfred Fernand\", \"Rosenbaum, Miss. Edith Louise\", \"Andersen, Mr. Albert Karvin\", \"Finoli, Mr. Luigi\", \"Deacon, Mr. Percy William\", \"Duran y More, Miss. Florentina\", \"Cook, Mrs. (Selena Rogers)\", \"Candee, Mrs. Edward (Helen Churchill Hungerford)\", \"Everett, Mr. Thomas James\", \"Cumings, Mr. John Bradley\", \"Douglas, Mrs. Walter Donald (Mahala Dutton)\", \"Johnston, Master. William Arthur Willie\\\"\\\"\", \"Karnes, Mrs. J Frank (Claire Bennett)\", \"West, Miss. Barbara J\", \"Abrahamsson, Mr. Abraham August Johannes\", \"MacKay, Mr. George William\", \"Portaluppi, Mr. Emilio Ilario Giuseppe\", \"Warren, Mr. Charles William\", \"Parker, Mr. Clifford Richard\", \"Ware, Mr. John James\", \"Oxenham, Mr. Percy Thomas\", \"Peacock, Master. Alfred Edward\", \"Dennis, Mr. William\", \"Franklin, Mr. Charles (Charles Fardon)\", \"Ford, Mr. Arthur\", \"Rheims, Mr. George Alexander Lucien\", \"Laroche, Miss. Louise\", \"Phillips, Mr. Escott Robert\", \"White, Mrs. John Stuart (Ella Holmes)\", \"Spencer, Mr. William Augustus\", \"Jefferys, Mr. Ernest Wilfred\", \"Assam, Mr. Ali\", \"Rosenshine, Mr. George (Mr George Thorne\\\")\\\"\", \"Davies, Mrs. John Morgan (Elizabeth Agnes Mary White) \", \"Dulles, Mr. William Crothers\", \"Denbury, Mr. Herbert\", \"Fillbrook, Mr. Joseph Charles\", \"Sage, Mr. John George\", \"Cardeza, Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \"van Billiard, Master. James William\", \"Walcroft, Miss. Nellie\", \"Greenfield, Mrs. Leo David (Blanche Strouse)\", \"Stokes, Mr. Philip Joseph\", \"Dibden, Mr. William\", \"Dean, Miss. Elizabeth Gladys Millvina\\\"\\\"\", \"Sage, Master. William Henry\", \"Mallet, Mrs. Albert (Antoinette Magnin)\", \"Ware, Mrs. John James (Florence Louise Long)\", \"Sage, Mrs. John (Annie Bullen)\", \"Pallas y Castello, Mr. Emilio\", \"Bowen, Miss. Grace Scott\", \"Wheeler, Mr. Edwin Frederick\\\"\\\"\", \"Lines, Mrs. Ernest H (Elizabeth Lindsey James)\", \"Abbott, Master. Eugene Joseph\", \"Gilbert, Mr. William\", \"Nourney, Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \"Peacock, Miss. Treasteall\", \"Spector, Mr. Woolf\", \"Oliva y Ocana, Dona. Fermina\", \"Saether, Mr. Simon Sivertsen\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Ticket_p\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ab8fe60e-d6d3-4297-a85f-406d236d04c8');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 33,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "We do not know much about the meaning of this prefixes, but there are some dependencies:\n* No passangers survived with the prefix A4\n* Most of the passangers with WC prefix - died",
            "mc_idx": 34,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.2.2_bullet\" style=\"color:#3B61A3\">  1.2.2 Names, surnames and status feature\nTo get more information about the family bonds - we will extract surnames instead of Names, and put them into features list/",
            "mc_idx": 35,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[[\"Surname\",\"Name\"]] = [i.split(\",\") for i in df[\"Name\"].values]",
            "mc_idx": 36,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".split": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    18,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 36,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "We will get all same-surname groups into one list, to put some feature for it\nAll others will be marked with \"Other\".(*)",
            "mc_idx": 37,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "a = df.groupby(\"Surname\")[\"Surname\"].count()\nfam_list = a[a>1].index.values\ndf.loc[~df[\"Surname\"].isin(fam_list),\"Surname\"] = \"Other\"",
            "mc_idx": 38,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    19,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "Lets visualize Surviving rates for families:",
            "mc_idx": 39,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 40,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"2f22e788-b9e7-428e-85df-e880d127c13c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"2f22e788-b9e7-428e-85df-e880d127c13c\")) {                    Plotly.newPlot(                        \"2f22e788-b9e7-428e-85df-e880d127c13c\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Braund\", \"Allen\", \"Moran\", \"McCarthy\", \"Palsson\", \"Andersson\", \"Rice\", \"Vander Planke\", \"Palsson\", \"Fortune\", \"Meyer\", \"Holverson\", \"Vander Planke\", \"Turpin\", \"Rogers\", \"Lennon\", \"Samaan\", \"Arnold-Franchi\", \"Panula\", \"Ostby\", \"Goodwin\", \"Harris\", \"Skoog\", \"Kink\", \"Goodwin\", \"Chronopoulos\", \"Carrau\", \"Ford\", \"Chaffee\", \"Dean\", \"Kantor\", \"Petroff\", \"White\", \"Johansson\", \"Gustafsson\", \"Zabour\", \"Jussila\", \"Attalah\", \"Turpin\", \"Baxter\", \"Andersson\", \"Hickman\", \"Moore\", \"Nasser\", \"White\", \"Robins\", \"Futrelle\", \"Boulos\", \"Andrew\", \"Ford\", \"Navratil\", \"van Billiard\", \"Olsen\", \"Williams\", \"Sage\", \"Cribb\", \"Calic\", \"Panula\", \"Skoog\", \"Rice\", \"Smith\", \"Klasen\", \"Lefebre\", \"Sage\", \"Asplund\", \"Bourke\", \"Olsen\", \"Sage\", \"Strom\", \"Backstrom\", \"Ali\", \"Kiernan\", \"Jacobsohn\", \"Harris\", \"Lefebre\", \"Larsson\", \"Hold\", \"Zabour\", \"Attalah\", \"Minahan\", \"Carter\", \"Strom\", \"Lobb\", \"Rosblom\", \"Smith\", \"Taussig\", \"Panula\", \"Rice\", \"Olsson\", \"Smith\", \"Allison\", \"Johnson\", \"Williams\", \"Abelson\", \"Lahtinen\", \"Hart\", \"Dennis\", \"Sage\", \"Graham\", \"Vander Planke\", \"Pears\", \"Fox\", \"Elias\", \"Arnold-Franchi\", \"Skoog\", \"del Carlo\", \"Barbara\", \"O'Brien\", \"Wiklund\", \"Palsson\", \"Widener\", \"Betros\", \"Gustafsson\", \"Davies\", \"Goodwin\", \"Gustafsson\", \"Johansson\", \"Olsson\", \"Jussila\", \"Hakkarainen\", \"Oreskovic\", \"Gale\", \"Lefebre\", \"Hart\", \"Van Impe\", \"Danbom\", \"Rosblom\", \"Flynn\", \"Silvey\", \"Ford\", \"Fortune\", \"West\", \"Hagland\", \"O'Connor\", \"Morley\", \"Cacic\", \"Renouf\", \"Braund\", \"Karlsson\", \"Goodwin\", \"Lefebre\", \"Hagland\", \"Stanley\", \"Allison\", \"Svensson\", \"Calic\", \"Canavan\", \"Penasco y Castellana\", \"Olsen\", \"Webber\", \"Coleff\", \"Ryan\", \"Hocking\", \"Elias\", \"Cacic\", \"Risien\", \"Andersson\", \"Andersson\", \"Douglas\", \"Goldsmith\", \"O'Brien\", \"Wright\", \"Davies\", \"Palsson\", \"Caram\", \"Bourke\", \"Chapman\", \"Van Impe\", \"Johnson\", \"Boulos\", \"Lindell\", \"Andersson\", \"Danbom\", \"Lobb\", \"Yasbeck\", \"Hansen\", \"Bowen\", \"Skoog\", \"Collyer\", \"Panula\", \"Thorneycroft\", \"Jensen\", \"Skoog\", \"Cor\", \"Hickman\", \"Bourke\", \"Newell\", \"Coleff\", \"Hickman\", \"Cook\", \"Davidson\", \"Goodwin\", \"Goodwin\", \"Brown\", \"Laroche\", \"Panula\", \"Saad\", \"Chapman\", \"Kelly\", \"Thayer\", \"Barbara\", \"Hansen\", \"Morley\", \"Larsson\", \"Johnson\", \"Jensen\", \"Oreskovic\", \"Bryhl\", \"Ilmakangas\", \"Williams\", \"Ford\", \"Cavendish\", \"McNamee\", \"Crosby\", \"Abbott\", \"Marvin\", \"Carlsson\", \"Moran\", \"Jensen\", \"Elias\", \"Johnston\", \"Ali\", \"Rice\", \"Keane\", \"Sage\", \"Hoyt\", \"Van Impe\", \"Johansson\", \"Andrews\", \"Meyer\", \"Andersson\", \"Mallet\", \"Skoog\", \"Panula\", \"Flynn\", \"Lam\", \"Saad\", \"Sage\", \"Harper\", \"Andersson\", \"Svensson\", \"Boulos\", \"Carter\", \"Hansen\", \"Giles\", \"Sage\", \"Carlsson\", \"Gustafsson\", \"Petroff\", \"Rice\", \"Johnston\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Cumings\", \"Futrelle\", \"Johnson\", \"Nasser\", \"Sandstrom\", \"Bonnell\", \"Williams\", \"McGowan\", \"Asplund\", \"Spencer\", \"Nicola-Yarred\", \"Laroche\", \"Harper\", \"Faunthorpe\", \"West\", \"Moubarek\", \"Andersson\", \"Caldwell\", \"Backstrom\", \"Fortune\", \"Greenfield\", \"Doling\", \"Moran\", \"Webber\", \"Nicola-Yarred\", \"Peter\", \"Weisz\", \"Hakkarainen\", \"Andersson\", \"Pears\", \"Watt\", \"Goldsmith\", \"Johnson\", \"Becker\", \"Kink-Heilmann\", \"O'Brien\", \"Navratil\", \"Brown\", \"Carr\", \"Newell\", \"Hoyt\", \"Harris\", \"Asplund\", \"Collyer\", \"Murphy\", \"Hamalainen\", \"Beckwith\", \"Touma\", \"Asplund\", \"Graham\", \"Mellinger\", \"Andrews\", \"Abbott\", \"Connolly\", \"Bishop\", \"Baxter\", \"Kelly\", \"McCoy\", \"Keane\", \"Allison\", \"Fleming\", \"Penasco y Castellana\", \"Hays\", \"Ryerson\", \"Nilsson\", \"Kantor\", \"Wick\", \"Spedden\", \"Caldwell\", \"Goldsmith\", \"Hippach\", \"McCoy\", \"Frauenthal\", \"Burns\", \"Navratil\", \"Fortune\", \"Brown\", \"Smith\", \"Davison\", \"Coutts\", \"Warren\", \"Harder\", \"Meyer\", \"Nakid\", \"Holverson\", \"Carter\", \"Newell\", \"Sandstrom\", \"Richards\", \"Minahan\", \"Drew\", \"Clarke\", \"Phillips\", \"Thorneycroft\", \"Louch\", \"Carter\", \"Richards\", \"Hart\", \"Dodge\", \"Mellinger\", \"Baclini\", \"Goldenberg\", \"Kenyon\", \"Baclini\", \"West\", \"Hirvonen\", \"Bishop\", \"Hoyt\", \"Coutts\", \"Quick\", \"Bradley\", \"Daly\", \"Rothschild\", \"Angle\", \"Hippach\", \"Quick\", \"Peter\", \"Hart\", \"Crosby\", \"Beane\", \"Beane\", \"Davies\", \"Thayer\", \"Duff Gordon\", \"Taussig\", \"de Messemaeker\", \"Jonsson\", \"Harris\", \"Flynn\", \"Kelly\", \"Silvey\", \"Jussila\", \"Christy\", \"Thayer\", \"Taussig\", \"Frolicher-Stehli\", \"Duff Gordon\", \"Jacobsohn\", \"Laroche\", \"Murphy\", \"Herman\", \"Becker\", \"Kimball\", \"Nakid\", \"Baclini\", \"Harper\", \"Stanley\", \"Doling\", \"Frauenthal\", \"Taylor\", \"Brown\", \"Cardeza\", \"Dick\", \"Karun\", \"Lam\", \"Astor\", \"Kelly\", \"Moubarek\", \"Taylor\", \"Harper\", \"Chambers\", \"Renouf\", \"Allen\", \"Ryerson\", \"Wells\", \"Moor\", \"Herman\", \"Hamalainen\", \"Carter\", \"Hocking\", \"Dick\", \"Dean\", \"Collyer\", \"Carter\", \"Thomas\", \"Chambers\", \"Hays\", \"Moor\", \"Mallet\", \"Yasbeck\", \"Richards\", \"Compton\", \"Goldenberg\", \"Lines\", \"Aks\", \"Wick\", \"Daly\", \"Baclini\", \"Duran y More\", \"Johnson\", \"Beckwith\", \"Abelson\", \"Graham\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Kelly\", \"Hirvonen\", \"Svensson\", \"Connolly\", \"Caldwell\", \"Davies\", \"Snyder\", \"Howard\", \"Chaffee\", \"del Carlo\", \"Keane\", \"Ilmakangas\", \"Rothschild\", \"Olsen\", \"Williams\", \"Ryerson\", \"Robins\", \"Ostby\", \"Samaan\", \"Louch\", \"Jefferys\", \"Dean\", \"Johnston\", \"Cacic\", \"Karun\", \"Franklin\", \"Goldsmith\", \"Kimball\", \"Coutts\", \"Smith\", \"Hocking\", \"Fortune\", \"Rice\", \"Cor\", \"Abelseth\", \"Davison\", \"Bradley\", \"Ryerson\", \"Burns\", \"Moore\", \"Fortune\", \"Boulos\", \"Straus\", \"Khalil\", \"Wells\", \"Dyker\", \"Davidson\", \"Cavendish\", \"Stengel\", \"Weisz\", \"Foley\", \"Thomas\", \"Buckley\", \"Ryan\", \"Buckley\", \"Straus\", \"Chronopoulos\", \"Thomas\", \"Sandstrom\", \"Chapman\", \"Watt\", \"Kiernan\", \"Cribb\", \"McCoy\", \"Lefebre\", \"Thomas\", \"Carlsson\", \"Zakarian\", \"Goodwin\", \"Goodwin\", \"Ryerson\", \"Vander Planke\", \"Davies\", \"Lahtinen\", \"Klasen\", \"Asplund\", \"Peacock\", \"Touma\", \"Wright\", \"Kink-Heilmann\", \"Ford\", \"Zakarian\", \"Dyker\", \"Asplund\", \"Brown\", \"Stengel\", \"Becker\", \"Compton\", \"Compton\", \"Marvin\", \"Douglas\", \"Phillips\", \"Davies\", \"Sage\", \"Angle\", \"van Billiard\", \"Drew\", \"Karlsson\", \"Spedden\", \"Nilsson\", \"Murphy\", \"Danbom\", \"Astor\", \"Quick\", \"Andrew\", \"McGowan\", \"Howard\", \"Andersson\", \"Mahon\", \"Wick\", \"Widener\", \"Duran y More\", \"Cook\", \"Karlsson\", \"Moubarek\", \"Asplund\", \"Hocking\", \"Wiklund\", \"Cumings\", \"Warren\", \"Douglas\", \"Christy\", \"Spedden\", \"Johnston\", \"Kenyon\", \"Drew\", \"Hold\", \"Khalil\", \"West\", \"Clark\", \"Mahon\", \"de Messemaeker\", \"Nilsson\", \"Wells\", \"Klasen\", \"Warren\", \"Howard\", \"Pokrnic\", \"Fox\", \"Clark\", \"Lennon\", \"Bryhl\", \"Faunthorpe\", \"Ware\", \"Oreskovic\", \"Peacock\", \"Fleming\", \"Touma\", \"Rosblom\", \"Dennis\", \"Franklin\", \"Snyder\", \"Ford\", \"Daly\", \"Dodge\", \"Laroche\", \"Samaan\", \"Johansson\", \"Olsson\", \"Phillips\", \"Pokrnic\", \"McCarthy\", \"Crosby\", \"Allison\", \"Aks\", \"Hays\", \"Hansen\", \"Cacic\", \"Carr\", \"White\", \"Spencer\", \"Rogers\", \"Jonsson\", \"Jefferys\", \"Andersson\", \"Becker\", \"Clarke\", \"Davies\", \"Thomas\", \"Nakid\", \"Cor\", \"Elias\", \"Betros\", \"Sage\", \"Cardeza\", \"van Billiard\", \"Abelseth\", \"Giles\", \"Greenfield\", \"Herman\", \"Dean\", \"Brown\", \"Lindell\", \"Sage\", \"Mallet\", \"Ware\", \"Harder\", \"Sage\", \"Caram\", \"Gibson\", \"Giles\", \"Dodge\", \"Bowen\", \"Kink\", \"Asplund\", \"O'Connor\", \"Foley\", \"Risien\", \"McNamee\", \"Herman\", \"Canavan\", \"Palsson\", \"Lines\", \"Abbott\", \"Kink-Heilmann\", \"Smith\", \"Frolicher-Stehli\", \"Bonnell\", \"Gale\", \"Gibson\", \"Carrau\", \"Frauenthal\", \"Ware\", \"Widener\", \"Peacock\", \"Minahan\", \"Ware\", \"Peter\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Surname\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('2f22e788-b9e7-428e-85df-e880d127c13c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 40,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "The same thing as in (*) we gonna do for those Surnames who do not exist in test set.\nAgain, i gonna do it manually, cause i dont wanna work with automatization here =)\n\nBut just before this we will put some extra feature which mean \"Has any namesakes\" to determin if the person in som relatio-like group. It may look the same as SibSp, but guess, that som connections between people is hidden.",
            "mc_idx": 41,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[\"Namesakes\"] = 1\ndf.loc[df[\"Surname\"]==\"Other\",\"Namesakes\"] = 0",
            "mc_idx": 42,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    21,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "not_imp_s = [\"Braund\",\"Allen\",\"Moran\",\"Meyer\",\"Holverson\",\"Turpin\",\"Arnold-Franchi\",\"Panula\",\"Harris\",\"Skoog\",\"Kantor\",\"Petroff\",\"Gustafsson\",\"Zabour\",\n             \"Jussila\",\"Attalah\",\"Baxter\",\"Hickman\",\"Nasser\",\"Futrelle\",\"Navratil\",\"Calic\",\"Bourke\",\"Strom\",\"Backstrom\",\"Ali\",\"Jacobsohn\",\"Larsson\",\n             \"Carter\",\"Lobb\",\"Taussig\",\"Johnson\",\"Abelson\",\"Hart\",\"Graham\",\"Pears\",\"Barbara\",\"O'Brien\",\"Hakkarainen\",\"Van Impe\",\"Flynn\",\"Silvey\",\"Hagland\",\n             \"Morley\",\"Renouf\",\"Stanley\",\"Penasco y Castellana\",\"Webber\",\"Coleff\",\"Yasbeck\",\"Collyer\",\"Thorneycroft\",\"Jensen\",\"Newell\",\"Saad\",\"Thayer\",\"Hoyt\",\n             \"Andrews\",\"Lam\",\"Harper\",\"Nicola-Yarred\",\"Doling\",\"Hamalainen\",\"Beckwith\",\"Mellinger\",\"Bishop\",\"Hippach\",\"Richards\",\"Baclini\",\"Goldenberg\",\n             \"Beane\",\"Duff Gordon\",\"Tylor\",\"Dick\",\"Chambers\",\"Moor\",\"Snyder\", \"Howard\", \"Jefferys\", \"Franklin\",\"Abelseth\",\"Straus\",\"Khalil\",\"Dyker\",\"Stengel\",\n             \"Foley\",\"Buckley\",\"Zakarian\",\"Peacock\",\"Mahon\",\"Clark\",\"Pokrnic\",\"Ware\",\"Gibson\",\"Taylor\"]\ndf = df.replace(not_imp_s,'Other')",
            "mc_idx": 43,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 43,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "df[(df[\"Surname\"]==\"Other\") & (df[\"Namesakes\"]==True)].head(10).style.background_gradient(cmap=\"Blues\")",
            "mc_idx": 44,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    23,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7f5589231f10>"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "s = df[df[\"Namesakes\"]==0]\nprint(f'Have no Namesakes \\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Namesakes\"]==1]\nprint(f'Have Namesakes \\t\\t {len(s[s[\"Survived\"]==1])/len(s)}')",
            "mc_idx": 45,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    24,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Have no Namesakes \t 0.23390894819466249\nHave Namesakes \t\t 0.28720238095238093\n"
                    ]
                },
                "mc_idx": 45,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 46,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    25,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"ff6a16a5-ff38-4522-afbb-97ea5fe87b19\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ff6a16a5-ff38-4522-afbb-97ea5fe87b19\")) {                    Plotly.newPlot(                        \"ff6a16a5-ff38-4522-afbb-97ea5fe87b19\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Cumings\", \"Sandstrom\", \"Bonnell\", \"Williams\", \"McGowan\", \"Asplund\", \"Spencer\", \"Laroche\", \"Faunthorpe\", \"West\", \"Moubarek\", \"Andersson\", \"Caldwell\", \"Fortune\", \"Greenfield\", \"Peter\", \"Weisz\", \"Andersson\", \"Watt\", \"Goldsmith\", \"Becker\", \"Kink-Heilmann\", \"Brown\", \"Carr\", \"Asplund\", \"Murphy\", \"Touma\", \"Asplund\", \"Abbott\", \"Connolly\", \"Kelly\", \"McCoy\", \"Keane\", \"Allison\", \"Fleming\", \"Hays\", \"Ryerson\", \"Nilsson\", \"Wick\", \"Spedden\", \"Caldwell\", \"Goldsmith\", \"McCoy\", \"Frauenthal\", \"Burns\", \"Fortune\", \"Brown\", \"Smith\", \"Davison\", \"Coutts\", \"Warren\", \"Harder\", \"Nakid\", \"Sandstrom\", \"Minahan\", \"Drew\", \"Clarke\", \"Phillips\", \"Louch\", \"Dodge\", \"Kenyon\", \"West\", \"Hirvonen\", \"Coutts\", \"Quick\", \"Bradley\", \"Daly\", \"Rothschild\", \"Angle\", \"Quick\", \"Peter\", \"Crosby\", \"Davies\", \"de Messemaeker\", \"Jonsson\", \"Kelly\", \"Christy\", \"Frolicher-Stehli\", \"Laroche\", \"Murphy\", \"Herman\", \"Becker\", \"Kimball\", \"Nakid\", \"Frauenthal\", \"Brown\", \"Cardeza\", \"Karun\", \"Astor\", \"Kelly\", \"Moubarek\", \"Ryerson\", \"Wells\", \"Herman\", \"Hocking\", \"Dean\", \"Thomas\", \"Hays\", \"Mallet\", \"Compton\", \"Lines\", \"Aks\", \"Wick\", \"Daly\", \"Duran y More\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"McCarthy\", \"Palsson\", \"Andersson\", \"Rice\", \"Vander Planke\", \"Palsson\", \"Fortune\", \"Vander Planke\", \"Rogers\", \"Lennon\", \"Samaan\", \"Ostby\", \"Goodwin\", \"Kink\", \"Goodwin\", \"Chronopoulos\", \"Carrau\", \"Ford\", \"Chaffee\", \"Dean\", \"White\", \"Johansson\", \"Andersson\", \"Moore\", \"White\", \"Robins\", \"Boulos\", \"Andrew\", \"Ford\", \"van Billiard\", \"Olsen\", \"Williams\", \"Sage\", \"Cribb\", \"Rice\", \"Smith\", \"Klasen\", \"Lefebre\", \"Sage\", \"Asplund\", \"Olsen\", \"Sage\", \"Kiernan\", \"Lefebre\", \"Hold\", \"Minahan\", \"Rosblom\", \"Smith\", \"Rice\", \"Olsson\", \"Smith\", \"Allison\", \"Williams\", \"Lahtinen\", \"Dennis\", \"Sage\", \"Vander Planke\", \"Fox\", \"Elias\", \"del Carlo\", \"Wiklund\", \"Palsson\", \"Widener\", \"Betros\", \"Davies\", \"Goodwin\", \"Johansson\", \"Olsson\", \"Oreskovic\", \"Gale\", \"Lefebre\", \"Danbom\", \"Rosblom\", \"Ford\", \"Fortune\", \"West\", \"O'Connor\", \"Cacic\", \"Karlsson\", \"Goodwin\", \"Lefebre\", \"Allison\", \"Svensson\", \"Canavan\", \"Olsen\", \"Ryan\", \"Hocking\", \"Elias\", \"Cacic\", \"Risien\", \"Andersson\", \"Andersson\", \"Douglas\", \"Goldsmith\", \"Wright\", \"Davies\", \"Palsson\", \"Caram\", \"Chapman\", \"Boulos\", \"Lindell\", \"Andersson\", \"Danbom\", \"Hansen\", \"Bowen\", \"Cor\", \"Cook\", \"Davidson\", \"Goodwin\", \"Goodwin\", \"Brown\", \"Laroche\", \"Chapman\", \"Kelly\", \"Hansen\", \"Oreskovic\", \"Bryhl\", \"Ilmakangas\", \"Williams\", \"Ford\", \"Cavendish\", \"McNamee\", \"Crosby\", \"Abbott\", \"Marvin\", \"Carlsson\", \"Elias\", \"Johnston\", \"Rice\", \"Keane\", \"Sage\", \"Johansson\", \"Andersson\", \"Mallet\", \"Sage\", \"Andersson\", \"Svensson\", \"Boulos\", \"Hansen\", \"Giles\", \"Sage\", \"Carlsson\", \"Rice\", \"Johnston\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Kelly\", \"Hirvonen\", \"Svensson\", \"Connolly\", \"Caldwell\", \"Davies\", \"Chaffee\", \"del Carlo\", \"Keane\", \"Ilmakangas\", \"Rothschild\", \"Olsen\", \"Williams\", \"Ryerson\", \"Robins\", \"Ostby\", \"Samaan\", \"Louch\", \"Dean\", \"Johnston\", \"Cacic\", \"Karun\", \"Goldsmith\", \"Kimball\", \"Coutts\", \"Smith\", \"Hocking\", \"Fortune\", \"Rice\", \"Cor\", \"Davison\", \"Bradley\", \"Ryerson\", \"Burns\", \"Moore\", \"Fortune\", \"Boulos\", \"Wells\", \"Davidson\", \"Cavendish\", \"Weisz\", \"Thomas\", \"Ryan\", \"Chronopoulos\", \"Thomas\", \"Sandstrom\", \"Chapman\", \"Watt\", \"Kiernan\", \"Cribb\", \"McCoy\", \"Lefebre\", \"Thomas\", \"Carlsson\", \"Goodwin\", \"Goodwin\", \"Ryerson\", \"Vander Planke\", \"Davies\", \"Lahtinen\", \"Klasen\", \"Asplund\", \"Touma\", \"Wright\", \"Kink-Heilmann\", \"Ford\", \"Asplund\", \"Brown\", \"Becker\", \"Compton\", \"Compton\", \"Marvin\", \"Douglas\", \"Phillips\", \"Davies\", \"Sage\", \"Angle\", \"van Billiard\", \"Drew\", \"Karlsson\", \"Spedden\", \"Nilsson\", \"Murphy\", \"Danbom\", \"Astor\", \"Quick\", \"Andrew\", \"McGowan\", \"Andersson\", \"Wick\", \"Widener\", \"Duran y More\", \"Cook\", \"Karlsson\", \"Moubarek\", \"Asplund\", \"Hocking\", \"Wiklund\", \"Cumings\", \"Warren\", \"Douglas\", \"Christy\", \"Spedden\", \"Johnston\", \"Kenyon\", \"Drew\", \"Hold\", \"West\", \"de Messemaeker\", \"Nilsson\", \"Wells\", \"Klasen\", \"Warren\", \"Fox\", \"Lennon\", \"Bryhl\", \"Faunthorpe\", \"Oreskovic\", \"Fleming\", \"Touma\", \"Rosblom\", \"Dennis\", \"Ford\", \"Daly\", \"Dodge\", \"Laroche\", \"Samaan\", \"Johansson\", \"Olsson\", \"Phillips\", \"McCarthy\", \"Crosby\", \"Allison\", \"Aks\", \"Hays\", \"Hansen\", \"Cacic\", \"Carr\", \"White\", \"Spencer\", \"Rogers\", \"Jonsson\", \"Andersson\", \"Becker\", \"Clarke\", \"Davies\", \"Thomas\", \"Nakid\", \"Cor\", \"Elias\", \"Betros\", \"Sage\", \"Cardeza\", \"van Billiard\", \"Giles\", \"Greenfield\", \"Herman\", \"Dean\", \"Brown\", \"Lindell\", \"Sage\", \"Mallet\", \"Harder\", \"Sage\", \"Caram\", \"Giles\", \"Dodge\", \"Bowen\", \"Kink\", \"Asplund\", \"O'Connor\", \"Risien\", \"McNamee\", \"Herman\", \"Canavan\", \"Palsson\", \"Lines\", \"Abbott\", \"Kink-Heilmann\", \"Smith\", \"Frolicher-Stehli\", \"Bonnell\", \"Gale\", \"Carrau\", \"Frauenthal\", \"Widener\", \"Minahan\", \"Peter\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Surname\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ff6a16a5-ff38-4522-afbb-97ea5fe87b19');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 46,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 0
            }
        },
        {
            "source": "Now we will delete all the Families, for which number of Survived equel to not Survived (Again ill do it manually)",
            "mc_idx": 47,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "drop = [\"Abbott\",\"Keane\",\"Minahan\",\"Crosby\",\"Hocking\",\"Dean\",\"Mallet\",\"\"]\ndf = df.replace(drop,'Other')",
            "mc_idx": 48,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    26,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 48,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "## <a class=\"anchor\" id=\"1.3_bullet\" style=\"color:#3B61A3\">  1.3 Personal features analisys\n### <a class=\"anchor\" id=\"1.3.1_bullet\" style=\"color:#3B61A3\">  1.3.1 Title features\nPassangers with different Titles may hav different survival rate (may be connected to so some position on groups, status of inner features)",
            "mc_idx": 49,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[\"Title\"] = pd.DataFrame(df[\"Name\"].str.strip().str.split(\".\").tolist()).set_index(df.index).iloc[:,0]\ndf[\"Title\"] = df[\"Title\"].fillna(\"Others\")",
            "mc_idx": 50,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".fillna(": 1,
                    ".split": 1,
                    ".fillna": 1,
                    ".set_index": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    27,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 50,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 51,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    28,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"e5941ec9-3af4-4a7d-83da-c3a068ad4125\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e5941ec9-3af4-4a7d-83da-c3a068ad4125\")) {                    Plotly.newPlot(                        \"e5941ec9-3af4-4a7d-83da-c3a068ad4125\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Don\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Rev\", \"Rev\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Dr\", \"Miss\", \"Rev\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Dr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Dr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Major\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Rev\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Col\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Capt\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Dr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Jonkheer\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Rev\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Rev\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Master\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mme\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Ms\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Major\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Lady\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Sir\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Dr\", \"Miss\", \"Mlle\", \"Mr\", \"Miss\", \"Mr\", \"Col\", \"Miss\", \"Miss\", \"Miss\", \"Dr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Mlle\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Master\", \"the Countess\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Master\", \"Dr\", \"Mrs\", \"Mrs\", \"Master\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Ms\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Col\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Rev\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mr\", \"Rev\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Col\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Dr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Dona\", \"Mr\", \"Mr\", \"Master\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Title\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('e5941ec9-3af4-4a7d-83da-c3a068ad4125');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 51,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 0
            }
        },
        {
            "source": "rename = {\"Miss\":\"Ms\",\n          \"Mrs\": \"Mme\",\n          \"Others\": [\"Don\",\"Rev\",\"Dr\",\"Lady\",\"Sir\",\"Mlle\",\"Col\",\"the Countess\",\"Mme\",\"Major\",\"Capt\",\"Jonkheer\",\"Dona\"]}\nfor k in rename:\n    df[\"Title\"] = df[\"Title\"].replace(rename[k],k)",
            "mc_idx": 52,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 52,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "I desided to delete values with low frequancy - for our model not to be messed up.",
            "mc_idx": 53,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 54,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    30,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e\")) {                    Plotly.newPlot(                        \"158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Miss\", \"Others\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Others\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Others\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Others\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Master\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Others\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Others\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Miss\", \"Others\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Miss\", \"Miss\", \"Miss\", \"Others\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Others\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Master\", \"Others\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Master\", \"Others\", \"Mrs\", \"Mrs\", \"Master\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mr\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Others\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Master\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Title\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 54,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.3.2_bullet\" style=\"color:#3B61A3\">  1.3.2 Parch and Age\nThis features may have crucial effect on the target. Parants was saving there children befor them, and many other connections may be inside of the just two attributes",
            "mc_idx": 55,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Parch\", color = \"Survived\", size_max=6\n                 ,color_discrete_sequence=cm,width=1200, height=500)\nfig.show()",
            "mc_idx": 56,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.3333333333333333,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1,
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    31,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5\")) {                    Plotly.newPlot(                        \"c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5\",                        [{\"hovertemplate\": \"Survived=0.0<br>Age=%{x}<br>Parch=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [22.0, 35.0, null, 54.0, 2.0, 20.0, 39.0, 14.0, 2.0, 31.0, 35.0, 8.0, null, 19.0, null, 40.0, 66.0, 28.0, 42.0, 21.0, 18.0, 40.0, 27.0, null, null, null, null, 18.0, 7.0, 21.0, 65.0, 28.5, 11.0, 22.0, 45.0, 4.0, null, 19.0, 26.0, 32.0, 16.0, 21.0, 26.0, 25.0, null, null, 22.0, 28.0, 16.0, null, 24.0, 29.0, 20.0, 46.0, 26.0, 59.0, null, 71.0, 34.0, 28.0, null, 21.0, 33.0, 37.0, 28.0, 38.0, 47.0, 14.5, 22.0, 20.0, 17.0, 21.0, 70.5, 29.0, 24.0, 2.0, 21.0, null, 32.5, 54.0, null, 45.0, 33.0, 20.0, 47.0, 25.0, 23.0, 37.0, 16.0, 24.0, null, 19.0, 18.0, 19.0, 9.0, 36.5, 42.0, 51.0, 55.5, 40.5, null, 51.0, 30.0, null, null, 44.0, 26.0, 17.0, 1.0, 45.0, null, 28.0, 61.0, 4.0, 21.0, 56.0, 18.0, null, 50.0, 30.0, 36.0, null, null, 9.0, null, 40.0, 36.0, 19.0, null, 42.0, 24.0, 28.0, null, 34.0, 45.5, 2.0, 32.0, 24.0, 22.0, 30.0, null, 42.0, 30.0, 27.0, 51.0, null, 22.0, 20.5, 18.0, null, 29.0, 59.0, 24.0, null, 44.0, 19.0, 33.0, null, 29.0, 22.0, 30.0, 44.0, 25.0, 54.0, null, 29.0, 62.0, 30.0, 41.0, null, 52.0, 40.0, null, 36.0, 16.0, null, 37.0, 45.0, null, 7.0, 65.0, 28.0, 16.0, null, 33.0, 22.0, 36.0, 24.0, 24.0, null, 23.5, 2.0, 19.0, null, 30.0, 26.0, 28.0, 43.0, 54.0, 22.0, 27.0, null, 61.0, 45.5, 38.0, 16.0, null, 29.0, 45.0, 28.0, 25.0, 36.0, 42.0, 23.0, null, 15.0, 25.0, null, 28.0, 38.0, 40.0, 29.0, 45.0, 35.0, null, 30.0, 18.0, 19.0, 22.0, 3.0, 27.0, 20.0, 19.0, 32.0, null, 18.0, 1.0, null, 28.0, 22.0, 31.0, 46.0, 23.0, 26.0, 21.0, 28.0, 20.0, 34.0, 51.0, 21.0, null, null, null, null, null, 30.0, 10.0, null, 21.0, 29.0, 28.0, 18.0, null, null, 17.0, 50.0, 21.0, 64.0, 31.0, 20.0, 25.0, 36.0, null, 30.0, null, 65.0, null, 34.0, 47.0, 48.0, null, 38.0, null, 56.0, null, null, 38.0, 22.0, null, 34.0, 29.0, 22.0, 9.0, null, 50.0, null, 58.0, 30.0, null, 21.0, 55.0, 71.0, 21.0, null, null, 25.0, 24.0, 17.0, 21.0, null, 37.0, 18.0, 28.0, null, 24.0, 47.0, null, 32.0, 22.0, null, null, 40.5, null, 39.0, 23.0, null, 17.0, 30.0, 45.0, null, 9.0, 11.0, 50.0, 64.0, 33.0, 27.0, null, 62.0, null, null, 40.0, 28.0, null, null, 24.0, 19.0, 29.0, null, 16.0, 19.0, null, 54.0, 36.0, null, 47.0, 22.0, null, 35.0, 47.0, null, 37.0, 36.0, 49.0, null, null, null, 44.0, 36.0, 30.0, 39.0, null, null, 35.0, 34.0, 26.0, 26.0, 27.0, 21.0, 21.0, 61.0, 57.0, 26.0, null, 51.0, null, 9.0, 32.0, 31.0, 41.0, null, 20.0, 2.0, 19.0, null, null, 21.0, 18.0, 24.0, null, 32.0, 23.0, 58.0, 40.0, 47.0, 36.0, 32.0, 25.0, null, 43.0, 31.0, 70.0, null, 18.0, 24.5, 43.0, null, 20.0, 14.0, 60.0, 25.0, 14.0, 19.0, 18.0, 25.0, 60.0, 52.0, 44.0, 49.0, 42.0, 18.0, 25.0, 26.0, 39.0, null, 29.0, 52.0, 19.0, null, 33.0, 17.0, 34.0, 50.0, 20.0, 25.0, 25.0, 11.0, null, 23.0, 23.0, 28.5, 48.0, null, null, 36.0, 24.0, 70.0, 16.0, 19.0, 31.0, 33.0, 23.0, 28.0, 18.0, 34.0, null, 41.0, 16.0, null, 30.5, null, 32.0, 24.0, 48.0, 57.0, null, 18.0, null, null, 29.0, null, 25.0, 25.0, 8.0, 46.0, null, 16.0, null, null, 25.0, 39.0, 30.0, 30.0, 34.0, 31.0, 39.0, 18.0, 39.0, 26.0, 39.0, 35.0, 6.0, 30.5, null, 23.0, 31.0, 43.0, 10.0, 38.0, 2.0, null, null, null, 23.0, 18.0, 21.0, null, 20.0, 16.0, 34.5, 17.0, 42.0, null, 35.0, 28.0, 4.0, 74.0, 9.0, 44.0, null, 41.0, 21.0, null, 24.0, 31.0, null, 26.0, 33.0, 47.0, 20.0, 19.0, null, 33.0, 22.0, 28.0, 25.0, 39.0, 27.0, null, 32.0], \"xaxis\": \"x\", \"y\": [0, 0, 0, 0, 1, 0, 5, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 2, 2, 0, 0, 0, 2, 0, 1, 0, 0, 2, 1, 0, 0, 1, 4, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 2, 0, 2, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 2, 0], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Age=%{x}<br>Parch=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [38.0, 26.0, 35.0, 27.0, 14.0, 4.0, 58.0, 55.0, null, null, 34.0, 15.0, 28.0, 38.0, null, null, null, null, 14.0, 3.0, 19.0, null, 49.0, 29.0, null, 21.0, 5.0, 38.0, null, 29.0, 17.0, 32.0, 0.83, 30.0, 29.0, null, 17.0, 33.0, 23.0, 23.0, 34.0, 21.0, null, null, 32.5, 12.0, 24.0, null, 29.0, 19.0, 22.0, 24.0, 27.0, 22.0, 16.0, 40.0, 9.0, null, 1.0, 1.0, 4.0, null, 45.0, 32.0, 19.0, 3.0, 44.0, 58.0, null, 18.0, 26.0, 16.0, 40.0, 35.0, 31.0, 27.0, 32.0, 16.0, 38.0, 19.0, 35.0, 5.0, 8.0, null, 24.0, 37.0, 29.0, null, 30.0, 35.0, 50.0, 3.0, 25.0, 58.0, 35.0, 25.0, 41.0, null, 63.0, 35.0, 19.0, 30.0, 42.0, 22.0, 26.0, 19.0, null, 50.0, null, null, null, 0.92, null, 17.0, 30.0, 24.0, 18.0, 26.0, 24.0, 31.0, 40.0, 30.0, 22.0, 36.0, 36.0, 31.0, 16.0, null, null, 41.0, 45.0, 2.0, 24.0, 24.0, 40.0, null, 3.0, 22.0, null, null, 60.0, null, null, 24.0, 25.0, null, 22.0, 42.0, 1.0, 35.0, 36.0, 17.0, 36.0, 21.0, 23.0, 24.0, 28.0, 39.0, 3.0, 33.0, 44.0, 34.0, 18.0, 28.0, 19.0, 32.0, 28.0, null, 42.0, 14.0, 24.0, 45.0, 28.0, null, 4.0, 13.0, 34.0, 5.0, 52.0, 49.0, 29.0, null, 50.0, 48.0, 0.75, 33.0, 23.0, 2.0, 63.0, 25.0, 35.0, 9.0, 54.0, 16.0, 33.0, null, 26.0, 29.0, 36.0, 54.0, 34.0, 36.0, 30.0, 44.0, 50.0, 2.0, null, 7.0, 30.0, 22.0, 36.0, 32.0, 19.0, null, 8.0, 17.0, 22.0, 22.0, 48.0, 39.0, 36.0, 32.0, 62.0, 53.0, 36.0, null, 34.0, 39.0, 32.0, 25.0, 39.0, 18.0, 60.0, 52.0, null, 49.0, 24.0, 35.0, 27.0, 22.0, 40.0, null, 24.0, 4.0, 42.0, 20.0, 21.0, 80.0, 32.0, 28.0, 24.0, null, 0.75, 48.0, 56.0, 23.0, 18.0, null, 50.0, 20.0, null, 40.0, 31.0, 18.0, 36.0, 27.0, 15.0, 31.0, 4.0, null, null, 18.0, 35.0, 45.0, 42.0, 22.0, null, 24.0, 48.0, 38.0, 27.0, 6.0, 27.0, 30.0, null, 29.0, 35.0, null, 21.0, 31.0, 30.0, 4.0, 6.0, 48.0, 0.67, 33.0, 20.0, 36.0, 51.0, 54.0, 5.0, 43.0, 13.0, 17.0, 18.0, 1.0, 49.0, 31.0, 31.0, 11.0, 0.42, 27.0, 33.0, 52.0, 27.0, 27.0, 1.0, null, 62.0, 15.0, 0.83, 39.0, 32.0, null, 30.0, null, 16.0, 18.0, 45.0, 51.0, 24.0, 48.0, 42.0, 27.0, 4.0, 47.0, 28.0, 15.0, 56.0, 25.0, 19.0, 26.0], \"xaxis\": \"x\", \"y\": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 0, 0, 1, 2, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 2, 3, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 0, 2, 2, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 2, 1, 0, 0, 2, 0, 3, 0, 1, 0, 0, 0, 2, 0, 0, 1, 2, 1, 0, 0, 1, 0, 1, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Age\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Parch\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 56,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "df[(df[\"Age\"]==5) & (df[\"Parch\"]==0)]\n# 5 y.o child traveling by hereself?",
            "mc_idx": 57,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    "ravel": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    32,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Survived  Pclass                   Name     Sex  Age  SibSp  Parch  Ticket    Fare  Cabin Embarked Deck  Side Ticket_p Surname  Namesakes Title\nPassengerId                                                                                                                                                 \n778               1.0       3   Miss. Virginia Ethel  female  5.0      0      0  364516  12.475     -1        S  N/A   0.0      N/A   Other          0  Miss"
                    ]
                },
                "mc_idx": 57,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 0
            }
        },
        {
            "source": "In the end i desided not to fix it, cause if takes some extra information about the data, and it is kind of cheating.\nBut i will leave it there just in case someone will need it",
            "mc_idx": 58,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "#df.loc[df[\"Name\"]==\"Emanuel, Miss. Virginia Ethel\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Dowdell, Miss. Elizabeth\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]==\"Albimona, Mr. Nassef Cassem\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Hassan, Mr. Houssein G N\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]=='Watt, Mrs. James (Elizabeth \"Bessie\" Inglis Milne)',\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Watt, Miss. Bertha J\",\"Parch\"]=1",
            "mc_idx": 59,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 59,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "We will manually set two more features:\n* \"Kid\" feature - for less then 18 y.o passangers - there survival rate is higher \n* 'Alone' feature - for those who was travalling alone (>18 e.o, Parch & SibSp ==0). \n* 'Old' feature - elder people died more often. I took 60 y.o as a treashold, after checking several and chooseing the one",
            "mc_idx": 60,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[\"Kid\"]=0\ndf.loc[(df[\"Age\"]<18),\"Kid\"]=1\nprint(f'Kids survived koeff:\\t{len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==1)])}')",
            "mc_idx": 61,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Kids survived koeff:\t0.8524590163934426\nOthers survived koeff:\t1.7686832740213523\n"
                    ]
                },
                "mc_idx": 61,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Old\"]=0\ndf.loc[(df[\"Age\"]>60),\"Old\"]=1\nprint(f'Elder survived koeff:\\t{len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==1)])}')",
            "mc_idx": 62,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Elder survived koeff:\t3.4\nOthers survived koeff:\t1.5786350148367954\n"
                    ]
                },
                "mc_idx": 62,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Alone\"] = 0\ndf.loc[(df[\"Parch\"]==0) & (df[\"SibSp\"]==0),\"Alone\"]=1\nprint(f'Alone survived koeff:\\t\\t{len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Not Alone survived koeff:\\t{len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==1)])}')",
            "mc_idx": 63,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    36,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Alone survived koeff:\t\t2.294478527607362\nNot Alone survived koeff:\t0.9776536312849162\n"
                    ]
                },
                "mc_idx": 63,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 36,
                "o_idx": 0
            }
        },
        {
            "source": "# <a class=\"anchor\" id=\"2_bullet\" style=\"color:#292F55\">  2. Data preparation\n## <a class=\"anchor\" id=\"2.1_bullet\" style=\"color:#3B61A3\">  2.1 Filling None values\n### <a class=\"anchor\" id=\"2.1.1_bullet\" style=\"color:#3B61A3\">  2.1.1 Filling \"Age\" None values",
            "mc_idx": 64,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "msno.bar(df, figsize=(30,2), color=gradient)",
            "mc_idx": 65,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c037_o001_image_3.png",
                    37,
                    1,
                    3
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 2160x144 with 3 Axes>"
                    ]
                },
                "mc_idx": 65,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 37,
                "o_idx": 1
            }
        },
        {
            "source": "For the \"Age\" feature we just can replace None values with some mean value, but we gonna do it in a bit more complex way.\nWe will locate some groups, based on Sex and Pclass - lets check the difference in ages in several groups.",
            "mc_idx": 66,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "print(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"male\")][\"Age\"].median())",
            "mc_idx": 67,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".median": 12
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    38,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "36.0\n42.0\n28.0\n29.5\n22.0\n25.0\n"
                    ]
                },
                "mc_idx": 67,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 38,
                "o_idx": 0
            }
        },
        {
            "source": "from itertools import *\nl1, l2 = [1,2,3], [\"female\",\"male\"]\nfor c,s in product(l1,l2):\n    msk = (df[\"Pclass\"]==c) & (df[\"Sex\"]==s)\n    df.loc[msk,\"Age\"] = df[msk][\"Age\"].fillna(df[msk][\"Age\"].median())",
            "mc_idx": 68,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.2,
                "Data_Transform": 0.2,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".median": 2
                },
                "Data_Transform": {
                    ".fillna(": 1,
                    ".fillna": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    39,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 68,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 39,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 69,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    40,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"4230dfd3-4148-4343-bdb2-23ab4eb1200a\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4230dfd3-4148-4343-bdb2-23ab4eb1200a\")) {                    Plotly.newPlot(                        \"4230dfd3-4148-4343-bdb2-23ab4eb1200a\",                        [{\"hovertemplate\": \"Survived=0.0<br>Age=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [22.0, 35.0, 25.0, 54.0, 2.0, 20.0, 39.0, 14.0, 2.0, 31.0, 35.0, 8.0, 25.0, 19.0, 25.0, 40.0, 66.0, 28.0, 42.0, 21.0, 18.0, 40.0, 27.0, 25.0, 25.0, 25.0, 25.0, 18.0, 7.0, 21.0, 65.0, 28.5, 11.0, 22.0, 45.0, 4.0, 42.0, 19.0, 26.0, 32.0, 16.0, 21.0, 26.0, 25.0, 25.0, 25.0, 22.0, 28.0, 16.0, 25.0, 24.0, 29.0, 20.0, 46.0, 26.0, 59.0, 25.0, 71.0, 34.0, 28.0, 25.0, 21.0, 33.0, 37.0, 28.0, 38.0, 47.0, 14.5, 22.0, 20.0, 17.0, 21.0, 70.5, 29.0, 24.0, 2.0, 21.0, 25.0, 32.5, 54.0, 25.0, 45.0, 33.0, 20.0, 47.0, 25.0, 23.0, 37.0, 16.0, 24.0, 22.0, 19.0, 18.0, 19.0, 9.0, 36.5, 42.0, 51.0, 55.5, 40.5, 25.0, 51.0, 30.0, 25.0, 25.0, 44.0, 26.0, 17.0, 1.0, 45.0, 42.0, 28.0, 61.0, 4.0, 21.0, 56.0, 18.0, 25.0, 50.0, 30.0, 36.0, 22.0, 29.5, 9.0, 42.0, 40.0, 36.0, 19.0, 25.0, 42.0, 24.0, 28.0, 25.0, 34.0, 45.5, 2.0, 32.0, 24.0, 22.0, 30.0, 25.0, 42.0, 30.0, 27.0, 51.0, 25.0, 22.0, 20.5, 18.0, 22.0, 29.0, 59.0, 24.0, 22.0, 44.0, 19.0, 33.0, 22.0, 29.0, 22.0, 30.0, 44.0, 25.0, 54.0, 25.0, 29.0, 62.0, 30.0, 41.0, 25.0, 52.0, 40.0, 22.0, 36.0, 16.0, 42.0, 37.0, 45.0, 29.5, 7.0, 65.0, 28.0, 16.0, 42.0, 33.0, 22.0, 36.0, 24.0, 24.0, 42.0, 23.5, 2.0, 19.0, 25.0, 30.0, 26.0, 28.0, 43.0, 54.0, 22.0, 27.0, 25.0, 61.0, 45.5, 38.0, 16.0, 25.0, 29.0, 45.0, 28.0, 25.0, 36.0, 42.0, 23.0, 42.0, 15.0, 25.0, 25.0, 28.0, 38.0, 40.0, 29.0, 45.0, 35.0, 25.0, 30.0, 18.0, 19.0, 22.0, 3.0, 27.0, 20.0, 19.0, 32.0, 25.0, 18.0, 1.0, 25.0, 28.0, 22.0, 31.0, 46.0, 23.0, 26.0, 21.0, 28.0, 20.0, 34.0, 51.0, 21.0, 22.0, 25.0, 25.0, 29.5, 22.0, 30.0, 10.0, 25.0, 21.0, 29.0, 28.0, 18.0, 25.0, 25.0, 17.0, 50.0, 21.0, 64.0, 31.0, 20.0, 25.0, 36.0, 25.0, 30.0, 25.0, 65.0, 25.0, 34.0, 47.0, 48.0, 25.0, 38.0, 29.5, 56.0, 25.0, 25.0, 38.0, 22.0, 42.0, 34.0, 29.0, 22.0, 9.0, 29.5, 50.0, 22.0, 58.0, 30.0, 25.0, 21.0, 55.0, 71.0, 21.0, 25.0, 25.0, 25.0, 24.0, 17.0, 21.0, 22.0, 37.0, 18.0, 28.0, 25.0, 24.0, 47.0, 25.0, 32.0, 22.0, 25.0, 25.0, 40.5, 42.0, 39.0, 23.0, 25.0, 17.0, 30.0, 45.0, 25.0, 9.0, 11.0, 50.0, 64.0, 33.0, 27.0, 25.0, 62.0, 42.0, 25.0, 40.0, 28.0, 25.0, 22.0, 24.0, 19.0, 29.0, 25.0, 16.0, 19.0, 22.0, 54.0, 36.0, 25.0, 47.0, 22.0, 25.0, 35.0, 47.0, 22.0, 37.0, 36.0, 49.0, 25.0, 25.0, 42.0, 44.0, 36.0, 30.0, 39.0, 25.0, 25.0, 35.0, 34.0, 26.0, 26.0, 27.0, 21.0, 21.0, 61.0, 57.0, 26.0, 25.0, 51.0, 42.0, 9.0, 32.0, 31.0, 41.0, 25.0, 20.0, 2.0, 19.0, 25.0, 25.0, 21.0, 18.0, 24.0, 25.0, 32.0, 23.0, 58.0, 40.0, 47.0, 36.0, 32.0, 25.0, 25.0, 43.0, 31.0, 70.0, 29.5, 18.0, 24.5, 43.0, 22.0, 20.0, 14.0, 60.0, 25.0, 14.0, 19.0, 18.0, 25.0, 60.0, 52.0, 44.0, 49.0, 42.0, 18.0, 25.0, 26.0, 39.0, 42.0, 29.0, 52.0, 19.0, 25.0, 33.0, 17.0, 34.0, 50.0, 20.0, 25.0, 25.0, 11.0, 29.5, 23.0, 23.0, 28.5, 48.0, 25.0, 25.0, 36.0, 24.0, 70.0, 16.0, 19.0, 31.0, 33.0, 23.0, 28.0, 18.0, 34.0, 25.0, 41.0, 16.0, 42.0, 30.5, 25.0, 32.0, 24.0, 48.0, 57.0, 25.0, 18.0, 25.0, 25.0, 29.0, 25.0, 25.0, 25.0, 8.0, 46.0, 25.0, 16.0, 22.0, 42.0, 25.0, 39.0, 30.0, 30.0, 34.0, 31.0, 39.0, 18.0, 39.0, 26.0, 39.0, 35.0, 6.0, 30.5, 42.0, 23.0, 31.0, 43.0, 10.0, 38.0, 2.0, 25.0, 25.0, 25.0, 23.0, 18.0, 21.0, 25.0, 20.0, 16.0, 34.5, 17.0, 42.0, 25.0, 35.0, 28.0, 4.0, 74.0, 9.0, 44.0, 25.0, 41.0, 21.0, 22.0, 24.0, 31.0, 25.0, 26.0, 33.0, 47.0, 20.0, 19.0, 25.0, 33.0, 22.0, 28.0, 25.0, 39.0, 27.0, 22.0, 32.0], \"xaxis\": \"x\", \"y\": [\" Mr. Owen Harris\", \" Mr. William Henry\", \" Mr. James\", \" Mr. Timothy J\", \" Master. Gosta Leonard\", \" Mr. William Henry\", \" Mr. Anders Johan\", \" Miss. Hulda Amanda Adolfina\", \" Master. Eugene\", \" Mrs. Julius (Emelia Maria Vandemoortele)\", \" Mr. Joseph J\", \" Miss. Torborg Danira\", \" Mr. Farred Chehab\", \" Mr. Charles Alexander\", \" Mr. Lalio\", \" Don. Manuel E\", \" Mr. Edward H\", \" Mr. Edgar Joseph\", \" Mr. Alexander Oskar\", \" Mr. Ernest Charles\", \" Miss. Augusta Maria\", \" Mrs. Johan (Johanna Persdotter Larsson)\", \" Mrs. William John Robert (Dorothy Ann Wonnacott)\", \" Mr. Theodor\", \" Mr. William John\", \" Mr. Denis\", \" Mr. Youssef\", \" Mrs. Josef (Josefine Franchi)\", \" Master. Juha Niilo\", \" Mr. Richard Cater\", \" Mr. Engelhart Cornelius\", \" Mr. Mansouer\", \" Master. William Frederick\", \" Mr. Orsen\", \" Mr. Henry Birkhardt\", \" Master. Harald\", \" Mr. Albert A\", \" Mr. Ernest James\", \" Mr. Vincenz\", \" Mr. Stephen Curnow\", \" Miss. Lillian Amy\", \" Mr. Ambrose Jr\", \" Mr. Apostolos\", \" Mr. Sigurd Hansen\", \" Mr. Ivan\", \" Mr. Rahamin Haim\", \" Mr. Achille\", \" Mr. Francisco M\", \" Mr. William Neal\", \" Mr. Selman Francis\", \" Mr. Francesco\", \" Mr. Emil\", \" Mr. Paul Edvin\", \" Mr. Herbert Fuller\", \" Mr. Bertram Frank\", \" Mr. Daniel\", \" Mr. Charles Joseph\", \" Mr. George B\", \" Mr. Sinai\", \" Miss. Matilda\", \" Mr. Pastcho (\\\"Pentcho\\\")\", \" Mr. Richard Frasar\", \" Mr. Gustaf Joel\", \" Mr. Anders Vilhelm\", \" Mr. Stoytcho\", \" Mr. Tido\", \" Mr. Walter Chamberlain\", \" Miss. Hileni\", \" Mr. David John\", \" Miss. Katriina\", \" Miss. Malake\", \" Mr. Edvard\", \" Mr. Patrick\", \" Mr. William John Robert\", \" Mr. Quigg Edmond\", \" Miss. Ellis Anna Maria\", \" Mr. Stanley George\", \" Mr. Leonard Charles\", \" Mr. Nicholas\", \" Mr. Percival Wayland\", \" Mr. Martin\", \" Mr. Johan\", \" Mr. Jozef\", \" Mr. Domingos Fernandeo\", \" Mrs. Alexander A (Grace Charity Laury)\", \" Mr. Samuel James Hayden\", \" Mr. Emile\", \" Mr. Jacques Heath\", \" Mr. Olaf Elon\", \" Mr. Victor\", \" Mrs. Joseph (Sultana)\", \" Mr. Jeremiah\", \" Mr. Edgardo Samuel\", \" Mr. Joseph Charles\", \" Miss. Robina Maggie \\\"Ruby\\\"\", \" Mr. Michel (\\\"Louis M Hoffman\\\")\", \" Rev. Thomas Roussel Davids\", \" Rev. Robert James\", \" Mr. Alfonzo\", \" Mr. Austin Blyler\", \" Mr. Ole Martin\", \" Mr. Charles Duane\", \" Mr. Harry\", \" Mr. Mile\", \" Master. Thomas Henry\", \" Mr. John Hatfield\", \" Mr. John Viktor\", \" Mr. Jovo\", \" Master. Eino Viljami\", \" Mrs. William (Anna Bernhardina Karlsson)\", \" Mr. John D\", \" Mr. Lee\", \" Mr. Wyckoff\", \" Master. Arthur\", \" Mr. Antti Wilhelm\", \" Mr. James Clinch\", \" Mr. Klas Albin\", \" Master. Henry Forbes\", \" Miss. Ann Elizabeth\", \" Mr. Reginald\", \" Mr. Lionel\", \" Miss. Constance Gladys\", \" Mr. Rene\", \" Master. Clarence Gustaf Hugo\", \" Mr. Hugh Roscoe\", \" Mr. John\", \" Mr. Stjepan\", \" Mr. William\", \" Mr. Robert\", \" Mr. Karl Siegwart Andreas\", \" Miss. Henriette (\\\"Mrs Harbeck\\\")\", \" Mr. Nestor Cyriel\", \" Mr. Frederick\", \" Mr. Jakob Alfred\", \" Mr. Gerious\", \" Miss. Telma Matilda\", \" Mr. Karl Alfred\", \" Mr. Ahmed\", \" Mr. John Henry\", \" Mr. Hans Kristensen\", \" Mr. Philip\", \" Mr. Sidney Samuel\", \" Mr. Walter\", \" Mr. James H\", \" Mr. George Henry\", \" Mr. Christo\", \" Mr. Karl Ivar Sven\", \" Mr. John Hall (\\\"Henry\\\")\", \" Mr. Arne Jonas\", \" Miss. Mathilde\", \" Mr. Bengt Edvin\", \" Mr. Ernst Adolf\", \" Mr. Robert William Norman\", \" Miss. Alice Phoebe\", \" Mr. Stephen\", \" Mr. Frederick William\", \" Mr. George Henry\", \" Miss. Thamine\", \" Mr. Reginald Charles\", \" Mr. Matti Alexanteri\", \" Mr. Sleiman\", \" Dr. William Edward\", \" Miss. Agda Thorilda Viktoria\", \" Rev. Ernest Courtenay\", \" Mr. James George\", \" Mrs. Wilhelm (Elna Matilda Persson)\", \" Mr. William Thomas\", \" Mr. William Arthur\", \" Mrs. Viktor (Helena Wilhelmina)\", \" Mr. Thomas\", \" Mr. Emil\", \" Mr. William\", \" Miss. Delia\", \" Mr. David\", \" Mr. Ernesti Arvid\", \" Mr. Alexander\", \" Mr. Charles H\", \" Miss. Augusta Charlotta\", \" Mr. Francis \\\"Frank\\\"\", \" Master. Eric\", \" Mr. Frank\", \" Mr. Nils Johan Goransson\", \" Mr. Alfons\", \" Mr. Richard William\", \" Mr. Ivan\", \" Mr. Penko\", \" Mr. Rene Jacques\", \" Miss. Aloisia\", \" Mr. Ivan\", \" Mr. Ervin G\", \" Mr. Mansour\", \" Miss. Helen Loraine\", \" Mr. William Cahoone Jr\", \" Mr. Howard Hugh \\\"Harry\\\"\", \" Mr. Samuel\", \" Mrs. William (Anna Sylfven)\", \" Mr. Ignjac\", \" Mr. Benjamin\", \" Dr. Ernest\", \" Mr. Samuel\", \" Mr. Yoto\", \" Mr. George John Jr\", \" Mr. Johan Hansen\", \" Mr. Austen\", \" Mr. George Edward\", \" Mr. Leo Edmondus\", \" Mr. Mitto\", \" Mr. Thomas Clinton\", \" Mr. Stephen Weart\", \" Mr. Erik Gustaf\", \" Mr. Charles Frederick Waddington\", \" Mr. Stanley Hubert\", \" Mr. Jovan\", \" Mr. Nils Martin\", \" Mr. Fletcher Fellows\", \" Mr. Tannous\", \" Mr. Josef\", \" Mr. Wazli\", \" Mr. Leo Peter\", \" Miss. Annie Clemmer\", \" Mr. Wilhelm\", \" Mr. Sebastiano\", \" Mrs. (Catherine David)\", \" Mr. Adola\", \" Mr. Thomas\", \" Mr. Mauritz Nils Martin\", \" Mr. Jakob Alfred\", \" Mr. William Thomas\", \" Mr. Sante\", \" Miss. Stina Viola\", \" Mr. Harry Elkins\", \" Mr. Tannous\", \" Mr. Karl Gideon\", \" Mr. Juho\", \" Mr. Vasil\", \" Mr. Charles Henry\", \" Master. Sidney Leonard\", \" Mr. Matthew\", \" Mr. Johan Birger\", \" Mr. Erik\", \" Miss. Elina\", \" Mr. Peter David\", \" Dr. Alfred\", \" Mr. John\", \" Miss. Mari Aina\", \" Mr. Pekka Pietari\", \" Miss. Marija\", \" Mr. Shadrach\", \" Mr. Carl/Charles Peter\", \" Mr. Hans Martin Monsen\", \" Miss. Ida\", \" Mr. Todor\", \" Mr. Henry\", \" Mr. Alfred Fleming\", \" Mrs. Thomas (Annie Louise Rowley)\", \" Mr. William John\", \" Miss. Catharina\", \" Mr. Stanio\", \" Mr. David\", \" Mr. Leo\", \" Mrs. Ernst Gilbert (Anna Sigrid Maria Brogren)\", \" Mr. Viktor Richard\", \" Mr. Phillippe\", \" Mr. James\", \" Mr. Nikolai Erland\", \" Mr. William Baird\", \" Miss. Doolina Margaret \\\"Daisy\\\"\", \" Mr. Mark\", \" Mr. Johan Henrik Johannesson\", \" Mr. Leon\", \" Mr. Johan Emil\", \" Mr. Edwy Arthur\", \" Mr. Ingvald Olai Olsen\", \" Mr. Benjamin Laventall\", \" Mr. Joseph\", \" Mr. Francis Davis\", \" Mr. Maurice\", \" Mr. William\", \" Mr. Arthur H\", \" Mr. Jacob Christian\", \" Mr. Simon\", \" Mr. Manuel Estanslas\", \" Mr. William\", \" Mr. John Montgomery\", \" Mr. James\", \" Mr. Arthur\", \" Mr. Luka\", \" Miss. Ida Sofia\", \" Mr. George Quincy\", \" Mr. Peter Henry\", \" Mr. Lewis Richard\", \" Mr. Nils August\", \" Master. Harold Victor\", \" Mr. Anthony Wood \\\"Archie\\\"\", \" Mr. Richard Henry\", \" Miss. Jeannie\", \" Mr. Edward Austin\", \" Mr. Francis William\", \" Mr. Konrad Mathias Reiersen\", \" Mr. Einar\", \" Mr. Harry Markland\", \" Mr. Ramon\", \" Mr. Edward Roland\", \" Mr. Gerious\", \" Mr. Frederick William\", \" Mrs. Hudson J C (Bessie Waldo Daniels)\", \" Mr. Olof\", \" Mr. Petar\", \" Miss. Mary\", \" Miss. Bridget Mary\", \" Miss. Kristina Sofia\", \" Mr. Victor de Satode\", \" Mr. Henry Margido\", \" Mr. James\", \" Mr. Satio\", \" Mr. William Anderson\", \" Mr. Patrick\", \" Mr. Stefo\", \" Mr. Janko\", \" Mr. Sarkis\", \" Mr. Fared\", \" Mr. James\", \" Mr. John\", \" Mr. Johan Werner\", \" Mr. Richard George\", \" Mr. Nakli\", \" Mr. Joseph Jr\", \" Miss. Marija\", \" Major. Archibald Willingham\", \" Mr. Samuel Beard\", \" Miss. Ingeborg Constanzia\", \" Miss. Sigrid Elisabeth\", \" Mr. Walter Donald\", \" Mr. Arthur Ernest\", \" Mr. Frank John\", \" Mr. Percival James R\", \" Mr. Timothy\", \" Mr. George\", \" Mr. Victor\", \" Mr. Thomas Rowan\", \" Mr. Husein\", \" Mr. Robert Douglas\", \" Mr. John\", \" Miss. (Marion Ogden)\", \" Mr. Alfred J\", \" Mr. Ilia\", \" Mrs. Nils (Alma Cornelia Berglund)\", \" Mr. Tannous\", \" Mr. Alfred George John\", \" Mr. George\", \" Mrs. Joseph (Maria Elias)\", \" Mr. William James\", \" Mr. John Hugo\", \" Mr. Uscher\", \" Mr. John Denzil\", \" Mr. Eliezer\", \" Mr. Joseph\", \" Mr. Matti\", \" Mr. William James\", \" Miss. Mary\", \" Mr. John Henry\", \" Mr. Jean Baptiste\", \" Mr. Alfred\", \" Mr. Hanna\", \" Mr. Petco\", \" Mr. Charles H\", \" Mr. Ernst William\", \" Mr. Edvard Bengtsson\", \" Mr. Milan\", \" Mrs. Anders Johan (Alfrida Konstantia Brogren)\", \" Mr. Jose Neto\", \" Mr. John\", \" Mr. William Alfred\", \" Mr. Ernst Gilbert\", \" Mrs. William Arthur (Cordelia K Stanlick)\", \" Mr. Lawrence\", \" Mr. Antoni\", \" Mr. Henry Damsgaard\", \" Mr. David John \\\"Dai\\\"\", \" Mr. Frederick\", \" Rev. Charles Leonard\", \" Mr. Guentcho\", \" Mr. Patrick D\", \" Mr. Johan Svensson\", \" Mr. William Henry Marsh\", \" Miss. Mabel\", \" Mr. Antti Gustaf\", \" Mr. Harvey\", \" Mrs. Juha (Maria Emilia Ojala)\", \" Mr. Percival\", \" Mr. Hans Peder\", \" Miss. Margit Elizabeth\", \" Mr. Liudevit\", \" Mr. Edward\", \" Mr. Mito\", \" Mr. Johannes Halvorsen\", \" Miss. Hanora \\\"Nora\\\"\", \" Mr. Leonard Mark\", \" Mr. Alexander\", \" Mrs. John (Catherine)\", \" Mr. George Floyd\", \" Mr. Arthur Webster\", \" Mr. Mohamed\", \" Mr. Edward Pomeroy\", \" Mr. Peju\", \" Mr. Lewis\", \" Mr. Reginald Fenton\", \" Mr. Knud Paust\", \" Mr. Jacob\", \" Mr. Thornton\", \" Mr. Henry Michael\", \" Mr. Ennis Hastings\", \" Mr. Gustaf Hjalmar\", \" Mr. Frederick Charles\", \" Mrs. Frederick (Augusta Tyler)\", \" Miss. Katie\", \" Mr. Thor Anderson\", \" Mr. Charles Edward\", \" Mr. Thomas William Solomon\", \" Mr. Joseph Philippe Lemercier\", \" Mr. Jaako Arnold\", \" Mr. Branko\", \" Mr. Eberhard Thelander\", \" Mr. Khalil\", \" Col. John\", \" Mr. Charles Henry\", \" Mr. James\", \" Mr. John Borland\", \" Mr. Adolf Mathias Nicolai Olsen\", \" Miss. Saiide\", \" Mr. Martin\", \" Mr. Henrik Juul\", \" Mr. Henry Samuel (\\\"Mr Henry Marshall\\\")\", \" Mr. Herman\", \" Mr. August Viktor\", \" Mr. Samuel\", \" Mr. Peter Andreas Lauritz Andersen\", \" Mr. Michael\", \" Mr. Malkolm Joackim\", \" Mr. Svend Lauritz\", \" Mr. William Henry\", \" Mr. Henry Price\", \" Mr. Luka\", \" Mr. Kurt Arnold Gottfrid\", \" Miss. Pieta Sofia\", \" Mr. Houssein G N\", \" Mr. Robert J\", \" Mr. William John\", \" Mr. Moses Aaron\", \" Mr. Leslie\", \" Mrs. Edward (Margaret Ann Watson)\", \" Mr. Kanio\", \" Mr. Minko\", \" Mr. Tyrell William\", \" Mr. Neal\", \" Capt. Edward Gifford\", \" Mr. Rossmore Edward\", \" Mr. Daniel Warner\", \" Mr. Michael\", \" Mr. Johannes Joseph\", \" Mr. Lalio\", \" Mr. August Sigfrid\", \" Mr. Percy Andrew\", \" Mr. Thomas Leonard\", \" Mr. John\", \" Mr. Iisakki Antino Aijo\", \" Mr. Hans Linus\", \" Dr. Arthur Jackson\", \" Miss. Mary\", \" Mr. Daniel J\", \" Mr. Daniel Danielsen\", \" Mr. Rene Aime\", \" Mr. Niels Peder\", \" Mrs. (Mary)\", \" Mr. Dibo\", \" Mr. Pehr Fabian Oliver Malkolm\", \" Mr. Roger\", \" Mr. Thomas J\", \" Mr. Milton Clyde\", \" Mr. Andrew G\", \" Mr. William\", \" Mr. Abraham (David Lishin)\", \" Master. George Hugh\", \" Mr. Benjamin\", \" Mr. Andrew \\\"Andy\\\"\", \" Mr. Alfred\", \" Miss. Stella Anna\", \" Mr. William Fisher\", \" Mr. Ristiu\", \" Mr. Richard\", \" Mr. Yousseff\", \" Mrs. Jean Baptiste (Rosalie Paula Govaert)\", \" Mr. Martin\", \" Mr. Karl Johan\", \" Mr. Thomas Jr\", \" Miss. Ellen Natalia\", \" Mr. August\", \" Mr. William\", \" Mr. James\", \" Mr. Richard James\", \" Miss. Ebba Iris Alfrida\", \" Mr. Ernest Portage\", \" Mr. Richard\", \" Miss. Wendla Maria\", \" Mr. Albert\", \" Mr. John Fredrik Alexander\", \" Master. Karl Thorsten\", \" Jonkheer. John George\", \" Master. Urho Abraham\", \" Mr. John\", \" Mr. Len\", \" Mr. Amin\", \" Mr. Albert\", \" Mr. Owen George\", \" Mr. Jakob\", \" Mr. Maurice\", \" Mr. Ilmari Rudolf\", \" Mr. Thomas Charles\", \" Mr. Peter L\", \" Mr. Jeso\", \" Mr. Anthony\", \" Mr. Douglas Bullen\", \" Mr. Marin\", \" Rev. John\", \" Master. Sigvard Harald Elias\", \" Mr. Johan\", \" Miss. Nourelain\", \" Mrs. Ernest Courtenay (Lilian Hughes)\", \" Mr. Raihed\", \" Mr. Claus Peter\", \" Mr. Frederick Edward\", \" Miss. Dorothy Edith \\\"Dolly\\\"\", \" Mr. John William\", \" Mr. Washington Augustus II\", \" Mr. Philemon\", \" Mr. Cerin\", \" Mr. Frans Olof\", \" Mr. Victor\", \" Mr. Alfred Ossian\", \" Mr. Nedelio\", \" Mr. Kristo\", \" Mr. Johann\", \" Miss. Gerda Ulrika\", \" Mr. Frederick James\", \" Mr. Henry Jr\", \" Mrs. William (Margaret Norton)\", \" Rev. Juozas\", \" Miss. Catherine Helen \\\"Carrie\\\"\", \" Mr. Patrick\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Age=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [38.0, 26.0, 35.0, 27.0, 14.0, 4.0, 58.0, 55.0, 29.5, 22.0, 34.0, 15.0, 28.0, 38.0, 22.0, 36.0, 22.0, 25.0, 14.0, 3.0, 19.0, 22.0, 49.0, 29.0, 42.0, 21.0, 5.0, 38.0, 25.0, 29.0, 17.0, 32.0, 0.83, 30.0, 29.0, 22.0, 17.0, 33.0, 23.0, 23.0, 34.0, 21.0, 25.0, 22.0, 32.5, 12.0, 24.0, 22.0, 29.0, 19.0, 22.0, 24.0, 27.0, 22.0, 16.0, 40.0, 9.0, 36.0, 1.0, 1.0, 4.0, 22.0, 45.0, 32.0, 19.0, 3.0, 44.0, 58.0, 22.0, 18.0, 26.0, 16.0, 40.0, 35.0, 31.0, 27.0, 32.0, 16.0, 38.0, 19.0, 35.0, 5.0, 8.0, 22.0, 24.0, 37.0, 29.0, 36.0, 30.0, 35.0, 50.0, 3.0, 25.0, 58.0, 35.0, 25.0, 41.0, 22.0, 63.0, 35.0, 19.0, 30.0, 42.0, 22.0, 26.0, 19.0, 42.0, 50.0, 22.0, 25.0, 28.0, 0.92, 36.0, 17.0, 30.0, 24.0, 18.0, 26.0, 24.0, 31.0, 40.0, 30.0, 22.0, 36.0, 36.0, 31.0, 16.0, 22.0, 36.0, 41.0, 45.0, 2.0, 24.0, 24.0, 40.0, 22.0, 3.0, 22.0, 22.0, 22.0, 60.0, 22.0, 22.0, 24.0, 25.0, 36.0, 22.0, 42.0, 1.0, 35.0, 36.0, 17.0, 36.0, 21.0, 23.0, 24.0, 28.0, 39.0, 3.0, 33.0, 44.0, 34.0, 18.0, 28.0, 19.0, 32.0, 28.0, 22.0, 42.0, 14.0, 24.0, 45.0, 28.0, 25.0, 4.0, 13.0, 34.0, 5.0, 52.0, 49.0, 29.0, 36.0, 50.0, 48.0, 0.75, 33.0, 23.0, 2.0, 63.0, 25.0, 35.0, 9.0, 54.0, 16.0, 33.0, 42.0, 26.0, 29.0, 36.0, 54.0, 34.0, 36.0, 30.0, 44.0, 50.0, 2.0, 22.0, 7.0, 30.0, 22.0, 36.0, 32.0, 19.0, 29.5, 8.0, 17.0, 22.0, 22.0, 48.0, 39.0, 36.0, 32.0, 62.0, 53.0, 36.0, 22.0, 34.0, 39.0, 32.0, 25.0, 39.0, 18.0, 60.0, 52.0, 28.0, 49.0, 24.0, 35.0, 27.0, 22.0, 40.0, 22.0, 24.0, 4.0, 42.0, 20.0, 21.0, 80.0, 32.0, 28.0, 24.0, 25.0, 0.75, 48.0, 56.0, 23.0, 18.0, 22.0, 50.0, 20.0, 36.0, 40.0, 31.0, 18.0, 36.0, 27.0, 15.0, 31.0, 4.0, 25.0, 22.0, 18.0, 35.0, 45.0, 42.0, 22.0, 25.0, 24.0, 48.0, 38.0, 27.0, 6.0, 27.0, 30.0, 22.0, 29.0, 35.0, 42.0, 21.0, 31.0, 30.0, 4.0, 6.0, 48.0, 0.67, 33.0, 20.0, 36.0, 51.0, 54.0, 5.0, 43.0, 13.0, 17.0, 18.0, 1.0, 49.0, 31.0, 31.0, 11.0, 0.42, 27.0, 33.0, 52.0, 27.0, 27.0, 1.0, 25.0, 62.0, 15.0, 0.83, 39.0, 32.0, 42.0, 30.0, 36.0, 16.0, 18.0, 45.0, 51.0, 24.0, 48.0, 42.0, 27.0, 4.0, 47.0, 28.0, 15.0, 56.0, 25.0, 19.0, 26.0], \"xaxis\": \"x\", \"y\": [\" Mrs. John Bradley (Florence Briggs Thayer)\", \" Miss. Laina\", \" Mrs. Jacques Heath (Lily May Peel)\", \" Mrs. Oscar W (Elisabeth Vilhelmina Berg)\", \" Mrs. Nicholas (Adele Achem)\", \" Miss. Marguerite Rut\", \" Miss. Elizabeth\", \" Mrs. (Mary D Kingcome) \", \" Mr. Charles Eugene\", \" Mrs. Fatima\", \" Mr. Lawrence\", \" Miss. Anna \\\"Annie\\\"\", \" Mr. William Thompson\", \" Mrs. Carl Oscar (Selma Augusta Emilia Johansson)\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. William Augustus (Marie Eugenie)\", \" Miss. Mary Agatha\", \" Mr. Hanna\", \" Miss. Jamila\", \" Miss. Simonne Marie Anne Andree\", \" Miss. Margaret Delia\", \" Miss. Bridget\", \" Mrs. Henry Sleeper (Myna Haxtun)\", \" Mrs. Lizzie (Elizabeth Anne Wilkinson)\", \" Mr. Hugh\", \" Miss. Emily\", \" Miss. Constance Mirium\", \" Miss. Amelie\", \" Master. Gerios\", \" Mrs. (Elizabeth Ramell)\", \" Miss. Erna Alexandra\", \" Mr. Lee\", \" Master. Alden Gates\", \" Miss. Elizabeth\", \" Mr. Jan Baptist\", \" Miss. Brigdet Delia\", \" Miss. Bertha\", \" Mrs. Karl Alfred (Maria Mathilda Gustafsson)\", \" Miss. Mabel Helen\", \" Mr. William Bertram\", \" Mrs. John T (Ada Julia Bone)\", \" Miss. Anna Kristine\", \" Mr. Albert Johan\", \" Miss. Bertha\", \" Miss. Susan\", \" Master. Elias\", \" Mr. Fridtjof Arne\", \" Miss. Anna\", \" Mrs. Leopold (Mathilde Francoise Pede)\", \" Miss. Helen Monypeny\", \" Miss. Anna Sofia\", \" Mrs. Pekka Pietari (Elin Matilda Dolck)\", \" Mr. August Edvard (\\\"Wennerstrom\\\")\", \" Mrs. Thomas (Edith Wearne)\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \" Master. Frank John William \\\"Frankie\\\"\", \" Mrs. (Edith Martha Bowerman)\", \" Miss. Eleanor Ileen\", \" Master. Richard F\", \" Miss. Luise Gretchen\", \" Mrs. Thomas (Johanna \\\"Hannah\\\" Godfrey)\", \" Mr. Charles Hallace (\\\"Mr C Rolmane\\\")\", \" Mrs. (Rosa)\", \" Miss. Carla Christine Nielsine\", \" Master. Michel M\", \" Mrs. James Joseph (Margaret Tobin)\", \" Miss. Elise\", \" Miss. Margaret \\\"Maggie\\\"\", \" Mr. Gurshon \\\"Gus\\\"\", \" Mr. Nassef Cassem\", \" Miss. Helen \\\"Ellen\\\"\", \" Mr. Henry\", \" Miss. Clear Annie\", \" Miss. Madeleine\", \" Miss. Eliina\", \" Miss. Albina\", \" Mr. Victor Francis\", \" Mr. Frederick Maxfield\", \" Mr. William John\", \" Mrs. Henry Birkhardt (Irene Wallach)\", \" Miss. Lillian Gertrud\", \" Miss. Marjorie \\\"Lottie\\\"\", \" Miss. Katherine \\\"Kate\\\"\", \" Mrs. William (Anna)\", \" Mr. Richard Leonard\", \" Mrs. Darwis (Hanne Youssef Razi)\", \" Mrs. Gertrude Maybelle\", \" Miss. Gladys\", \" Miss. Anna\", \" Mrs. (Lutie Davis)\", \" Master. Edvin Rojj Felix\", \" Mr. Ernst Ulrik\", \" Mrs. William Thompson (Edith Junkins)\", \" Miss. Amelia\", \" Mr. William Henry\", \" Mrs. (Elizabeth Anne Maidment)\", \" Miss. Hanora \\\"Nora\\\"\", \" Miss. Kornelia Theodosia\", \" Mrs. Stanton (Rosa Hunt)\", \" Mr. Edward Arthur\", \" Mr. Theodore\", \" Mr. Masabumi\", \" Miss. Kate\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. Dickinson H (Helen Walton)\", \" Mr. Adolphe\", \" Mrs. James (Helene DeLaudeniere Chaput)\", \" Miss. Anna Katherine \\\"Annie Kate\\\"\", \" Mr. Bernard\", \" Miss. Nora A\", \" Master. Hudson Trevor\", \" Miss. Margaret\", \" Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \" Miss. Laura Mabel\", \" Miss. Margaret Bechstein\", \" Miss. Emily Borie\", \" Miss. Helmina Josefina\", \" Mrs. Sinai (Miriam Sternin)\", \" Miss. Mary Natalie\", \" Mrs. Frederic Oakley (Margaretta Corning Stone)\", \" Miss. Hilda Mary\", \" Mrs. Albert Francis (Sylvia Mae Harbaugh)\", \" Miss. Marie Grice\", \" Mrs. (Ada E Hall)\", \" Mrs. Frank John (Emily Alice Brown)\", \" Miss. Jean Gertrude\", \" Miss. Agnes\", \" Mrs. Henry William (Clara Heinsheimer)\", \" Miss. Elizabeth Margaret\", \" Mr. Karl Edwart\", \" Master. Edmond Roger\", \" Miss. Alice Elizabeth\", \" Miss. Amelia \\\"Mildred\\\"\", \" Miss. Marion Elsie\", \" Mrs. Thomas Henry (Mary E Finck)\", \" Master. William Loch \\\"William\\\"\", \" Miss. Elsie Edith\", \" Miss. Mary\", \" Miss. Helen Mary \\\"Ellie\\\"\", \" Mrs. Frank Manley (Anna Sophia Atkinson)\", \" Mrs. (Mantoura Boulos)\", \" Miss. Annie\", \" Mme. Leontine Pauline\", \" Mr. George Achilles\", \" Mrs. Edgar Joseph (Leila Saks)\", \" Miss. Aurora Adelia\", \" Miss. Rosalie\", \" Miss. Maria (\\\"Mary\\\")\", \" Mrs. Alexander Oskar (Mary Aline Towner)\", \" Miss. Kate\", \" Miss. Bertha\", \" Mr. William Ernest\", \" Mr. Carl Olof\", \" Miss. Marjorie\", \" Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \" Mrs. William H (Jessie L)\", \" Mr. Juha\", \" Master. William Rowe\", \" Miss. Daisy E\", \" Mr. Johan Julian\", \" Mrs. James Vivian (Lulu Thorne Christian)\", \" Miss. Lyyli Karoliina\", \" Mrs. Charles V (Ada Maria Winfield)\", \" Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\", \" Mr. Berk (Berk Trembisky)\", \" Mr. Mauritz Hakan\", \" Mrs. Percival (Florence Kate White)\", \" Mrs. Charles Alexander (Alice Adelaide Slow)\", \" Miss. Lucile Polk\", \" Mrs. Sidney (Emily Hocking)\", \" Mrs. Benjamin (Esther Ada Bloomfield)\", \" Ms. Encarnacion\", \" Mr. Bernt\", \" Master. Washington\", \" Miss. Madeleine Violet\", \" Mr. Frederic Kimber\", \" Miss. Marie Catherine\", \" Major. Arthur Godfrey\", \" Mr. Samuel L\", \" Mr. Ivan\", \" Mrs. Frederick R (Marion)\", \" Miss. Ellen\", \" Mr. Harry\", \" Miss. Helene Barbara\", \" Mrs. Edwy Arthur (Ada Mary Worth)\", \" Mrs. Amin S (Marie Marthe Thuillard)\", \" Miss. Hildur E\", \" Mrs. (Hedwig)\", \" Mr. Dickinson H\", \" Mrs. Frederick Maxfield (Jane Anne Forby)\", \" Master. Eden Leslie \\\"Neville\\\"\", \" Miss. Elizabeth Mussey\", \" Miss. Roberta\", \" Mrs. Frederick Charles (Jane Richards)\", \" Mr. George (\\\"George Arthur Brayton\\\")\", \" Mr. Fang\", \" Mr. Eugene Patrick\", \" Mr. James Robert\", \" Mrs. Martin (Elizabeth L. Barrett)\", \" Mrs. (Amelia Milley)\", \" Mrs. William A (Florence \\\"Mary\\\" Agnes Hughes)\", \" Miss. Anne\", \" Mrs. Louis Albert (Ida Sophia Fischer)\", \" Miss. Lucy\", \" Miss. Phyllis May\", \" Mrs. Catherine (Catherine Rizk)\", \" Miss. Eva Miriam\", \" Miss. Bertha\", \" Miss. Hedwig Margaritha\", \" Miss. Harriet R\", \" Mr. Edward\", \" Mrs. Edward (Ethel Clarke)\", \" Mr. Julian\", \" Master. John Morgan Jr\", \" Mr. John Borland Jr\", \" Mr. Fahim (\\\"Philip Zenni\\\")\", \" Miss. Velin\", \" Lady. (Lucille Christiana Sutherland) (\\\"Mrs Morgan\\\")\", \" Mrs. Emil (Tillie Mandelbaum)\", \" Mrs. Guillaume Joseph (Emma)\", \" Mr. Carl\", \" Mr. George\", \" Mrs. Edward Dale (Charlotte Lamson)\", \" Mr. John Irwin (\\\"Irving\\\")\", \" Miss. Mary\", \" Miss. Ethel\", \" Mrs. William Baird (Alice Munger)\", \" Mr. Eiriik\", \" Miss. Julie Rachel\", \" Mrs. John Borland (Marian Longstreth Morris)\", \" Miss. Ruth\", \" Mr. Maxmillian\", \" Mrs. Walter Bertram (Martha Eustis)\", \" Miss. Jessie Wills\", \" Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \" Mrs. Sidney Samuel (Amy Frances Christy)\", \" Mr. Harry (\\\"Mr E Haven\\\")\", \" Mr. Robert Williams\", \" Mrs. Joseph (Juliette Marie Louise Lafargue)\", \" Miss. Elizabeth W\", \" Miss. Margaret Jane\", \" Miss. Alice\", \" Miss. Marion Louise\", \" Mr. Edwin Nelson Jr\", \" Mr. Sahid\", \" Miss. Gretchen Fiske\", \" Mr. Algernon Henry Wilson\", \" Dr. Max\", \" Miss. Mary\", \" Mlle. Emma\", \" Mr. Choong\", \" Miss. Eugenie\", \" Mr. Henry Sleeper\", \" Col. Oberst Alfons\", \" Miss. Amy Zillah Elsie\", \" Miss. Elsie\", \" Miss. Hanora \\\"Norah\\\"\", \" Dr. Henry William\", \" Mr. Eino William\", \" Mrs. Elmer Zebley (Juliet Cummins Wright)\", \" Mrs. Thomas William Solomon (Elizabeth Catherine Ford)\", \" Mr. Charles\", \" Miss. Anna Sofia\", \" Mr. Thomas Drake Martinez\", \" Mr. Hammad\", \" Miss. Georgette Alexandra\", \" Mr. Albert Adrian\", \" Miss. Manca\", \" Mr. Ali\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. John Jacob (Madeleine Talmadge Force)\", \" Mr. Spencer Victor\", \" Mrs. Florence \\\"Fannie\\\"\", \" Mr. Edward Pennington\", \" Miss. Alice\", \" Master. Halim Gonios (\\\"William George\\\")\", \" Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \" Mr. Elmer Zebley\", \" Miss. Caroline Louise\", \" Miss. Edwina Celia \\\"Winnie\\\"\", \" Miss. Annie Jessie \\\"Nina\\\"\", \" Mr. Norman Campbell\", \" Mrs. Peter Henry (Lillian Jefferys)\", \" Miss. Margareth\", \" Miss. Elisabeth Walton\", \" Mr. Gustave J\", \" Mr. Walter James\", \" Miss. Susan Parker \\\"Suzette\\\"\", \" Mr. Juho\", \" Miss. Anna\", \" Miss. Joan\", \" Master. Meier\", \" Mrs. Samuel (Jane Laver)\", \" Master. Viljo\", \" the Countess. of (Lucy Noel Martha Dyer-Edwards)\", \" Mr. Hanna Assi\", \" Mrs. William Ernest (Lucile Polk)\", \" Mrs. John C (Anna Andrews)\", \" Mrs. Elizabeth (Eliza Needs)\", \" Miss. Virginia Ethel\", \" Mrs. Edward Scott (Elisabeth Walton McMillan)\", \" Miss. Banoura\", \" Mrs. Albert Adrian (Vera Gillespie)\", \" Miss. Anna Sofia\", \" Master. Bertram Vere\", \" Dr. Alice (Farnham)\", \" Mrs. Mara\", \" Mrs. Harvey (Charlotte Annie Tate)\", \" Master. William Thornton II\", \" Master. Assad Alexander\", \" Mr. Oskar Arvid\", \" Mrs. Norman Campbell (Bertha Griggs)\", \" Mrs. Charles Melville (Clara Jennings Gregg)\", \" Mr. Nikola\", \" Mrs. (Beila)\", \" Master. Andre\", \" Mr. Thomas Joseph\", \" Mrs. George Nelson (Martha Evelyn)\", \" Mrs. Antoni (Selini Alexander)\", \" Master. George Sibley\", \" Miss. Sara Rebecca\", \" Mr. Chang\", \" Mr. Pierre\", \" Miss. Augusta\", \" Mrs. Samuel L (Edwiga Grabowska)\", \" Miss. Mary Conover\", \" Mrs. Sam (Leah Rosen)\", \" Mrs. George Dennick (Mary Hitchcock)\", \" Mr. Peter Denis \", \" Mrs. Solomon (Latifa Qurban)\", \" Mrs. Frederick Joel (Margaret Welles Barron)\", \" Mrs. (Karolina)\", \" Miss. Asuncion\", \" Master. Harold Theodor\", \" Mrs. Richard Leonard (Sallie Monypeny)\", \" Mrs. Samuel (Hannah Wizosky)\", \" Miss. Adele Kiamie \\\"Jane\\\"\", \" Mrs. Thomas Jr (Lily Alexenia Wilson)\", \" Mrs. William (Imanita Parrish Hall)\", \" Miss. Margaret Edith\", \" Mr. Karl Howell\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Age=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0, 25.0, 46.0, 23.0, 63.0, 47.0, 24.0, 35.0, 21.0, 27.0, 45.0, 55.0, 9.0, 36.0, 21.0, 48.0, 50.0, 22.0, 22.5, 41.0, 25.0, 50.0, 24.0, 33.0, 22.0, 30.0, 18.5, 22.0, 21.0, 25.0, 25.0, 39.0, 42.0, 41.0, 30.0, 45.0, 25.0, 45.0, 25.0, 60.0, 36.0, 24.0, 27.0, 20.0, 28.0, 29.5, 10.0, 35.0, 25.0, 25.0, 36.0, 17.0, 32.0, 18.0, 22.0, 13.0, 28.0, 18.0, 47.0, 31.0, 60.0, 24.0, 21.0, 29.0, 28.5, 35.0, 32.5, 25.0, 55.0, 30.0, 24.0, 6.0, 67.0, 49.0, 25.0, 29.5, 25.0, 27.0, 18.0, 22.0, 2.0, 22.0, 25.0, 27.0, 25.0, 25.0, 25.0, 76.0, 29.0, 20.0, 33.0, 43.0, 27.0, 25.0, 26.0, 16.0, 28.0, 21.0, 25.0, 25.0, 18.5, 41.0, 22.0, 36.0, 18.5, 63.0, 18.0, 25.0, 1.0, 36.0, 29.0, 12.0, 25.0, 35.0, 28.0, 25.0, 17.0, 22.0, 22.0, 42.0, 24.0, 32.0, 53.0, 22.0, 25.0, 43.0, 24.0, 26.5, 26.0, 23.0, 40.0, 10.0, 33.0, 61.0, 28.0, 42.0, 31.0, 42.0, 22.0, 42.0, 30.0, 23.0, 25.0, 60.5, 36.0, 13.0, 24.0, 29.0, 23.0, 42.0, 26.0, 22.0, 7.0, 26.0, 25.0, 41.0, 26.0, 48.0, 18.0, 36.0, 22.0, 25.0, 27.0, 23.0, 25.0, 40.0, 15.0, 20.0, 54.0, 36.0, 64.0, 30.0, 37.0, 18.0, 25.0, 27.0, 40.0, 21.0, 17.0, 22.0, 40.0, 34.0, 42.0, 11.5, 61.0, 8.0, 33.0, 6.0, 18.0, 23.0, 22.0, 22.0, 0.33, 47.0, 8.0, 25.0, 42.0, 35.0, 24.0, 33.0, 25.0, 32.0, 25.0, 17.0, 60.0, 38.0, 42.0, 22.0, 57.0, 50.0, 25.0, 30.0, 21.0, 22.0, 21.0, 53.0, 22.0, 23.0, 22.0, 40.5, 36.0, 14.0, 21.0, 21.0, 25.0, 39.0, 20.0, 64.0, 20.0, 18.0, 48.0, 55.0, 45.0, 45.0, 25.0, 25.0, 41.0, 22.0, 42.0, 29.0, 22.0, 0.92, 20.0, 27.0, 24.0, 32.5, 25.0, 25.0, 28.0, 19.0, 21.0, 36.5, 21.0, 29.0, 1.0, 30.0, 25.0, 42.0, 25.0, 22.0, 17.0, 46.0, 25.0, 26.0, 22.0, 25.0, 20.0, 28.0, 40.0, 30.0, 22.0, 23.0, 0.75, 22.0, 9.0, 2.0, 36.0, 25.0, 24.0, 25.0, 25.0, 42.0, 30.0, 25.0, 53.0, 36.0, 26.0, 1.0, 25.0, 30.0, 29.0, 32.0, 29.5, 43.0, 24.0, 22.0, 64.0, 30.0, 0.83, 55.0, 45.0, 18.0, 22.0, 25.0, 37.0, 55.0, 17.0, 57.0, 19.0, 27.0, 22.0, 26.0, 25.0, 26.0, 33.0, 39.0, 23.0, 12.0, 46.0, 29.0, 21.0, 48.0, 39.0, 25.0, 19.0, 27.0, 30.0, 32.0, 39.0, 25.0, 25.0, 18.0, 32.0, 25.0, 58.0, 25.0, 16.0, 26.0, 38.0, 24.0, 31.0, 45.0, 25.0, 18.0, 49.0, 0.17, 50.0, 59.0, 25.0, 25.0, 30.0, 14.5, 24.0, 31.0, 27.0, 25.0, 22.0, 25.0, 22.0, 45.0, 29.0, 21.0, 31.0, 49.0, 44.0, 54.0, 45.0, 22.0, 21.0, 55.0, 5.0, 25.0, 26.0, 22.0, 19.0, 29.5, 24.0, 24.0, 57.0, 21.0, 6.0, 23.0, 51.0, 13.0, 47.0, 29.0, 18.0, 24.0, 48.0, 22.0, 31.0, 30.0, 38.0, 22.0, 17.0, 43.0, 20.0, 23.0, 50.0, 22.0, 3.0, 22.0, 37.0, 28.0, 25.0, 39.0, 38.5, 25.0, 25.0], \"xaxis\": \"x\", \"y\": [\" Mr. James\", \" Mrs. James (Ellen Needs)\", \" Mr. Thomas Francis\", \" Mr. Albert\", \" Mrs. Alexander (Helga E Lindqvist)\", \" Mr. Johan Cervin\", \" Miss. Kate\", \" Mr. Albert Francis\", \" Mrs. Joseph (Sophie Halaut Easu)\", \" Mr. John Samuel\", \" Mr. Ylio\", \" Mr. Charles Cresson\", \" Mrs. John Pillsbury (Nelle Stevenson)\", \" Mr. Benjamin\", \" Mrs. Herbert Fuller (Carrie Constance Toogood)\", \" Mrs. Sebastiano (Argenia Genovesi)\", \" Mr. Daniel\", \" Mr. Gerios\", \" Miss. Ida Livija\", \" Mrs. Mariana (Miriam\\\")\\\"\", \" Mr. Martin\", \" Master. Artur Karl\", \" Mrs. Alfred (Antoinette)\", \" Mr. Richard Norris II\", \" Mrs. Arthur Larned (Emily Maria Borie)\", \" Mr. Alexander A\", \" Miss. Helene Ragnhild\", \" Mr. Shedid\", \" Mr. John Bertram\", \" Mr. Elias\", \" Mr. Charles Alexander\", \" Mr. Clifford Thomas\", \" Mrs. Bertram (Eva Georgetta Light)\", \" Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \" Mr. Philipp Edmund\", \" Mr. Vassilios (Catavelas Vassilios\\\")\\\"\", \" Miss. Sarah A\", \" Miss. Manda\", \" Mr. Julius\", \" Mr. Ling\", \" Mr. Franz\", \" Mr. Thomas Parham\", \" Mr. Nathan\", \" Mrs. Walter H (Irene Colvin)\", \" Mrs. Edwin Nelson Jr (Gertrude Parsons)\", \" Mr. Nikolai Johannes\", \" Mr. Paul Romaine\", \" Mr. Patrick\", \" Mrs. William Robert (Emma Eliza Ward)\", \" Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \" Mr. Lucien Philip\", \" Mr. Franz\", \" Miss. Ellen Nellie\\\"\\\"\", \" Miss. Ethel Flora\", \" Mr. Serafino Emilio\", \" Master. Albert\", \" Mr. Bartol\", \" Mr. Olaus Jorgensen\", \" Mr. Thomas Henry\", \" Miss. Victorine\", \" Mr. Mirko\", \" Mr. Arthur Gordon\", \" Mr. Ernst Herbert\", \" Miss. Bridget Delia\", \" Master. John Borie\", \" Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \" Miss. Mary Delia\", \" Mr. Clarence Bloomfield\", \" Mr. Gilbert Milligan Jr\", \" Mrs. Mark (Mary McDougald)\", \" Miss. Bertha E\", \" Mr. Lazar\", \" Miss. Manta Josefina\", \" Mr. Servando\", \" Miss. Amalie\", \" Mr. Edwin\", \" Mr. Frank\", \" Mrs. Robert Clifford (Malvina Helen Lamson)\", \" Mr. Charles Augustus\", \" Miss. Elizabeth\", \" Master. Akar\", \" Mr. Isidor\", \" Mr. Howard Brown\", \" Mr. Marinko\", \" Mr. John Joseph\", \" Mr. Betros\", \" Miss. Julia\", \" Miss. Emily Louisa\", \" Ms. Bridget\", \" Master. Ralph Lester\", \" Mrs. Adolf Fredrik (Anna Elisabeth Judith Andersson)\", \" Mr. Olaf\", \" Mrs. Thornton (Orian Hays)\", \" Mr. Robert\", \" Mr. Jakob\", \" Mr. Gunnar Isidor\", \" Mrs. Tyrell William (Julia Florence Siegel)\", \" Mr. Kalle Edvard\", \" Miss. Elin Ester Maria\", \" Mr. William Henry\", \" Mrs. Charles Emil Henry (Annie May Morris)\", \" Mr. Leopold\", \" Mr. William\", \" Mr. Oskar Leander\", \" Mrs. Alexander (Thamine Thelma\\\")\\\"\", \" Mr. Johan Martin\", \" Mr. Daniel\", \" Mr. Edward\", \" Mr. Aaron (Abi Weller\\\")\\\"\", \" Mr. George\", \" Mr. Samuel Ward\", \" Miss. Ellen Natalia\", \" Miss. Edith Corse\", \" Miss. Katherine\", \" Mrs. Isidor (Rosalie Ida Blun)\", \" Mr. Demetrios\", \" Mr. John\", \" Miss. Beatrice Irene\", \" Mr. Thomson\", \" Mrs. John Henry (Sara Elizabeth Lawry)\", \" Miss. Bertha J\", \" Mr. John\", \" Mrs. Paul (Emma Mock)\", \" Mr. Alfred John\", \" Mr. John\", \" Miss. Laura Alice\", \" Mr. Karl Rudolf\", \" Miss. Alicia\", \" Mr. Solomon\", \" Mr. Marius\", \" Mr. Henry John\", \" Col. Archibald IV\", \" Mrs. Frank (Frances)\", \" Mr. Charles P\", \" Mr. Valtcho\", \" Mr. Carl Robert\", \" Mr. Mapriededer\", \" Mr. August\", \" Miss. Jennie\", \" Mr. Charles Frederick\", \" Miss. Jessie Allis\", \" Miss. Sarah\", \" Mr. Arthur Larned\", \" Mr. Henry James\", \" Mr. Erik Gustaf (Mr Edward Lingrey\\\")\\\"\", \" Mr. Julius\", \" Mr. Herbert Henry\", \" Mr. Evan\", \" Mr. John Bertram\", \" Rev. William\", \" Mrs. Boulton (Olive Potter)\", \" Mr. Nicola\", \" Mr. Thomas\", \" Mrs. (Hulda Kristina Eugenia Lofqvist)\", \" Master. Filip Oscar\", \" Mr. Joseph\", \" Miss. Ellen\", \" Miss. Olga Elida\", \" Mr. John James\", \" Mrs. Benjamin (Edith Nile)\", \" Miss. Julia\", \" Master. Georges Youssef\", \" Miss. Marion\", \" Mr. Ernest\", \" Rev. Joseph Maria\", \" Mrs. Anton (Luise Heilmann)\", \" Mr. Emil\", \" Mr. Edward Watson\", \" Mrs. Henry Arthur Jr (Eleanor Genevieve Fosdick)\", \" Miss. Hilda Maria\", \" Mr. Simon\", \" Mr. Ortin\", \" Mr. Adolf Fredrik\", \" Mr. Assad\", \" Mr. Carl Oscar Vilhelm Gustafsson\", \" Miss. Edith Eileen\", \" Miss. Maude\", \" Mr. Charles Emil Henry\", \" Mrs. Allen Oliver (Nellie E Baumgardner)\", \" Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \" Mr. James Matthew\", \" Mr. Alexander Taylor Jr\", \" Mrs. Daniel Warner (Mary Graham Carmichael Farquarson)\", \" Mr. Patrick\", \" Mrs. Frederick Charles (Mary Helene Baxter)\", \" Mr. Frank Hubert\", \" Miss. Alice Frances Louisa\", \" Mr. Joseph\", \" Miss. Ada\", \" Mr. James\", \" Mr. William A\", \" Mr. Abraham L\", \" Master. Walter John\", \" Mr. John\", \" Master. Marshall Brines\", \" Mr. Julius Konrad Eugen\", \" Master. Robert Douglas\", \" Miss. Berta Olivia\", \" Mr. Charles Robert\", \" Mrs. (Lena Jacobsen Solvang)\", \" Miss. Nora\", \" Master. Gilbert Sigvard Emanuel\", \" Col. John Jacob\", \" Miss. Winifred Vera\", \" Mr. Frank Thomas\", \" Mr. Alfred Fernand\", \" Miss. Katherine\", \" Mr. Sidney C Stuart\", \" Miss. Edith Louise\", \" Mr. Redjo\", \" Mr. Albert Karvin\", \" Mr. Luigi\", \" Mr. Percy William\", \" Mrs. Benjamin (Ellen Truelove Arman)\", \" Miss. Ida Augusta Margareta\", \" Mr. Christopher\", \" Miss. Bridget Delia\", \" Mr. George Dennick\", \" Mrs. George Dunton (Eleanor Elkins)\", \" Mr. Alexander Morrison\", \" Miss. Florentina\", \" Mr. Harold J\", \" Mrs. (Selena Rogers)\", \" Mr. Einar Gervasius\", \" Mrs. Edward (Helen Churchill Hungerford)\", \" Mrs. George (Omine Amenia\\\" Alexander)\\\"\", \" Mr. Johan Charles\", \" Miss. Bridget\", \" Mr. Thomas James\", \" Mr. Samuel James Metcalfe\", \" Mr. George Frederick\", \" Miss. Constance\", \" Mr. Karl Johan\", \" Mr. Michael\", \" Mr. John Bradley\", \" Mr. Olof Edvin\", \" Mr. Frank Manley\", \" Mr. Raffull\", \" Miss. Marta\", \" Mrs. Walter Donald (Mahala Dutton)\", \" Mrs. Carl Johan (Sigrid Posse)\", \" Mrs. (Alice Frances)\", \" Mr. Frederic Oakley\", \" Mr. Abraham\", \" Master. William Arthur Willie\\\"\\\"\", \" Mr. Frederick R\", \" Mrs. J Frank (Claire Bennett)\", \" Mr. James Vivian\", \" Mrs. Stephen (Annie Margaret Hill)\", \" Mrs. Betros (Zahie Maria\\\" Elias)\\\"\", \" Miss. Barbara J\", \" Mr. Abraham August Johannes\", \" Mr. Walter Miller\", \" Mr. Karl Johan\", \" Mr. Linhart\", \" Mr. George William\", \" Mr. John\", \" Mr. Samuel\", \" Miss. Lilian W\", \" Mr. Karl Albert\", \" Mr. Guillaume Joseph\", \" Mr. August Ferdinand\", \" Mrs. Arthur Henry (Addie\\\" Dart Trevaskis)\\\"\", \" Miss. Gertrud Emilia\", \" Mr. Emilio Ilario Giuseppe\", \" Mr. Stanko\", \" Mr. Roderick Robert Crispin\", \" Mr. Charles William\", \" Miss. May Elizabeth\", \" Mr. Mate\", \" Mr. Thomas Francis\", \" Mr. Patrick\", \" Mrs. Walter Miller (Virginia McDowell)\", \" Miss. Mary\", \" Mr. Jean Nassr\", \" Miss. Dagmar Jenny Ingeborg \", \" Mr. Clifford Richard\", \" Mr. Harry\", \" Mr. John James\", \" Mr. Percy Thomas\", \" Miss. Jelka\", \" Master. Alfred Edward\", \" Miss. Honora\", \" Miss. Maria Youssef\", \" Miss. Salli Helena\", \" Mr. William\", \" Mr. Charles (Charles Fardon)\", \" Mr. John Pillsbury\", \" Mr. Sarkis\", \" Mr. Arthur\", \" Mr. George Alexander Lucien\", \" Miss. Margaret Marcella Maggie\\\"\\\"\", \" Mr. Mustafa\", \" Dr. Washington\", \" Mr. Camille\", \" Mr. Minko\", \" Miss. Louise\", \" Mr. Hanna\", \" Mr. Joseph Holland\", \" Mr. Nils\", \" Mr. Oscar Wilhelm\", \" Mr. Noel\", \" Mr. Escott Robert\", \" Mr. Tome\", \" Miss. Catherine Katie\\\"\\\"\", \" Mrs. Edward Gifford (Catherine Elizabeth Halstead)\", \" Mr. Hudson Joshua Creighton\", \" Master. Philip Frank\", \" Mr. Charles Melville\", \" Mrs. Claus Peter (Jennie L Howard)\", \" Mr. Jego Grga\", \" Mr. David\", \" Mr. Harry\", \" Miss. Jeannie\", \" Mrs. John Stuart (Ella Holmes)\", \" Miss. Kate\", \" Mr. William Augustus\", \" Mr. Reginald Harry\", \" Mr. Nils Hilding\", \" Mr. Ernest Wilfred\", \" Mr. Johan Samuel\", \" Mr. Neshan\", \" Mr. Israel\", \" Mr. Alfred G\", \" Miss. Emilie\", \" Mr. Ali\", \" Miss. Ruth Elizabeth\", \" Mr. George (Mr George Thorne\\\")\\\"\", \" Mr. Charles Valentine\", \" Mr. Ingvar\", \" Mrs. John Morgan (Elizabeth Agnes Mary White) \", \" Mr. William Crothers\", \" Mr. Tannous\", \" Mrs. Said (Waika Mary\\\" Mowad)\\\"\", \" Mr. Ivan\", \" Mr. John Edward\", \" Mr. Jose Joaquim\", \" Mr. Joseph\", \" Mr. Herbert\", \" Master. Seman\", \" Mr. Joseph Charles\", \" Mr. Thure Edvin\", \" Mr. John George\", \" Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \" Master. James William\", \" Miss. Karen Marie\", \" Mr. William Hull\", \" Mrs. George Joseph (Shawneene Abi-Saab)\", \" Mr. Ralph\", \" Miss. Nellie\", \" Mrs. Leo David (Blanche Strouse)\", \" Mr. Philip Joseph\", \" Mr. William\", \" Mr. Samuel\", \" Miss. Elizabeth Gladys Millvina\\\"\\\"\", \" Mr. Henry Forbes\", \" Mrs. John Murray (Caroline Lane Lamson)\", \" Mr. Edward\", \" Mr. Patrick\", \" Mrs. Edvard Bengtsson (Elin Gerda Persson)\", \" Master. William Henry\", \" Mrs. Albert (Antoinette Magnin)\", \" Mrs. John James (Florence Louise Long)\", \" Mr. Ivan\", \" Mrs. George Achilles (Dorothy Annan)\", \" Mrs. John (Annie Bullen)\", \" Mr. Joseph\", \" Miss. Susanna Juhantytar Sanni\\\"\\\"\", \" Mrs. Leonard (Pauline C Boeson)\", \" Mr. Emilio\", \" Mr. Edgar\", \" Miss. Helen Alice\", \" Mr. Joseph Bruce\", \" Mr. William H\", \" Mrs. Washington (Ruth Vidaver)\", \" Miss. Grace Scott\", \" Miss. Maria\", \" Mr. Henry Harry\\\"\\\"\", \" Mr. William Edward\", \" Master. Carl Edgar\", \" Mr. Patrick\", \" Mr. Joseph\", \" Mrs. Samuel (Emma)\", \" Mrs. Neal (Eileen O'Leary)\", \" Mr. Edwin Frederick\\\"\\\"\", \" Miss. Kate\", \" Mr. Ernst Axel Algot\", \" Mr. John\", \" Mr. Patrick\", \" Master. Paul Folke\", \" Mr. Vivian Ponsonby\", \" Mrs. Ernest H (Elizabeth Lindsey James)\", \" Master. Eugene Joseph\", \" Mr. William\", \" Mr. Anton\", \" Mrs. Lucien Philip (Mary Eloise Hughes)\", \" Mr. Patrick\", \" Mrs. Maxmillian (Margaretha Emerentia Stehli)\", \" Mr. Edvard A\", \" Mr. Thomas Henry\", \" Miss. Caroline\", \" Mr. Harry\", \" Miss. Dorothy Winifred\", \" Mr. Jose Pedro\", \" Mr. Isaac Gerald\", \" Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \" Mr. William Jeffery\", \" Mr. George Dunton\", \" Miss. Johanna Hannah\\\"\\\"\", \" Miss. Treasteall\", \" Miss. Hannah\", \" Mrs. William Edward (Lillian E Thorpe)\", \" Miss. Jenny Lovisa\", \" Mr. Woolf\", \" Dona. Fermina\", \" Mr. Simon Sivertsen\", \" Mr. Frederick\", \" Master. Michael J\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Age\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('4230dfd3-4148-4343-bdb2-23ab4eb1200a');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 69,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 40,
                "o_idx": 0
            }
        },
        {
            "source": "### <a class=\"anchor\" id=\"2.1.2_bullet\" style=\"color:#3B61A3\">  2.1.2 Filling \"Fare\" feature\nI will manually fill None value with the mean value for passanger class.\nAfter that we can replace Fare with a rank, because i assume that the value of difference is not important.",
            "mc_idx": 70,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "print(df.loc[1044])\ndf.loc[1044,\"Fare\"] = df[df[\"Pclass\"]==3][\"Fare\"].mean()",
            "mc_idx": 71,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    ".mean": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    41,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Survived             NaN\nPclass                 3\nName          Mr. Thomas\nSex                 male\nAge                 60.5\nSibSp                  0\nParch                  0\nTicket              3701\nFare                 NaN\nCabin                 -1\nEmbarked               S\nDeck                 N/A\nSide                 0.0\nTicket_p             N/A\nSurname            Other\nNamesakes              0\nTitle                 Mr\nKid                    0\nOld                    1\nAlone                  1\nName: 1044, dtype: object\n"
                    ]
                },
                "mc_idx": 71,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 41,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Fare\"] = df[\"Fare\"].rank(method='max')",
            "mc_idx": 72,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    42,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 72,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 42,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Fare\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 73,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    43,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"db69a983-64de-4184-bd76-be8f3ac30abf\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"db69a983-64de-4184-bd76-be8f3ac30abf\")) {                    Plotly.newPlot(                        \"db69a983-64de-4184-bd76-be8f3ac30abf\",                        [{\"hovertemplate\": \"Survived=0.0<br>Fare=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [117.0, 421.0, 430.0, 1077.0, 785.0, 421.0, 986.0, 275.0, 954.0, 740.0, 883.0, 785.0, 75.0, 1305.0, 337.0, 930.0, 529.0, 1199.0, 1085.0, 421.0, 740.0, 470.0, 780.0, 337.0, 421.0, 700.0, 788.0, 736.0, 1045.0, 249.0, 1131.0, 99.0, 1062.0, 99.0, 1209.0, 941.0, 930.0, 425.0, 454.0, 529.0, 1062.0, 1164.0, 658.0, 141.0, 337.0, 421.0, 461.0, 1064.0, 1012.0, 421.0, 421.0, 421.0, 275.0, 1127.0, 766.0, 117.0, 421.0, 1013.0, 883.0, 337.0, 337.0, 1175.0, 433.0, 360.0, 337.0, 337.0, 1085.0, 658.0, 421.0, 488.0, 662.0, 360.0, 210.0, 780.0, 1292.0, 986.0, 1164.0, 421.0, 968.0, 1175.0, 210.0, 35.0, 337.0, 47.0, 673.0, 621.0, 678.0, 1095.0, 462.0, 1189.0, 690.0, 30.0, 542.0, 1022.0, 1012.0, 883.0, 621.0, 558.0, 421.0, 673.0, 119.0, 1129.0, 421.0, 454.0, 1153.0, 729.0, 236.0, 454.0, 1045.0, 941.0, 831.0, 1111.0, 1006.0, 954.0, 360.0, 976.0, 275.0, 827.0, 945.0, 621.0, 17.0, 1153.0, 679.0, 993.0, 1069.0, 700.0, 337.0, 621.0, 210.0, 428.0, 621.0, 483.0, 1153.0, 28.0, 75.0, 494.0, 712.0, 47.0, 117.0, 621.0, 210.0, 918.0, 529.0, 621.0, 421.0, 337.0, 469.0, 117.0, 621.0, 827.0, 236.0, 631.0, 529.0, 131.0, 883.0, 529.0, 546.0, 658.0, 529.0, 53.0, 75.0, 1219.0, 236.0, 883.0, 117.0, 494.0, 916.0, 729.0, 756.0, 210.0, 1192.0, 17.0, 210.0, 529.0, 1045.0, 979.0, 959.0, 210.0, 17.0, 954.0, 210.0, 275.0, 483.0, 883.0, 454.0, 337.0, 562.0, 458.0, 337.0, 930.0, 99.0, 1264.0, 17.0, 421.0, 813.0, 883.0, 337.0, 889.0, 643.0, 117.0, 337.0, 1153.0, 21.0, 943.0, 1267.0, 740.0, 337.0, 1140.0, 1018.0, 621.0, 621.0, 621.0, 454.0, 465.0, 1014.0, 99.0, 736.0, 75.0, 483.0, 621.0, 941.0, 930.0, 658.0, 47.0, 700.0, 117.0, 28.0, 421.0, 1253.0, 785.0, 1280.0, 19.0, 236.0, 360.0, 337.0, 1164.0, 1062.0, 145.0, 360.0, 248.0, 275.0, 883.0, 529.0, 421.0, 488.0, 712.0, 454.0, 780.0, 210.0, 236.0, 827.0, 337.0, 31.0, 17.0, 421.0, 621.0, 822.0, 337.0, 152.0, 276.0, 648.0, 756.0, 117.0, 210.0, 53.0, 1103.0, 1012.0, 1305.0, 529.0, 483.0, 236.0, 935.0, 753.0, 935.0, 421.0, 916.0, 210.0, 421.0, 1026.0, 621.0, 421.0, 47.0, 17.0, 916.0, 144.0, 117.0, 454.0, 489.0, 1085.0, 780.0, 38.0, 123.0, 1062.0, 17.0, 421.0, 827.0, 959.0, 421.0, 753.0, 117.0, 974.0, 1067.0, 421.0, 662.0, 681.0, 1264.0, 248.0, 454.0, 210.0, 135.0, 485.0, 1231.0, 797.0, 421.0, 122.0, 1007.0, 822.0, 337.0, 337.0, 75.0, 99.0, 210.0, 1284.0, 360.0, 542.0, 99.0, 99.0, 454.0, 916.0, 673.0, 986.0, 986.0, 1228.0, 883.0, 762.0, 883.0, 253.0, 916.0, 1289.0, 210.0, 337.0, 631.0, 421.0, 421.0, 822.0, 337.0, 785.0, 99.0, 421.0, 673.0, 662.0, 883.0, 1046.0, 457.0, 674.0, 421.0, 421.0, 53.0, 117.0, 210.0, 883.0, 822.0, 17.0, 75.0, 337.0, 1052.0, 421.0, 702.0, 337.0, 986.0, 47.0, 210.0, 421.0, 648.0, 729.0, 529.0, 658.0, 275.0, 729.0, 999.0, 553.0, 337.0, 152.0, 49.0, 17.0, 941.0, 360.0, 889.0, 1045.0, 729.0, 275.0, 941.0, 337.0, 131.0, 337.0, 429.0, 30.0, 1164.0, 337.0, 700.0, 621.0, 1238.0, 75.0, 828.0, 122.0, 1164.0, 621.0, 236.0, 421.0, 1085.0, 529.0, 17.0, 236.0, 421.0, 1062.0, 424.0, 465.0, 1062.0, 1033.0, 1050.0, 1045.0, 492.0, 248.0, 75.0, 916.0, 631.0, 421.0, 1235.0, 141.0, 658.0, 155.0, 275.0, 883.0, 916.0, 471.0, 621.0, 141.0, 700.0, 236.0, 49.0, 621.0, 621.0, 454.0, 883.0, 360.0, 745.0, 17.0, 621.0, 621.0, 729.0, 1012.0, 337.0, 337.0, 1183.0, 729.0, 1155.0, 759.0, 1095.0, 210.0, 483.0, 337.0, 248.0, 542.0, 421.0, 673.0, 53.0, 236.0, 1038.0, 210.0, 822.0, 427.0, 483.0, 275.0, 529.0, 75.0, 210.0, 210.0, 154.0, 966.0, 811.0, 47.0, 117.0, 954.0, 1189.0, 210.0, 883.0, 1153.0, 976.0, 337.0, 621.0, 99.0, 822.0, 621.0, 236.0, 17.0, 236.0, 621.0, 288.0, 822.0, 529.0, 986.0, 421.0, 17.0, 360.0, 1025.0, 25.0, 941.0, 17.0, 1045.0, 33.0, 1111.0, 99.0, 275.0, 426.0, 454.0, 421.0, 360.0, 529.0, 24.0, 454.0, 131.0, 1153.0, 337.0, 1005.0, 986.0, 236.0, 690.0, 883.0, 99.0, 645.0, 542.0, 1153.0, 621.0, 1071.0, 483.0, 337.0, 20.0, 461.0, 491.0, 337.0, 337.0, 337.0, 530.0, 529.0, 47.0, 954.0, 621.0, 811.0, 210.0], \"xaxis\": \"x\", \"y\": [\" Mr. Owen Harris\", \" Mr. William Henry\", \" Mr. James\", \" Mr. Timothy J\", \" Master. Gosta Leonard\", \" Mr. William Henry\", \" Mr. Anders Johan\", \" Miss. Hulda Amanda Adolfina\", \" Master. Eugene\", \" Mrs. Julius (Emelia Maria Vandemoortele)\", \" Mr. Joseph J\", \" Miss. Torborg Danira\", \" Mr. Farred Chehab\", \" Mr. Charles Alexander\", \" Mr. Lalio\", \" Don. Manuel E\", \" Mr. Edward H\", \" Mr. Edgar Joseph\", \" Mr. Alexander Oskar\", \" Mr. Ernest Charles\", \" Miss. Augusta Maria\", \" Mrs. Johan (Johanna Persdotter Larsson)\", \" Mrs. William John Robert (Dorothy Ann Wonnacott)\", \" Mr. Theodor\", \" Mr. William John\", \" Mr. Denis\", \" Mr. Youssef\", \" Mrs. Josef (Josefine Franchi)\", \" Master. Juha Niilo\", \" Mr. Richard Cater\", \" Mr. Engelhart Cornelius\", \" Mr. Mansouer\", \" Master. William Frederick\", \" Mr. Orsen\", \" Mr. Henry Birkhardt\", \" Master. Harald\", \" Mr. Albert A\", \" Mr. Ernest James\", \" Mr. Vincenz\", \" Mr. Stephen Curnow\", \" Miss. Lillian Amy\", \" Mr. Ambrose Jr\", \" Mr. Apostolos\", \" Mr. Sigurd Hansen\", \" Mr. Ivan\", \" Mr. Rahamin Haim\", \" Mr. Achille\", \" Mr. Francisco M\", \" Mr. William Neal\", \" Mr. Selman Francis\", \" Mr. Francesco\", \" Mr. Emil\", \" Mr. Paul Edvin\", \" Mr. Herbert Fuller\", \" Mr. Bertram Frank\", \" Mr. Daniel\", \" Mr. Charles Joseph\", \" Mr. George B\", \" Mr. Sinai\", \" Miss. Matilda\", \" Mr. Pastcho (\\\"Pentcho\\\")\", \" Mr. Richard Frasar\", \" Mr. Gustaf Joel\", \" Mr. Anders Vilhelm\", \" Mr. Stoytcho\", \" Mr. Tido\", \" Mr. Walter Chamberlain\", \" Miss. Hileni\", \" Mr. David John\", \" Miss. Katriina\", \" Miss. Malake\", \" Mr. Edvard\", \" Mr. Patrick\", \" Mr. William John Robert\", \" Mr. Quigg Edmond\", \" Miss. Ellis Anna Maria\", \" Mr. Stanley George\", \" Mr. Leonard Charles\", \" Mr. Nicholas\", \" Mr. Percival Wayland\", \" Mr. Martin\", \" Mr. Johan\", \" Mr. Jozef\", \" Mr. Domingos Fernandeo\", \" Mrs. Alexander A (Grace Charity Laury)\", \" Mr. Samuel James Hayden\", \" Mr. Emile\", \" Mr. Jacques Heath\", \" Mr. Olaf Elon\", \" Mr. Victor\", \" Mrs. Joseph (Sultana)\", \" Mr. Jeremiah\", \" Mr. Edgardo Samuel\", \" Mr. Joseph Charles\", \" Miss. Robina Maggie \\\"Ruby\\\"\", \" Mr. Michel (\\\"Louis M Hoffman\\\")\", \" Rev. Thomas Roussel Davids\", \" Rev. Robert James\", \" Mr. Alfonzo\", \" Mr. Austin Blyler\", \" Mr. Ole Martin\", \" Mr. Charles Duane\", \" Mr. Harry\", \" Mr. Mile\", \" Master. Thomas Henry\", \" Mr. John Hatfield\", \" Mr. John Viktor\", \" Mr. Jovo\", \" Master. Eino Viljami\", \" Mrs. William (Anna Bernhardina Karlsson)\", \" Mr. John D\", \" Mr. Lee\", \" Mr. Wyckoff\", \" Master. Arthur\", \" Mr. Antti Wilhelm\", \" Mr. James Clinch\", \" Mr. Klas Albin\", \" Master. Henry Forbes\", \" Miss. Ann Elizabeth\", \" Mr. Reginald\", \" Mr. Lionel\", \" Miss. Constance Gladys\", \" Mr. Rene\", \" Master. Clarence Gustaf Hugo\", \" Mr. Hugh Roscoe\", \" Mr. John\", \" Mr. Stjepan\", \" Mr. William\", \" Mr. Robert\", \" Mr. Karl Siegwart Andreas\", \" Miss. Henriette (\\\"Mrs Harbeck\\\")\", \" Mr. Nestor Cyriel\", \" Mr. Frederick\", \" Mr. Jakob Alfred\", \" Mr. Gerious\", \" Miss. Telma Matilda\", \" Mr. Karl Alfred\", \" Mr. Ahmed\", \" Mr. John Henry\", \" Mr. Hans Kristensen\", \" Mr. Philip\", \" Mr. Sidney Samuel\", \" Mr. Walter\", \" Mr. James H\", \" Mr. George Henry\", \" Mr. Christo\", \" Mr. Karl Ivar Sven\", \" Mr. John Hall (\\\"Henry\\\")\", \" Mr. Arne Jonas\", \" Miss. Mathilde\", \" Mr. Bengt Edvin\", \" Mr. Ernst Adolf\", \" Mr. Robert William Norman\", \" Miss. Alice Phoebe\", \" Mr. Stephen\", \" Mr. Frederick William\", \" Mr. George Henry\", \" Miss. Thamine\", \" Mr. Reginald Charles\", \" Mr. Matti Alexanteri\", \" Mr. Sleiman\", \" Dr. William Edward\", \" Miss. Agda Thorilda Viktoria\", \" Rev. Ernest Courtenay\", \" Mr. James George\", \" Mrs. Wilhelm (Elna Matilda Persson)\", \" Mr. William Thomas\", \" Mr. William Arthur\", \" Mrs. Viktor (Helena Wilhelmina)\", \" Mr. Thomas\", \" Mr. Emil\", \" Mr. William\", \" Miss. Delia\", \" Mr. David\", \" Mr. Ernesti Arvid\", \" Mr. Alexander\", \" Mr. Charles H\", \" Miss. Augusta Charlotta\", \" Mr. Francis \\\"Frank\\\"\", \" Master. Eric\", \" Mr. Frank\", \" Mr. Nils Johan Goransson\", \" Mr. Alfons\", \" Mr. Richard William\", \" Mr. Ivan\", \" Mr. Penko\", \" Mr. Rene Jacques\", \" Miss. Aloisia\", \" Mr. Ivan\", \" Mr. Ervin G\", \" Mr. Mansour\", \" Miss. Helen Loraine\", \" Mr. William Cahoone Jr\", \" Mr. Howard Hugh \\\"Harry\\\"\", \" Mr. Samuel\", \" Mrs. William (Anna Sylfven)\", \" Mr. Ignjac\", \" Mr. Benjamin\", \" Dr. Ernest\", \" Mr. Samuel\", \" Mr. Yoto\", \" Mr. George John Jr\", \" Mr. Johan Hansen\", \" Mr. Austen\", \" Mr. George Edward\", \" Mr. Leo Edmondus\", \" Mr. Mitto\", \" Mr. Thomas Clinton\", \" Mr. Stephen Weart\", \" Mr. Erik Gustaf\", \" Mr. Charles Frederick Waddington\", \" Mr. Stanley Hubert\", \" Mr. Jovan\", \" Mr. Nils Martin\", \" Mr. Fletcher Fellows\", \" Mr. Tannous\", \" Mr. Josef\", \" Mr. Wazli\", \" Mr. Leo Peter\", \" Miss. Annie Clemmer\", \" Mr. Wilhelm\", \" Mr. Sebastiano\", \" Mrs. (Catherine David)\", \" Mr. Adola\", \" Mr. Thomas\", \" Mr. Mauritz Nils Martin\", \" Mr. Jakob Alfred\", \" Mr. William Thomas\", \" Mr. Sante\", \" Miss. Stina Viola\", \" Mr. Harry Elkins\", \" Mr. Tannous\", \" Mr. Karl Gideon\", \" Mr. Juho\", \" Mr. Vasil\", \" Mr. Charles Henry\", \" Master. Sidney Leonard\", \" Mr. Matthew\", \" Mr. Johan Birger\", \" Mr. Erik\", \" Miss. Elina\", \" Mr. Peter David\", \" Dr. Alfred\", \" Mr. John\", \" Miss. Mari Aina\", \" Mr. Pekka Pietari\", \" Miss. Marija\", \" Mr. Shadrach\", \" Mr. Carl/Charles Peter\", \" Mr. Hans Martin Monsen\", \" Miss. Ida\", \" Mr. Todor\", \" Mr. Henry\", \" Mr. Alfred Fleming\", \" Mrs. Thomas (Annie Louise Rowley)\", \" Mr. William John\", \" Miss. Catharina\", \" Mr. Stanio\", \" Mr. David\", \" Mr. Leo\", \" Mrs. Ernst Gilbert (Anna Sigrid Maria Brogren)\", \" Mr. Viktor Richard\", \" Mr. Phillippe\", \" Mr. James\", \" Mr. Nikolai Erland\", \" Mr. William Baird\", \" Miss. Doolina Margaret \\\"Daisy\\\"\", \" Mr. Mark\", \" Mr. Johan Henrik Johannesson\", \" Mr. Leon\", \" Mr. Johan Emil\", \" Mr. Edwy Arthur\", \" Mr. Ingvald Olai Olsen\", \" Mr. Benjamin Laventall\", \" Mr. Joseph\", \" Mr. Francis Davis\", \" Mr. Maurice\", \" Mr. William\", \" Mr. Arthur H\", \" Mr. Jacob Christian\", \" Mr. Simon\", \" Mr. Manuel Estanslas\", \" Mr. William\", \" Mr. John Montgomery\", \" Mr. James\", \" Mr. Arthur\", \" Mr. Luka\", \" Miss. Ida Sofia\", \" Mr. George Quincy\", \" Mr. Peter Henry\", \" Mr. Lewis Richard\", \" Mr. Nils August\", \" Master. Harold Victor\", \" Mr. Anthony Wood \\\"Archie\\\"\", \" Mr. Richard Henry\", \" Miss. Jeannie\", \" Mr. Edward Austin\", \" Mr. Francis William\", \" Mr. Konrad Mathias Reiersen\", \" Mr. Einar\", \" Mr. Harry Markland\", \" Mr. Ramon\", \" Mr. Edward Roland\", \" Mr. Gerious\", \" Mr. Frederick William\", \" Mrs. Hudson J C (Bessie Waldo Daniels)\", \" Mr. Olof\", \" Mr. Petar\", \" Miss. Mary\", \" Miss. Bridget Mary\", \" Miss. Kristina Sofia\", \" Mr. Victor de Satode\", \" Mr. Henry Margido\", \" Mr. James\", \" Mr. Satio\", \" Mr. William Anderson\", \" Mr. Patrick\", \" Mr. Stefo\", \" Mr. Janko\", \" Mr. Sarkis\", \" Mr. Fared\", \" Mr. James\", \" Mr. John\", \" Mr. Johan Werner\", \" Mr. Richard George\", \" Mr. Nakli\", \" Mr. Joseph Jr\", \" Miss. Marija\", \" Major. Archibald Willingham\", \" Mr. Samuel Beard\", \" Miss. Ingeborg Constanzia\", \" Miss. Sigrid Elisabeth\", \" Mr. Walter Donald\", \" Mr. Arthur Ernest\", \" Mr. Frank John\", \" Mr. Percival James R\", \" Mr. Timothy\", \" Mr. George\", \" Mr. Victor\", \" Mr. Thomas Rowan\", \" Mr. Husein\", \" Mr. Robert Douglas\", \" Mr. John\", \" Miss. (Marion Ogden)\", \" Mr. Alfred J\", \" Mr. Ilia\", \" Mrs. Nils (Alma Cornelia Berglund)\", \" Mr. Tannous\", \" Mr. Alfred George John\", \" Mr. George\", \" Mrs. Joseph (Maria Elias)\", \" Mr. William James\", \" Mr. John Hugo\", \" Mr. Uscher\", \" Mr. John Denzil\", \" Mr. Eliezer\", \" Mr. Joseph\", \" Mr. Matti\", \" Mr. William James\", \" Miss. Mary\", \" Mr. John Henry\", \" Mr. Jean Baptiste\", \" Mr. Alfred\", \" Mr. Hanna\", \" Mr. Petco\", \" Mr. Charles H\", \" Mr. Ernst William\", \" Mr. Edvard Bengtsson\", \" Mr. Milan\", \" Mrs. Anders Johan (Alfrida Konstantia Brogren)\", \" Mr. Jose Neto\", \" Mr. John\", \" Mr. William Alfred\", \" Mr. Ernst Gilbert\", \" Mrs. William Arthur (Cordelia K Stanlick)\", \" Mr. Lawrence\", \" Mr. Antoni\", \" Mr. Henry Damsgaard\", \" Mr. David John \\\"Dai\\\"\", \" Mr. Frederick\", \" Rev. Charles Leonard\", \" Mr. Guentcho\", \" Mr. Patrick D\", \" Mr. Johan Svensson\", \" Mr. William Henry Marsh\", \" Miss. Mabel\", \" Mr. Antti Gustaf\", \" Mr. Harvey\", \" Mrs. Juha (Maria Emilia Ojala)\", \" Mr. Percival\", \" Mr. Hans Peder\", \" Miss. Margit Elizabeth\", \" Mr. Liudevit\", \" Mr. Edward\", \" Mr. Mito\", \" Mr. Johannes Halvorsen\", \" Miss. Hanora \\\"Nora\\\"\", \" Mr. Leonard Mark\", \" Mr. Alexander\", \" Mrs. John (Catherine)\", \" Mr. George Floyd\", \" Mr. Arthur Webster\", \" Mr. Mohamed\", \" Mr. Edward Pomeroy\", \" Mr. Peju\", \" Mr. Lewis\", \" Mr. Reginald Fenton\", \" Mr. Knud Paust\", \" Mr. Jacob\", \" Mr. Thornton\", \" Mr. Henry Michael\", \" Mr. Ennis Hastings\", \" Mr. Gustaf Hjalmar\", \" Mr. Frederick Charles\", \" Mrs. Frederick (Augusta Tyler)\", \" Miss. Katie\", \" Mr. Thor Anderson\", \" Mr. Charles Edward\", \" Mr. Thomas William Solomon\", \" Mr. Joseph Philippe Lemercier\", \" Mr. Jaako Arnold\", \" Mr. Branko\", \" Mr. Eberhard Thelander\", \" Mr. Khalil\", \" Col. John\", \" Mr. Charles Henry\", \" Mr. James\", \" Mr. John Borland\", \" Mr. Adolf Mathias Nicolai Olsen\", \" Miss. Saiide\", \" Mr. Martin\", \" Mr. Henrik Juul\", \" Mr. Henry Samuel (\\\"Mr Henry Marshall\\\")\", \" Mr. Herman\", \" Mr. August Viktor\", \" Mr. Samuel\", \" Mr. Peter Andreas Lauritz Andersen\", \" Mr. Michael\", \" Mr. Malkolm Joackim\", \" Mr. Svend Lauritz\", \" Mr. William Henry\", \" Mr. Henry Price\", \" Mr. Luka\", \" Mr. Kurt Arnold Gottfrid\", \" Miss. Pieta Sofia\", \" Mr. Houssein G N\", \" Mr. Robert J\", \" Mr. William John\", \" Mr. Moses Aaron\", \" Mr. Leslie\", \" Mrs. Edward (Margaret Ann Watson)\", \" Mr. Kanio\", \" Mr. Minko\", \" Mr. Tyrell William\", \" Mr. Neal\", \" Capt. Edward Gifford\", \" Mr. Rossmore Edward\", \" Mr. Daniel Warner\", \" Mr. Michael\", \" Mr. Johannes Joseph\", \" Mr. Lalio\", \" Mr. August Sigfrid\", \" Mr. Percy Andrew\", \" Mr. Thomas Leonard\", \" Mr. John\", \" Mr. Iisakki Antino Aijo\", \" Mr. Hans Linus\", \" Dr. Arthur Jackson\", \" Miss. Mary\", \" Mr. Daniel J\", \" Mr. Daniel Danielsen\", \" Mr. Rene Aime\", \" Mr. Niels Peder\", \" Mrs. (Mary)\", \" Mr. Dibo\", \" Mr. Pehr Fabian Oliver Malkolm\", \" Mr. Roger\", \" Mr. Thomas J\", \" Mr. Milton Clyde\", \" Mr. Andrew G\", \" Mr. William\", \" Mr. Abraham (David Lishin)\", \" Master. George Hugh\", \" Mr. Benjamin\", \" Mr. Andrew \\\"Andy\\\"\", \" Mr. Alfred\", \" Miss. Stella Anna\", \" Mr. William Fisher\", \" Mr. Ristiu\", \" Mr. Richard\", \" Mr. Yousseff\", \" Mrs. Jean Baptiste (Rosalie Paula Govaert)\", \" Mr. Martin\", \" Mr. Karl Johan\", \" Mr. Thomas Jr\", \" Miss. Ellen Natalia\", \" Mr. August\", \" Mr. William\", \" Mr. James\", \" Mr. Richard James\", \" Miss. Ebba Iris Alfrida\", \" Mr. Ernest Portage\", \" Mr. Richard\", \" Miss. Wendla Maria\", \" Mr. Albert\", \" Mr. John Fredrik Alexander\", \" Master. Karl Thorsten\", \" Jonkheer. John George\", \" Master. Urho Abraham\", \" Mr. John\", \" Mr. Len\", \" Mr. Amin\", \" Mr. Albert\", \" Mr. Owen George\", \" Mr. Jakob\", \" Mr. Maurice\", \" Mr. Ilmari Rudolf\", \" Mr. Thomas Charles\", \" Mr. Peter L\", \" Mr. Jeso\", \" Mr. Anthony\", \" Mr. Douglas Bullen\", \" Mr. Marin\", \" Rev. John\", \" Master. Sigvard Harald Elias\", \" Mr. Johan\", \" Miss. Nourelain\", \" Mrs. Ernest Courtenay (Lilian Hughes)\", \" Mr. Raihed\", \" Mr. Claus Peter\", \" Mr. Frederick Edward\", \" Miss. Dorothy Edith \\\"Dolly\\\"\", \" Mr. John William\", \" Mr. Washington Augustus II\", \" Mr. Philemon\", \" Mr. Cerin\", \" Mr. Frans Olof\", \" Mr. Victor\", \" Mr. Alfred Ossian\", \" Mr. Nedelio\", \" Mr. Kristo\", \" Mr. Johann\", \" Miss. Gerda Ulrika\", \" Mr. Frederick James\", \" Mr. Henry Jr\", \" Mrs. William (Margaret Norton)\", \" Rev. Juozas\", \" Miss. Catherine Helen \\\"Carrie\\\"\", \" Mr. Patrick\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Fare=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [1157.0, 360.0, 1095.0, 534.0, 968.0, 732.0, 916.0, 717.0, 621.0, 75.0, 621.0, 361.0, 1018.0, 993.0, 286.0, 1258.0, 210.0, 99.0, 536.0, 1050.0, 286.0, 210.0, 1173.0, 883.0, 1018.0, 529.0, 935.0, 1194.0, 690.0, 529.0, 360.0, 1111.0, 948.0, 557.0, 483.0, 238.0, 529.0, 712.0, 1305.0, 1133.0, 804.0, 141.0, 236.0, 822.0, 621.0, 536.0, 54.0, 794.0, 883.0, 890.0, 210.0, 712.0, 248.0, 1140.0, 152.0, 708.0, 762.0, 1097.0, 534.0, 1033.0, 791.0, 700.0, 916.0, 621.0, 275.0, 883.0, 930.0, 1258.0, 210.0, 421.0, 745.0, 210.0, 979.0, 780.0, 1238.0, 360.0, 1170.0, 421.0, 1219.0, 529.0, 1209.0, 993.0, 889.0, 700.0, 673.0, 1089.0, 690.0, 1189.0, 1212.0, 1309.0, 883.0, 993.0, 236.0, 1267.0, 1253.0, 17.0, 751.0, 210.0, 1178.0, 759.0, 421.0, 483.0, 621.0, 210.0, 1183.0, 1221.0, 974.0, 1292.0, 210.0, 807.0, 553.0, 1264.0, 1235.0, 1231.0, 1113.0, 1207.0, 1299.0, 275.0, 883.0, 1271.0, 1249.0, 553.0, 948.0, 1253.0, 621.0, 762.0, 1119.0, 807.0, 1244.0, 1249.0, 421.0, 883.0, 1305.0, 621.0, 621.0, 729.0, 715.0, 1097.0, 286.0, 286.0, 1168.0, 99.0, 210.0, 1142.0, 1101.0, 1199.0, 117.0, 1289.0, 706.0, 1085.0, 621.0, 543.0, 1242.0, 248.0, 1238.0, 732.0, 559.0, 360.0, 743.0, 1219.0, 360.0, 1002.0, 621.0, 883.0, 883.0, 421.0, 916.0, 729.0, 883.0, 1242.0, 743.0, 889.0, 621.0, 423.0, 1197.0, 751.0, 916.0, 749.0, 974.0, 1214.0, 337.0, 1077.0, 529.0, 916.0, 749.0, 935.0, 635.0, 548.0, 485.0, 1221.0, 1219.0, 715.0, 1180.0, 1212.0, 883.0, 916.0, 1111.0, 210.0, 893.0, 1123.0, 529.0, 883.0, 1225.0, 1119.0, 529.0, 883.0, 794.0, 889.0, 1228.0, 1065.0, 1155.0, 883.0, 883.0, 640.0, 1022.0, 1235.0, 75.0, 236.0, 1038.0, 1192.0, 734.0, 275.0, 529.0, 1073.0, 894.0, 210.0, 621.0, 1103.0, 360.0, 966.0, 1235.0, 1192.0, 1189.0, 1180.0, 1005.0, 1113.0, 918.0, 916.0, 974.0, 1050.0, 1267.0, 700.0, 1138.0, 1033.0, 1089.0, 706.0, 1178.0, 966.0, 974.0, 621.0, 1142.0, 1111.0, 749.0, 1173.0, 1018.0, 131.0, 804.0, 253.0, 1244.0, 360.0, 1085.0, 1033.0, 621.0, 490.0, 1309.0, 1173.0, 1275.0, 1115.0, 624.0, 1111.0, 152.0, 1289.0, 893.0, 631.0, 893.0, 1264.0, 690.0, 1067.0, 1085.0, 1289.0, 529.0, 1005.0, 1095.0, 780.0, 154.0, 1275.0, 1309.0, 966.0, 1299.0, 360.0, 621.0, 804.0, 557.0, 1138.0, 673.0, 1212.0, 99.0, 1242.0, 1178.0, 804.0, 557.0, 1275.0, 99.0, 1115.0, 122.0, 766.0, 833.0, 455.0, 889.0, 1242.0, 432.0, 35.0, 1095.0, 1225.0, 454.0, 557.0, 1025.0, 210.0, 1194.0, 658.0, 743.0, 1207.0, 1111.0, 959.0, 979.0, 1214.0, 1035.0, 469.0, 1271.0, 916.0, 749.0, 833.0, 621.0, 638.0, 534.0, 1089.0, 813.0, 75.0, 1207.0, 883.0, 966.0, 966.0], \"xaxis\": \"x\", \"y\": [\" Mrs. John Bradley (Florence Briggs Thayer)\", \" Miss. Laina\", \" Mrs. Jacques Heath (Lily May Peel)\", \" Mrs. Oscar W (Elisabeth Vilhelmina Berg)\", \" Mrs. Nicholas (Adele Achem)\", \" Miss. Marguerite Rut\", \" Miss. Elizabeth\", \" Mrs. (Mary D Kingcome) \", \" Mr. Charles Eugene\", \" Mrs. Fatima\", \" Mr. Lawrence\", \" Miss. Anna \\\"Annie\\\"\", \" Mr. William Thompson\", \" Mrs. Carl Oscar (Selma Augusta Emilia Johansson)\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. William Augustus (Marie Eugenie)\", \" Miss. Mary Agatha\", \" Mr. Hanna\", \" Miss. Jamila\", \" Miss. Simonne Marie Anne Andree\", \" Miss. Margaret Delia\", \" Miss. Bridget\", \" Mrs. Henry Sleeper (Myna Haxtun)\", \" Mrs. Lizzie (Elizabeth Anne Wilkinson)\", \" Mr. Hugh\", \" Miss. Emily\", \" Miss. Constance Mirium\", \" Miss. Amelie\", \" Master. Gerios\", \" Mrs. (Elizabeth Ramell)\", \" Miss. Erna Alexandra\", \" Mr. Lee\", \" Master. Alden Gates\", \" Miss. Elizabeth\", \" Mr. Jan Baptist\", \" Miss. Brigdet Delia\", \" Miss. Bertha\", \" Mrs. Karl Alfred (Maria Mathilda Gustafsson)\", \" Miss. Mabel Helen\", \" Mr. William Bertram\", \" Mrs. John T (Ada Julia Bone)\", \" Miss. Anna Kristine\", \" Mr. Albert Johan\", \" Miss. Bertha\", \" Miss. Susan\", \" Master. Elias\", \" Mr. Fridtjof Arne\", \" Miss. Anna\", \" Mrs. Leopold (Mathilde Francoise Pede)\", \" Miss. Helen Monypeny\", \" Miss. Anna Sofia\", \" Mrs. Pekka Pietari (Elin Matilda Dolck)\", \" Mr. August Edvard (\\\"Wennerstrom\\\")\", \" Mrs. Thomas (Edith Wearne)\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \" Master. Frank John William \\\"Frankie\\\"\", \" Mrs. (Edith Martha Bowerman)\", \" Miss. Eleanor Ileen\", \" Master. Richard F\", \" Miss. Luise Gretchen\", \" Mrs. Thomas (Johanna \\\"Hannah\\\" Godfrey)\", \" Mr. Charles Hallace (\\\"Mr C Rolmane\\\")\", \" Mrs. (Rosa)\", \" Miss. Carla Christine Nielsine\", \" Master. Michel M\", \" Mrs. James Joseph (Margaret Tobin)\", \" Miss. Elise\", \" Miss. Margaret \\\"Maggie\\\"\", \" Mr. Gurshon \\\"Gus\\\"\", \" Mr. Nassef Cassem\", \" Miss. Helen \\\"Ellen\\\"\", \" Mr. Henry\", \" Miss. Clear Annie\", \" Miss. Madeleine\", \" Miss. Eliina\", \" Miss. Albina\", \" Mr. Victor Francis\", \" Mr. Frederick Maxfield\", \" Mr. William John\", \" Mrs. Henry Birkhardt (Irene Wallach)\", \" Miss. Lillian Gertrud\", \" Miss. Marjorie \\\"Lottie\\\"\", \" Miss. Katherine \\\"Kate\\\"\", \" Mrs. William (Anna)\", \" Mr. Richard Leonard\", \" Mrs. Darwis (Hanne Youssef Razi)\", \" Mrs. Gertrude Maybelle\", \" Miss. Gladys\", \" Miss. Anna\", \" Mrs. (Lutie Davis)\", \" Master. Edvin Rojj Felix\", \" Mr. Ernst Ulrik\", \" Mrs. William Thompson (Edith Junkins)\", \" Miss. Amelia\", \" Mr. William Henry\", \" Mrs. (Elizabeth Anne Maidment)\", \" Miss. Hanora \\\"Nora\\\"\", \" Miss. Kornelia Theodosia\", \" Mrs. Stanton (Rosa Hunt)\", \" Mr. Edward Arthur\", \" Mr. Theodore\", \" Mr. Masabumi\", \" Miss. Kate\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. Dickinson H (Helen Walton)\", \" Mr. Adolphe\", \" Mrs. James (Helene DeLaudeniere Chaput)\", \" Miss. Anna Katherine \\\"Annie Kate\\\"\", \" Mr. Bernard\", \" Miss. Nora A\", \" Master. Hudson Trevor\", \" Miss. Margaret\", \" Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \" Miss. Laura Mabel\", \" Miss. Margaret Bechstein\", \" Miss. Emily Borie\", \" Miss. Helmina Josefina\", \" Mrs. Sinai (Miriam Sternin)\", \" Miss. Mary Natalie\", \" Mrs. Frederic Oakley (Margaretta Corning Stone)\", \" Miss. Hilda Mary\", \" Mrs. Albert Francis (Sylvia Mae Harbaugh)\", \" Miss. Marie Grice\", \" Mrs. (Ada E Hall)\", \" Mrs. Frank John (Emily Alice Brown)\", \" Miss. Jean Gertrude\", \" Miss. Agnes\", \" Mrs. Henry William (Clara Heinsheimer)\", \" Miss. Elizabeth Margaret\", \" Mr. Karl Edwart\", \" Master. Edmond Roger\", \" Miss. Alice Elizabeth\", \" Miss. Amelia \\\"Mildred\\\"\", \" Miss. Marion Elsie\", \" Mrs. Thomas Henry (Mary E Finck)\", \" Master. William Loch \\\"William\\\"\", \" Miss. Elsie Edith\", \" Miss. Mary\", \" Miss. Helen Mary \\\"Ellie\\\"\", \" Mrs. Frank Manley (Anna Sophia Atkinson)\", \" Mrs. (Mantoura Boulos)\", \" Miss. Annie\", \" Mme. Leontine Pauline\", \" Mr. George Achilles\", \" Mrs. Edgar Joseph (Leila Saks)\", \" Miss. Aurora Adelia\", \" Miss. Rosalie\", \" Miss. Maria (\\\"Mary\\\")\", \" Mrs. Alexander Oskar (Mary Aline Towner)\", \" Miss. Kate\", \" Miss. Bertha\", \" Mr. William Ernest\", \" Mr. Carl Olof\", \" Miss. Marjorie\", \" Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \" Mrs. William H (Jessie L)\", \" Mr. Juha\", \" Master. William Rowe\", \" Miss. Daisy E\", \" Mr. Johan Julian\", \" Mrs. James Vivian (Lulu Thorne Christian)\", \" Miss. Lyyli Karoliina\", \" Mrs. Charles V (Ada Maria Winfield)\", \" Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\", \" Mr. Berk (Berk Trembisky)\", \" Mr. Mauritz Hakan\", \" Mrs. Percival (Florence Kate White)\", \" Mrs. Charles Alexander (Alice Adelaide Slow)\", \" Miss. Lucile Polk\", \" Mrs. Sidney (Emily Hocking)\", \" Mrs. Benjamin (Esther Ada Bloomfield)\", \" Ms. Encarnacion\", \" Mr. Bernt\", \" Master. Washington\", \" Miss. Madeleine Violet\", \" Mr. Frederic Kimber\", \" Miss. Marie Catherine\", \" Major. Arthur Godfrey\", \" Mr. Samuel L\", \" Mr. Ivan\", \" Mrs. Frederick R (Marion)\", \" Miss. Ellen\", \" Mr. Harry\", \" Miss. Helene Barbara\", \" Mrs. Edwy Arthur (Ada Mary Worth)\", \" Mrs. Amin S (Marie Marthe Thuillard)\", \" Miss. Hildur E\", \" Mrs. (Hedwig)\", \" Mr. Dickinson H\", \" Mrs. Frederick Maxfield (Jane Anne Forby)\", \" Master. Eden Leslie \\\"Neville\\\"\", \" Miss. Elizabeth Mussey\", \" Miss. Roberta\", \" Mrs. Frederick Charles (Jane Richards)\", \" Mr. George (\\\"George Arthur Brayton\\\")\", \" Mr. Fang\", \" Mr. Eugene Patrick\", \" Mr. James Robert\", \" Mrs. Martin (Elizabeth L. Barrett)\", \" Mrs. (Amelia Milley)\", \" Mrs. William A (Florence \\\"Mary\\\" Agnes Hughes)\", \" Miss. Anne\", \" Mrs. Louis Albert (Ida Sophia Fischer)\", \" Miss. Lucy\", \" Miss. Phyllis May\", \" Mrs. Catherine (Catherine Rizk)\", \" Miss. Eva Miriam\", \" Miss. Bertha\", \" Miss. Hedwig Margaritha\", \" Miss. Harriet R\", \" Mr. Edward\", \" Mrs. Edward (Ethel Clarke)\", \" Mr. Julian\", \" Master. John Morgan Jr\", \" Mr. John Borland Jr\", \" Mr. Fahim (\\\"Philip Zenni\\\")\", \" Miss. Velin\", \" Lady. (Lucille Christiana Sutherland) (\\\"Mrs Morgan\\\")\", \" Mrs. Emil (Tillie Mandelbaum)\", \" Mrs. Guillaume Joseph (Emma)\", \" Mr. Carl\", \" Mr. George\", \" Mrs. Edward Dale (Charlotte Lamson)\", \" Mr. John Irwin (\\\"Irving\\\")\", \" Miss. Mary\", \" Miss. Ethel\", \" Mrs. William Baird (Alice Munger)\", \" Mr. Eiriik\", \" Miss. Julie Rachel\", \" Mrs. John Borland (Marian Longstreth Morris)\", \" Miss. Ruth\", \" Mr. Maxmillian\", \" Mrs. Walter Bertram (Martha Eustis)\", \" Miss. Jessie Wills\", \" Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \" Mrs. Sidney Samuel (Amy Frances Christy)\", \" Mr. Harry (\\\"Mr E Haven\\\")\", \" Mr. Robert Williams\", \" Mrs. Joseph (Juliette Marie Louise Lafargue)\", \" Miss. Elizabeth W\", \" Miss. Margaret Jane\", \" Miss. Alice\", \" Miss. Marion Louise\", \" Mr. Edwin Nelson Jr\", \" Mr. Sahid\", \" Miss. Gretchen Fiske\", \" Mr. Algernon Henry Wilson\", \" Dr. Max\", \" Miss. Mary\", \" Mlle. Emma\", \" Mr. Choong\", \" Miss. Eugenie\", \" Mr. Henry Sleeper\", \" Col. Oberst Alfons\", \" Miss. Amy Zillah Elsie\", \" Miss. Elsie\", \" Miss. Hanora \\\"Norah\\\"\", \" Dr. Henry William\", \" Mr. Eino William\", \" Mrs. Elmer Zebley (Juliet Cummins Wright)\", \" Mrs. Thomas William Solomon (Elizabeth Catherine Ford)\", \" Mr. Charles\", \" Miss. Anna Sofia\", \" Mr. Thomas Drake Martinez\", \" Mr. Hammad\", \" Miss. Georgette Alexandra\", \" Mr. Albert Adrian\", \" Miss. Manca\", \" Mr. Ali\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. John Jacob (Madeleine Talmadge Force)\", \" Mr. Spencer Victor\", \" Mrs. Florence \\\"Fannie\\\"\", \" Mr. Edward Pennington\", \" Miss. Alice\", \" Master. Halim Gonios (\\\"William George\\\")\", \" Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \" Mr. Elmer Zebley\", \" Miss. Caroline Louise\", \" Miss. Edwina Celia \\\"Winnie\\\"\", \" Miss. Annie Jessie \\\"Nina\\\"\", \" Mr. Norman Campbell\", \" Mrs. Peter Henry (Lillian Jefferys)\", \" Miss. Margareth\", \" Miss. Elisabeth Walton\", \" Mr. Gustave J\", \" Mr. Walter James\", \" Miss. Susan Parker \\\"Suzette\\\"\", \" Mr. Juho\", \" Miss. Anna\", \" Miss. Joan\", \" Master. Meier\", \" Mrs. Samuel (Jane Laver)\", \" Master. Viljo\", \" the Countess. of (Lucy Noel Martha Dyer-Edwards)\", \" Mr. Hanna Assi\", \" Mrs. William Ernest (Lucile Polk)\", \" Mrs. John C (Anna Andrews)\", \" Mrs. Elizabeth (Eliza Needs)\", \" Miss. Virginia Ethel\", \" Mrs. Edward Scott (Elisabeth Walton McMillan)\", \" Miss. Banoura\", \" Mrs. Albert Adrian (Vera Gillespie)\", \" Miss. Anna Sofia\", \" Master. Bertram Vere\", \" Dr. Alice (Farnham)\", \" Mrs. Mara\", \" Mrs. Harvey (Charlotte Annie Tate)\", \" Master. William Thornton II\", \" Master. Assad Alexander\", \" Mr. Oskar Arvid\", \" Mrs. Norman Campbell (Bertha Griggs)\", \" Mrs. Charles Melville (Clara Jennings Gregg)\", \" Mr. Nikola\", \" Mrs. (Beila)\", \" Master. Andre\", \" Mr. Thomas Joseph\", \" Mrs. George Nelson (Martha Evelyn)\", \" Mrs. Antoni (Selini Alexander)\", \" Master. George Sibley\", \" Miss. Sara Rebecca\", \" Mr. Chang\", \" Mr. Pierre\", \" Miss. Augusta\", \" Mrs. Samuel L (Edwiga Grabowska)\", \" Miss. Mary Conover\", \" Mrs. Sam (Leah Rosen)\", \" Mrs. George Dennick (Mary Hitchcock)\", \" Mr. Peter Denis \", \" Mrs. Solomon (Latifa Qurban)\", \" Mrs. Frederick Joel (Margaret Welles Barron)\", \" Mrs. (Karolina)\", \" Miss. Asuncion\", \" Master. Harold Theodor\", \" Mrs. Richard Leonard (Sallie Monypeny)\", \" Mrs. Samuel (Hannah Wizosky)\", \" Miss. Adele Kiamie \\\"Jane\\\"\", \" Mrs. Thomas Jr (Lily Alexenia Wilson)\", \" Mrs. William (Imanita Parrish Hall)\", \" Miss. Margaret Edith\", \" Mr. Karl Howell\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Fare=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [253.0, 37.0, 486.0, 454.0, 548.0, 465.0, 135.0, 948.0, 99.0, 822.0, 337.0, 883.0, 1201.0, 883.0, 1127.0, 930.0, 553.0, 75.0, 360.0, 75.0, 1123.0, 18.0, 998.0, 1129.0, 1299.0, 673.0, 1131.0, 75.0, 974.0, 788.0, 883.0, 996.0, 766.0, 811.0, 1117.0, 99.0, 421.0, 454.0, 483.0, 1111.0, 624.0, 916.0, 254.0, 621.0, 1089.0, 360.0, 959.0, 210.0, 1170.0, 715.0, 1125.0, 675.0, 804.0, 1305.0, 703.0, 954.0, 337.0, 141.0, 729.0, 1299.0, 337.0, 631.0, 210.0, 144.0, 1299.0, 780.0, 286.0, 1052.0, 944.0, 1305.0, 210.0, 337.0, 360.0, 930.0, 1280.0, 1280.0, 421.0, 829.0, 621.0, 210.0, 690.0, 1284.0, 883.0, 337.0, 531.0, 658.0, 286.0, 421.0, 210.0, 804.0, 642.0, 236.0, 1085.0, 421.0, 883.0, 248.0, 1183.0, 360.0, 275.0, 421.0, 1101.0, 883.0, 210.0, 236.0, 432.0, 797.0, 250.0, 210.0, 457.0, 621.0, 678.0, 237.0, 997.0, 118.0, 1284.0, 658.0, 24.0, 732.0, 1166.0, 883.0, 708.0, 210.0, 1117.0, 117.0, 210.0, 729.0, 248.0, 807.0, 621.0, 421.0, 421.0, 943.0, 827.0, 24.0, 337.0, 275.0, 75.0, 621.0, 421.0, 1062.0, 1062.0, 1264.0, 1299.0, 883.0, 916.0, 740.0, 1077.0, 421.0, 916.0, 883.0, 1207.0, 337.0, 622.0, 545.0, 993.0, 131.0, 1284.0, 275.0, 916.0, 634.0, 152.0, 690.0, 631.0, 37.0, 621.0, 791.0, 1071.0, 1012.0, 930.0, 459.0, 131.0, 75.0, 642.0, 99.0, 993.0, 1033.0, 1022.0, 1101.0, 1033.0, 1207.0, 621.0, 1207.0, 1095.0, 210.0, 1292.0, 717.0, 780.0, 421.0, 1153.0, 621.0, 883.0, 883.0, 673.0, 553.0, 1002.0, 275.0, 1249.0, 236.0, 529.0, 423.0, 700.0, 648.0, 1289.0, 883.0, 529.0, 830.0, 210.0, 529.0, 930.0, 337.0, 797.0, 47.0, 1164.0, 883.0, 236.0, 1053.0, 286.0, 1271.0, 1280.0, 421.0, 638.0, 421.0, 529.0, 248.0, 919.0, 690.0, 248.0, 210.0, 681.0, 621.0, 1138.0, 916.0, 28.0, 286.0, 1157.0, 275.0, 1168.0, 75.0, 621.0, 1228.0, 930.0, 966.0, 1249.0, 288.0, 811.0, 1077.0, 780.0, 1002.0, 883.0, 658.0, 935.0, 360.0, 1255.0, 466.0, 483.0, 131.0, 210.0, 421.0, 621.0, 236.0, 734.0, 275.0, 804.0, 545.0, 560.0, 337.0, 17.0, 131.0, 421.0, 454.0, 1166.0, 210.0, 1255.0, 700.0, 75.0, 883.0, 529.0, 883.0, 780.0, 529.0, 454.0, 634.0, 210.0, 690.0, 756.0, 117.0, 117.0, 1201.0, 99.0, 421.0, 1038.0, 33.0, 99.0, 1197.0, 483.0, 337.0, 1050.0, 788.0, 1054.0, 275.0, 236.0, 678.0, 780.0, 454.0, 210.0, 916.0, 1264.0, 469.0, 1225.0, 645.0, 454.0, 75.0, 132.0, 210.0, 1253.0, 152.0, 1258.0, 529.0, 275.0, 996.0, 236.0, 99.0, 621.0, 916.0, 1275.0, 47.0, 1033.0, 1189.0, 883.0, 621.0, 1022.0, 959.0, 75.0, 706.0, 337.0, 883.0, 621.0, 99.0, 996.0, 99.0, 529.0, 133.0, 1153.0, 1309.0, 673.0, 141.0, 621.0, 99.0, 631.0, 780.0, 1133.0, 529.0, 1164.0, 1138.0, 766.0, 883.0, 1073.0, 286.0, 210.0, 702.0, 1153.0, 1025.0, 780.0, 454.0, 1101.0, 1153.0, 662.0, 1045.0, 1123.0, 638.0, 542.0, 1249.0, 17.0, 621.0, 1197.0, 1299.0, 454.0, 542.0, 1069.0, 993.0, 210.0, 286.0, 673.0, 729.0, 562.0, 1138.0, 236.0, 621.0, 210.0, 785.0, 1225.0, 1035.0, 759.0, 529.0, 791.0, 1125.0, 117.0, 1189.0, 236.0, 152.0, 1271.0, 780.0, 1123.0, 1064.0, 930.0, 640.0, 529.0, 1280.0, 142.0, 634.0, 210.0, 1219.0, 236.0, 421.0, 1231.0, 117.0, 421.0, 794.0], \"xaxis\": \"x\", \"y\": [\" Mr. James\", \" Mrs. James (Ellen Needs)\", \" Mr. Thomas Francis\", \" Mr. Albert\", \" Mrs. Alexander (Helga E Lindqvist)\", \" Mr. Johan Cervin\", \" Miss. Kate\", \" Mr. Albert Francis\", \" Mrs. Joseph (Sophie Halaut Easu)\", \" Mr. John Samuel\", \" Mr. Ylio\", \" Mr. Charles Cresson\", \" Mrs. John Pillsbury (Nelle Stevenson)\", \" Mr. Benjamin\", \" Mrs. Herbert Fuller (Carrie Constance Toogood)\", \" Mrs. Sebastiano (Argenia Genovesi)\", \" Mr. Daniel\", \" Mr. Gerios\", \" Miss. Ida Livija\", \" Mrs. Mariana (Miriam\\\")\\\"\", \" Mr. Martin\", \" Master. Artur Karl\", \" Mrs. Alfred (Antoinette)\", \" Mr. Richard Norris II\", \" Mrs. Arthur Larned (Emily Maria Borie)\", \" Mr. Alexander A\", \" Miss. Helene Ragnhild\", \" Mr. Shedid\", \" Mr. John Bertram\", \" Mr. Elias\", \" Mr. Charles Alexander\", \" Mr. Clifford Thomas\", \" Mrs. Bertram (Eva Georgetta Light)\", \" Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \" Mr. Philipp Edmund\", \" Mr. Vassilios (Catavelas Vassilios\\\")\\\"\", \" Miss. Sarah A\", \" Miss. Manda\", \" Mr. Julius\", \" Mr. Ling\", \" Mr. Franz\", \" Mr. Thomas Parham\", \" Mr. Nathan\", \" Mrs. Walter H (Irene Colvin)\", \" Mrs. Edwin Nelson Jr (Gertrude Parsons)\", \" Mr. Nikolai Johannes\", \" Mr. Paul Romaine\", \" Mr. Patrick\", \" Mrs. William Robert (Emma Eliza Ward)\", \" Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \" Mr. Lucien Philip\", \" Mr. Franz\", \" Miss. Ellen Nellie\\\"\\\"\", \" Miss. Ethel Flora\", \" Mr. Serafino Emilio\", \" Master. Albert\", \" Mr. Bartol\", \" Mr. Olaus Jorgensen\", \" Mr. Thomas Henry\", \" Miss. Victorine\", \" Mr. Mirko\", \" Mr. Arthur Gordon\", \" Mr. Ernst Herbert\", \" Miss. Bridget Delia\", \" Master. John Borie\", \" Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \" Miss. Mary Delia\", \" Mr. Clarence Bloomfield\", \" Mr. Gilbert Milligan Jr\", \" Mrs. Mark (Mary McDougald)\", \" Miss. Bertha E\", \" Mr. Lazar\", \" Miss. Manta Josefina\", \" Mr. Servando\", \" Miss. Amalie\", \" Mr. Edwin\", \" Mr. Frank\", \" Mrs. Robert Clifford (Malvina Helen Lamson)\", \" Mr. Charles Augustus\", \" Miss. Elizabeth\", \" Master. Akar\", \" Mr. Isidor\", \" Mr. Howard Brown\", \" Mr. Marinko\", \" Mr. John Joseph\", \" Mr. Betros\", \" Miss. Julia\", \" Miss. Emily Louisa\", \" Ms. Bridget\", \" Master. Ralph Lester\", \" Mrs. Adolf Fredrik (Anna Elisabeth Judith Andersson)\", \" Mr. Olaf\", \" Mrs. Thornton (Orian Hays)\", \" Mr. Robert\", \" Mr. Jakob\", \" Mr. Gunnar Isidor\", \" Mrs. Tyrell William (Julia Florence Siegel)\", \" Mr. Kalle Edvard\", \" Miss. Elin Ester Maria\", \" Mr. William Henry\", \" Mrs. Charles Emil Henry (Annie May Morris)\", \" Mr. Leopold\", \" Mr. William\", \" Mr. Oskar Leander\", \" Mrs. Alexander (Thamine Thelma\\\")\\\"\", \" Mr. Johan Martin\", \" Mr. Daniel\", \" Mr. Edward\", \" Mr. Aaron (Abi Weller\\\")\\\"\", \" Mr. George\", \" Mr. Samuel Ward\", \" Miss. Ellen Natalia\", \" Miss. Edith Corse\", \" Miss. Katherine\", \" Mrs. Isidor (Rosalie Ida Blun)\", \" Mr. Demetrios\", \" Mr. John\", \" Miss. Beatrice Irene\", \" Mr. Thomson\", \" Mrs. John Henry (Sara Elizabeth Lawry)\", \" Miss. Bertha J\", \" Mr. John\", \" Mrs. Paul (Emma Mock)\", \" Mr. Alfred John\", \" Mr. John\", \" Miss. Laura Alice\", \" Mr. Karl Rudolf\", \" Miss. Alicia\", \" Mr. Solomon\", \" Mr. Marius\", \" Mr. Henry John\", \" Col. Archibald IV\", \" Mrs. Frank (Frances)\", \" Mr. Charles P\", \" Mr. Valtcho\", \" Mr. Carl Robert\", \" Mr. Mapriededer\", \" Mr. August\", \" Miss. Jennie\", \" Mr. Charles Frederick\", \" Miss. Jessie Allis\", \" Miss. Sarah\", \" Mr. Arthur Larned\", \" Mr. Henry James\", \" Mr. Erik Gustaf (Mr Edward Lingrey\\\")\\\"\", \" Mr. Julius\", \" Mr. Herbert Henry\", \" Mr. Evan\", \" Mr. John Bertram\", \" Rev. William\", \" Mrs. Boulton (Olive Potter)\", \" Mr. Nicola\", \" Mr. Thomas\", \" Mrs. (Hulda Kristina Eugenia Lofqvist)\", \" Master. Filip Oscar\", \" Mr. Joseph\", \" Miss. Ellen\", \" Miss. Olga Elida\", \" Mr. John James\", \" Mrs. Benjamin (Edith Nile)\", \" Miss. Julia\", \" Master. Georges Youssef\", \" Miss. Marion\", \" Mr. Ernest\", \" Rev. Joseph Maria\", \" Mrs. Anton (Luise Heilmann)\", \" Mr. Emil\", \" Mr. Edward Watson\", \" Mrs. Henry Arthur Jr (Eleanor Genevieve Fosdick)\", \" Miss. Hilda Maria\", \" Mr. Simon\", \" Mr. Ortin\", \" Mr. Adolf Fredrik\", \" Mr. Assad\", \" Mr. Carl Oscar Vilhelm Gustafsson\", \" Miss. Edith Eileen\", \" Miss. Maude\", \" Mr. Charles Emil Henry\", \" Mrs. Allen Oliver (Nellie E Baumgardner)\", \" Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \" Mr. James Matthew\", \" Mr. Alexander Taylor Jr\", \" Mrs. Daniel Warner (Mary Graham Carmichael Farquarson)\", \" Mr. Patrick\", \" Mrs. Frederick Charles (Mary Helene Baxter)\", \" Mr. Frank Hubert\", \" Miss. Alice Frances Louisa\", \" Mr. Joseph\", \" Miss. Ada\", \" Mr. James\", \" Mr. William A\", \" Mr. Abraham L\", \" Master. Walter John\", \" Mr. John\", \" Master. Marshall Brines\", \" Mr. Julius Konrad Eugen\", \" Master. Robert Douglas\", \" Miss. Berta Olivia\", \" Mr. Charles Robert\", \" Mrs. (Lena Jacobsen Solvang)\", \" Miss. Nora\", \" Master. Gilbert Sigvard Emanuel\", \" Col. John Jacob\", \" Miss. Winifred Vera\", \" Mr. Frank Thomas\", \" Mr. Alfred Fernand\", \" Miss. Katherine\", \" Mr. Sidney C Stuart\", \" Miss. Edith Louise\", \" Mr. Redjo\", \" Mr. Albert Karvin\", \" Mr. Luigi\", \" Mr. Percy William\", \" Mrs. Benjamin (Ellen Truelove Arman)\", \" Miss. Ida Augusta Margareta\", \" Mr. Christopher\", \" Miss. Bridget Delia\", \" Mr. George Dennick\", \" Mrs. George Dunton (Eleanor Elkins)\", \" Mr. Alexander Morrison\", \" Miss. Florentina\", \" Mr. Harold J\", \" Mrs. (Selena Rogers)\", \" Mr. Einar Gervasius\", \" Mrs. Edward (Helen Churchill Hungerford)\", \" Mrs. George (Omine Amenia\\\" Alexander)\\\"\", \" Mr. Johan Charles\", \" Miss. Bridget\", \" Mr. Thomas James\", \" Mr. Samuel James Metcalfe\", \" Mr. George Frederick\", \" Miss. Constance\", \" Mr. Karl Johan\", \" Mr. Michael\", \" Mr. John Bradley\", \" Mr. Olof Edvin\", \" Mr. Frank Manley\", \" Mr. Raffull\", \" Miss. Marta\", \" Mrs. Walter Donald (Mahala Dutton)\", \" Mrs. Carl Johan (Sigrid Posse)\", \" Mrs. (Alice Frances)\", \" Mr. Frederic Oakley\", \" Mr. Abraham\", \" Master. William Arthur Willie\\\"\\\"\", \" Mr. Frederick R\", \" Mrs. J Frank (Claire Bennett)\", \" Mr. James Vivian\", \" Mrs. Stephen (Annie Margaret Hill)\", \" Mrs. Betros (Zahie Maria\\\" Elias)\\\"\", \" Miss. Barbara J\", \" Mr. Abraham August Johannes\", \" Mr. Walter Miller\", \" Mr. Karl Johan\", \" Mr. Linhart\", \" Mr. George William\", \" Mr. John\", \" Mr. Samuel\", \" Miss. Lilian W\", \" Mr. Karl Albert\", \" Mr. Guillaume Joseph\", \" Mr. August Ferdinand\", \" Mrs. Arthur Henry (Addie\\\" Dart Trevaskis)\\\"\", \" Miss. Gertrud Emilia\", \" Mr. Emilio Ilario Giuseppe\", \" Mr. Stanko\", \" Mr. Roderick Robert Crispin\", \" Mr. Charles William\", \" Miss. May Elizabeth\", \" Mr. Mate\", \" Mr. Thomas Francis\", \" Mr. Patrick\", \" Mrs. Walter Miller (Virginia McDowell)\", \" Miss. Mary\", \" Mr. Jean Nassr\", \" Miss. Dagmar Jenny Ingeborg \", \" Mr. Clifford Richard\", \" Mr. Harry\", \" Mr. John James\", \" Mr. Percy Thomas\", \" Miss. Jelka\", \" Master. Alfred Edward\", \" Miss. Honora\", \" Miss. Maria Youssef\", \" Miss. Salli Helena\", \" Mr. William\", \" Mr. Charles (Charles Fardon)\", \" Mr. John Pillsbury\", \" Mr. Sarkis\", \" Mr. Arthur\", \" Mr. George Alexander Lucien\", \" Miss. Margaret Marcella Maggie\\\"\\\"\", \" Mr. Mustafa\", \" Dr. Washington\", \" Mr. Camille\", \" Mr. Minko\", \" Miss. Louise\", \" Mr. Hanna\", \" Mr. Joseph Holland\", \" Mr. Nils\", \" Mr. Oscar Wilhelm\", \" Mr. Noel\", \" Mr. Escott Robert\", \" Mr. Tome\", \" Miss. Catherine Katie\\\"\\\"\", \" Mrs. Edward Gifford (Catherine Elizabeth Halstead)\", \" Mr. Hudson Joshua Creighton\", \" Master. Philip Frank\", \" Mr. Charles Melville\", \" Mrs. Claus Peter (Jennie L Howard)\", \" Mr. Jego Grga\", \" Mr. David\", \" Mr. Harry\", \" Miss. Jeannie\", \" Mrs. John Stuart (Ella Holmes)\", \" Miss. Kate\", \" Mr. William Augustus\", \" Mr. Reginald Harry\", \" Mr. Nils Hilding\", \" Mr. Ernest Wilfred\", \" Mr. Johan Samuel\", \" Mr. Neshan\", \" Mr. Israel\", \" Mr. Alfred G\", \" Miss. Emilie\", \" Mr. Ali\", \" Miss. Ruth Elizabeth\", \" Mr. George (Mr George Thorne\\\")\\\"\", \" Mr. Charles Valentine\", \" Mr. Ingvar\", \" Mrs. John Morgan (Elizabeth Agnes Mary White) \", \" Mr. William Crothers\", \" Mr. Tannous\", \" Mrs. Said (Waika Mary\\\" Mowad)\\\"\", \" Mr. Ivan\", \" Mr. John Edward\", \" Mr. Jose Joaquim\", \" Mr. Joseph\", \" Mr. Herbert\", \" Master. Seman\", \" Mr. Joseph Charles\", \" Mr. Thure Edvin\", \" Mr. John George\", \" Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \" Master. James William\", \" Miss. Karen Marie\", \" Mr. William Hull\", \" Mrs. George Joseph (Shawneene Abi-Saab)\", \" Mr. Ralph\", \" Miss. Nellie\", \" Mrs. Leo David (Blanche Strouse)\", \" Mr. Philip Joseph\", \" Mr. William\", \" Mr. Samuel\", \" Miss. Elizabeth Gladys Millvina\\\"\\\"\", \" Mr. Henry Forbes\", \" Mrs. John Murray (Caroline Lane Lamson)\", \" Mr. Edward\", \" Mr. Patrick\", \" Mrs. Edvard Bengtsson (Elin Gerda Persson)\", \" Master. William Henry\", \" Mrs. Albert (Antoinette Magnin)\", \" Mrs. John James (Florence Louise Long)\", \" Mr. Ivan\", \" Mrs. George Achilles (Dorothy Annan)\", \" Mrs. John (Annie Bullen)\", \" Mr. Joseph\", \" Miss. Susanna Juhantytar Sanni\\\"\\\"\", \" Mrs. Leonard (Pauline C Boeson)\", \" Mr. Emilio\", \" Mr. Edgar\", \" Miss. Helen Alice\", \" Mr. Joseph Bruce\", \" Mr. William H\", \" Mrs. Washington (Ruth Vidaver)\", \" Miss. Grace Scott\", \" Miss. Maria\", \" Mr. Henry Harry\\\"\\\"\", \" Mr. William Edward\", \" Master. Carl Edgar\", \" Mr. Patrick\", \" Mr. Joseph\", \" Mrs. Samuel (Emma)\", \" Mrs. Neal (Eileen O'Leary)\", \" Mr. Edwin Frederick\\\"\\\"\", \" Miss. Kate\", \" Mr. Ernst Axel Algot\", \" Mr. John\", \" Mr. Patrick\", \" Master. Paul Folke\", \" Mr. Vivian Ponsonby\", \" Mrs. Ernest H (Elizabeth Lindsey James)\", \" Master. Eugene Joseph\", \" Mr. William\", \" Mr. Anton\", \" Mrs. Lucien Philip (Mary Eloise Hughes)\", \" Mr. Patrick\", \" Mrs. Maxmillian (Margaretha Emerentia Stehli)\", \" Mr. Edvard A\", \" Mr. Thomas Henry\", \" Miss. Caroline\", \" Mr. Harry\", \" Miss. Dorothy Winifred\", \" Mr. Jose Pedro\", \" Mr. Isaac Gerald\", \" Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \" Mr. William Jeffery\", \" Mr. George Dunton\", \" Miss. Johanna Hannah\\\"\\\"\", \" Miss. Treasteall\", \" Miss. Hannah\", \" Mrs. William Edward (Lillian E Thorpe)\", \" Miss. Jenny Lovisa\", \" Mr. Woolf\", \" Dona. Fermina\", \" Mr. Simon Sivertsen\", \" Mr. Frederick\", \" Master. Michael J\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Fare\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('db69a983-64de-4184-bd76-be8f3ac30abf');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 73,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 43,
                "o_idx": 0
            }
        },
        {
            "source": "### <a class=\"anchor\" id=\"2.1.3_bullet\" style=\"color:#3B61A3\">  2.1.3 Filling \"Embarked\" feature\nWe have two passangers, whose \"Embarked\" information is unknown",
            "mc_idx": 74,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df[df[\"Embarked\"].isna()]",
            "mc_idx": 75,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".isna": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    44,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Survived  Pclass                                 Name     Sex   Age  SibSp  Parch  Ticket    Fare  Cabin Embarked Deck  Side Ticket_p Surname  Namesakes Title  Kid  Old  Alone\nPassengerId                                                                                                                                                                                 \n62                1.0       1                         Miss. Amelie  female  38.0      0      0  113572  1194.0     14      NaN    B  -1.0      N/A   Other          0  Miss    0    0      1\n830               1.0       1   Mrs. George Nelson (Martha Evelyn)  female  62.0      0      0  113572  1194.0     14      NaN    B  -1.0      N/A   Other          0   Mrs    0    1      1"
                    ]
                },
                "mc_idx": 75,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 44,
                "o_idx": 0
            }
        },
        {
            "source": "According to https://www.encyclopedia-titanica.org/titanic-survivor/amelia-icard.html we can fill nan values with \"S\"",
            "mc_idx": 76,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df.loc[df[\"Embarked\"].isna(),\"Embarked\"] = \"S\"",
            "mc_idx": 77,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".isna": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    45,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 77,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 45,
                "o_idx": 0
            }
        },
        {
            "source": "## <a class=\"anchor\" id=\"2.2_bullet\" style=\"color:#3B61A3\">  2.2 Encoding features and droping unnecessary",
            "mc_idx": 78,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We can try to apply OneHot encoder for all columns to see how spars will be the matrix",
            "mc_idx": 79,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "onehot_df = pd.DataFrame(index=df.index)\n\nfor c in [\"Pclass\",\"Sex\",\"Embarked\",\"Deck\",\"Ticket_p\",\"Surname\",\"Title\"]:\n    encoded = OneHotEncoder().fit_transform(df[c].to_numpy().reshape(-1,1)).toarray()\n    columns = [f\"{c}_{i}\" for i in range(encoded.shape[1])]\n    _df =pd.DataFrame(data=encoded, columns=columns, index=df.index)\n    onehot_df = pd.concat([_df,onehot_df], axis=1)\n    \nonehot_df = pd.concat([onehot_df,df[[\"Survived\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Cabin\",\"Namesakes\",\"Kid\",\"Alone\",\"Side\"]]], axis=1)\n\nfor c in [\"Age\",\"Fare\",\"Cabin\",\"SibSp\",\"Parch\"]:\n    onehot_df[c] = MinMaxScaler().fit_transform(onehot_df[c].to_numpy().reshape(-1,1))",
            "mc_idx": 80,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.46153846153846156,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.23076923076923078,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 3,
                    "shape": 3
                },
                "Data_Transform": {
                    ".concat(": 2,
                    "fit_transform": 2,
                    "transform": 2,
                    "minmaxscaler": 2,
                    "onehotencoder": 1,
                    ".reshape": 2,
                    ".concat": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    46,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 80,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 46,
                "o_idx": 0
            }
        },
        {
            "source": "onehot_df.head(10).style.background_gradient(cmap=\"Blues\")",
            "mc_idx": 81,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    47,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7f5589137350>"
                    ]
                },
                "mc_idx": 81,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 47,
                "o_idx": 0
            }
        },
        {
            "source": "Resulting matrix looks like too spars, because of Surnames features, which should provide us some groups of survivals.\nNow we gonna try to use it for the baseline. In the next versions, i'll try some other configurations",
            "mc_idx": 82,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# <a class=\"anchor\" id=\"3_bullet\" style=\"color:#292F55\">  3. Model development",
            "mc_idx": 83,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "df_train = onehot_df.copy(deep=True)\nmask = df_train[\"Survived\"].isna()\ntrain, deploy = df_train[~mask], df_train[mask]\ndeploy = deploy.drop(\"Survived\", axis=1)\ntrain.loc[:,\"Survived\"] = train.loc[:,\"Survived\"].astype(bool)\nx_train, y_train = train.drop(\"Survived\", axis=1), train[\"Survived\"].astype(int)",
            "mc_idx": 84,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 2,
                    ".drop": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    48,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/pandas/core/indexing.py:1675: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"
                    ]
                },
                "mc_idx": 84,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 48,
                "o_idx": 0
            }
        },
        {
            "source": "## <a class=\"anchor\" id=\"3.1_bullet\" style=\"color:#3B61A3\">  3.1 Models baselines",
            "mc_idx": 85,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We will define the method, which fits the given model and puts all the neccesery data into different structures to use them further:\n\n* deploy_acc  - model accuracy for deploy dataset\n* train_acc   - model accuracy after the validation\n* models_dict - dictionary of the models\n",
            "mc_idx": 86,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "deploy_acc, train_acc, models_dict= {},{},{}\n\ndef baseline(name, model, verbose=True):\n    models_dict[name] = model\n    models_dict[name].fit(x_train,y_train)\n    y_train_hat = models_dict[name].predict(x_train)\n    train_acc[name] = accuracy_score(y_train,y_train_hat)\n    if verbose:\n        skplt.metrics.plot_confusion_matrix(y_train, y_train_hat, normalize=True, figsize=(5,5))\n    submition = pd.DataFrame(models_dict[name].predict(deploy), index= deploy.index,columns = [\"Survived\"]).astype(int)\n    submition.to_csv(f'{name}.csv')",
            "mc_idx": 87,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.15384615384615385,
                "Data_Transform": 0.07692307692307693,
                "Model_Train": 0.6153846153846154,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5384615384615384,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.15384615384615385,
                "Debug": 0.0,
                "Data_Export": 0.15384615384615385,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {
                    ".fit(": 1,
                    "model": 7
                },
                "Model_Evaluation": {
                    "confusion_matrix": 2,
                    "accuracy_score": 2,
                    "model": 7,
                    ".predict(": 2
                },
                "Model_Interpretation": {
                    "model": 7
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plot_confusion_matrix": 1,
                    ".plot_confusion_matrix": 1
                },
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    49,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 87,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 49,
                "o_idx": 0
            }
        },
        {
            "source": "I've tried several Gridsearches for CVs with Kfold. And after a bunch of deploys, i chose those models.\nI chose models which gave me the best deploy accuracy. This models gonna be not \"Best model for Survival prediction\" , but \"The best model to predict the test set\", which is not the exect solution for the task.",
            "mc_idx": 88,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "params = {\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}\nname, model = \"lr_baseline\", LogisticRegression(**params)\nbaseline(name, model, verbose=False)\n\nname, model = \"svm_baseline\", SVC(**{'C': 5, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'})\nbaseline(name, model, verbose=False)\n\nparams = {\"eta\":0.1,\"gamma\":0,\"max_depth\":6,\"lambda\":0.1,\"alpha\":10}\nname, model = \"xg_baseline\", XGBClassifier(**params)\nbaseline(name, model, verbose=False)\n\nparams = {\"rsm\":0.1, \"learning_rate\":0.005,\"iterations\":500,\"l2_leaf_reg\":5,\"verbose\":False}\nname, model = \"cb_baseline\", CatBoostClassifier(**params)\nbaseline(name, model, verbose=False)",
            "mc_idx": 89,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.8,
                "Model_Interpretation": 0.8,
                "Hyperparameter_Tuning": 0.6,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 8,
                    "logisticregression": 1,
                    "svc": 1
                },
                "Model_Evaluation": {
                    "model": 8
                },
                "Model_Interpretation": {
                    "model": 8
                },
                "Hyperparameter_Tuning": {
                    "param": 6
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    50,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/xgboost/sklearn.py:888: UserWarning:\n\nThe use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n\n",
                        "[06:08:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
                    ]
                },
                "mc_idx": 89,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 50,
                "o_idx": 1
            }
        },
        {
            "source": "fig = plt.figure(figsize=(35,10))\ncount=1\nfor k in models_dict:\n    ax = fig.add_subplot(1,len(models_dict),count)\n    count+=1\n    skplt.metrics.plot_confusion_matrix(y_train, models_dict[k].predict(x_train), normalize=True, figsize=(5,5),ax=ax, cmap=\"Blues\")\n    ax.set_title(k)\nplt.show()",
            "mc_idx": 90,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.16666666666666666,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 0.16666666666666666,
                "Model_Train": 0.5,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.3333333333333333,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {
                    ".add": 1
                },
                "Model_Train": {
                    "model": 3
                },
                "Model_Evaluation": {
                    "confusion_matrix": 2,
                    "model": 3,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "model": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plot_confusion_matrix": 1,
                    ".plot_confusion_matrix": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c051_o000_image_4.png",
                    51,
                    0,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 2520x720 with 8 Axes>"
                    ]
                },
                "mc_idx": 90,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 51,
                "o_idx": 0
            }
        },
        {
            "source": "deploy_acc[\"lr_baseline\"]  = 0.79904\ndeploy_acc[\"svm_baseline\"] = 0.80382\ndeploy_acc[\"xg_baseline\"]  = 0.78947\ndeploy_acc[\"cb_baseline\"]  = 0.79425 \nprint(\"Accuracy on the deployment set:\")\nfor k in deploy_acc:\n    print(f\"{k}\\t:\\t{deploy_acc[k]}\")",
            "mc_idx": 91,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    52,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Accuracy on the deployment set:\nlr_baseline\t:\t0.79904\nsvm_baseline\t:\t0.80382\nxg_baseline\t:\t0.78947\ncb_baseline\t:\t0.79425\n"
                    ]
                },
                "mc_idx": 91,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 52,
                "o_idx": 0
            }
        },
        {
            "source": "print(\"Accuracy on the training set:\")\nfor k in train_acc:\n    print(f\"{k}\\t:\\t{train_acc[k]}\")",
            "mc_idx": 92,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    53,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Accuracy on the training set:\nlr_baseline\t:\t0.8417508417508418\nsvm_baseline\t:\t0.8911335578002245\nxg_baseline\t:\t0.8552188552188552\ncb_baseline\t:\t0.8451178451178452\n"
                    ]
                },
                "mc_idx": 92,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 53,
                "o_idx": 0
            }
        },
        {
            "source": "### <a class=\"anchor\" id=\"3.2_bullet\" style=\"color:#3B61A3\"> 3.2 Ensemble models",
            "mc_idx": 93,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "name, model = \"ensemble\", StackingClassifier(classifiers=(models_dict[\"svm_baseline\"],models_dict[\"lr_baseline\"],\n                                                                    models_dict[\"xg_baseline\"], models_dict[\"cb_baseline\"]),\n                                               meta_classifier=LogisticRegression(**{\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}),\n                                               use_features_in_secondary=True)\nbaseline(name, model, verbose=False)",
            "mc_idx": 94,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.125,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.75,
                "Model_Interpretation": 0.75,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {
                    "model": 6,
                    "logisticregression": 1,
                    "stackingclassifier": 1
                },
                "Model_Evaluation": {
                    "model": 6
                },
                "Model_Interpretation": {
                    "model": 6
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    54,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/xgboost/sklearn.py:888: UserWarning:\n\nThe use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n\n",
                        "[06:08:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
                    ]
                },
                "mc_idx": 94,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 54,
                "o_idx": 1
            }
        },
        {
            "source": "deploy_acc[\"ensemble\"]  = 0.80622",
            "mc_idx": 95,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    55,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 95,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 55,
                "o_idx": 0
            }
        },
        {
            "source": "We see, that all 5 models has different sepations on the data (even on the trains set)\nNow we gonna combine this models into peculiar ensemble.\nWe gonna put som waights, according to there deploy results.",
            "mc_idx": 96,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "ens_train, ens_deploy = {}, {}\nfor k in models_dict:\n    ens_train[k] = models_dict[k].predict(x_train) * deploy_acc[k]\n    ens_deploy[k] = models_dict[k].predict(deploy) * deploy_acc[k]\nx_train = pd.concat([pd.DataFrame(ens_train, index=x_train.index),x_train], axis=1)        \ndeploy = pd.concat([pd.DataFrame(ens_deploy, index=deploy.index),deploy], axis=1)",
            "mc_idx": 97,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.8,
                "Model_Train": 0.6,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.6,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".concat(": 2,
                    ".concat": 2
                },
                "Model_Train": {
                    "model": 3
                },
                "Model_Evaluation": {
                    "model": 3,
                    ".predict(": 2
                },
                "Model_Interpretation": {
                    "model": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    56,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 97,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 56,
                "o_idx": 0
            }
        },
        {
            "source": "model = SVC()\nmodel.fit(x_train,y_train)\nsubmition = pd.DataFrame({\"PassengerId\":deploy.index,\"Survived\":model.predict(deploy)}).astype(int)",
            "mc_idx": 98,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.16666666666666666,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.6666666666666666,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {
                    "model.fit": 1,
                    ".fit(": 1,
                    "model": 3,
                    "svc": 1
                },
                "Model_Evaluation": {
                    "model": 3,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "model": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    57,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 98,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 57,
                "o_idx": 0
            }
        },
        {
            "source": "submition.to_csv(\"mixture.csv\",index=False) #0.81100",
            "mc_idx": 99,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    58,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 99,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 58,
                "o_idx": 0
            }
        },
        {
            "source": "![Upvote!](https://img.shields.io/badge/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)",
            "mc_idx": 100,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        }
    ],
    "code_cells": [
        {
            "source": "from sklearn.preprocessing import OneHotEncoder, LabelEncoder, MinMaxScaler, LabelBinarizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression, RidgeClassifierCV\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import LinearSVC, SVC\n\nfrom mlxtend.classifier import StackingClassifier\nfrom catboost import CatBoostClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n\nimport plotly.express as px\nfrom matplotlib import pyplot as plt\nimport scikitplot as skplt\nimport missingno as msno\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport os\nimport re\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)",
            "mc_idx": 0,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0273224043715847,
                "Data_Transform": 0.04371584699453552,
                "Model_Train": 0.04918032786885246,
                "Model_Evaluation": 0.01639344262295082,
                "Model_Interpretation": 0.00546448087431694,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.01639344262295082,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 18
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "plotly": 1,
                    "matplotlib": 1,
                    "columns": 1,
                    ".max": 2
                },
                "Data_Transform": {
                    "minmaxscaler": 2,
                    "labelencoder": 2,
                    "onehotencoder": 1,
                    "binarizer": 1,
                    "stack": 1,
                    ".exp": 1
                },
                "Model_Train": {
                    "model": 1,
                    "randomforestclassifier": 2,
                    "logisticregression": 1,
                    "ridge": 1,
                    "svc": 2,
                    "stackingclassifier": 1,
                    ".linear": 1
                },
                "Model_Evaluation": {
                    "accuracy_score": 2,
                    "model": 1
                },
                "Model_Interpretation": {
                    "model": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plotly.express": 1,
                    "matplotlib": 1,
                    "pyplot": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    0,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<IPython.core.display.HTML object>"
                    ]
                },
                "mc_idx": 0,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 0,
                "o_idx": 0
            }
        },
        {
            "source": "cm = [\"#273176\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\"]\ngradient = [\"#292F55\",\"#273176\",\"#223A92\",\"#3B61A3\",\"#76A4AC\",\"#BFD4B2\",\"#DAD8A1\",\"#C7B679\",\"#957447\"]\nsns.palplot(gradient)",
            "mc_idx": 2,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Interpretation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.5,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 1.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "sns.": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 2
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "sns.": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c001_o000_image_0.png",
                    1,
                    0,
                    0
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 648x72 with 1 Axes>"
                    ]
                },
                "mc_idx": 2,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 1,
                "o_idx": 0
            }
        },
        {
            "source": "path = \"/kaggle/input/titanic/\"\ndf_tr = pd.read_csv(f\"{path}train.csv\").set_index(\"PassengerId\", drop=True)\ndf_ts = pd.read_csv(f\"{path}test.csv\").set_index(\"PassengerId\", drop=True)\ndf = pd.concat([df_tr, df_ts], axis=0)\ndf.head(10).style.background_gradient(cmap='Blues')",
            "mc_idx": 5,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Extraction",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 1.0,
                "Exploratory_Data_Analysis": 0.375,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.125,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {
                    "read_csv": 4,
                    "pd.read_": 4
                },
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {
                    ".concat(": 1,
                    ".set_index": 2,
                    ".concat": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    2,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7f55d60d9a90>"
                    ]
                },
                "mc_idx": 5,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 2,
                "o_idx": 0
            }
        },
        {
            "source": "msno.bar(df, figsize=(30,2), color=gradient)",
            "mc_idx": 6,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c003_o001_image_1.png",
                    3,
                    1,
                    1
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 2160x144 with 3 Axes>"
                    ]
                },
                "mc_idx": 6,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 3,
                "o_idx": 1
            }
        },
        {
            "source": "df[\"Deck\"] = df[\"Cabin\"].str[:1]\ndf[\"Deck\"] = df[\"Deck\"].replace(np.nan,\"N/A\")\nprint(\"All Deck descriptors:\")\nprint(set(df[\"Deck\"].values))",
            "mc_idx": 9,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    4,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "All Deck descriptors:\n{'E', 'A', 'T', 'C', 'G', 'N/A', 'D', 'B', 'F'}\n"
                    ]
                },
                "mc_idx": 9,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 4,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Deck\"]!=\"N/A\"]\nfig = px.histogram(dfplt, x=\"Deck\",color=\"Survived\",\n                   color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 10,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    5,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        ",
                        "<div>                            <div id=\"3343d9f5-c42b-4ea5-9300-81764300941c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"3343d9f5-c42b-4ea5-9300-81764300941c\")) {                    Plotly.newPlot(                        \"3343d9f5-c42b-4ea5-9300-81764300941c\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Deck=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"xxaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Deck=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"E\", \"C\", \"B\", \"C\", \"F\", \"E\", \"A\", \"D\", \"C\", \"B\", \"D\", \"C\", \"B\", \"F\", \"B\", \"A\", \"C\", \"A\", \"G\", \"C\", \"G\", \"C\", \"E\", \"B\", \"C\", \"A\", \"D\", \"C\", \"C\", \"C\", \"C\", \"T\", \"C\", \"C\", \"E\", \"C\", \"C\", \"E\", \"E\", \"A\", \"B\", \"C\", \"C\", \"C\", \"D\", \"C\", \"B\", \"C\", \"A\", \"D\", \"D\", \"E\", \"B\", \"C\", \"F\", \"C\", \"F\", \"C\", \"B\", \"D\", \"E\", \"F\", \"D\", \"B\", \"A\", \"B\", \"A\", \"B\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Deck=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"xxaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Deck\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('3343d9f5-c42b-4ea5-9300-81764300941c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 10,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 5,
                "o_idx": 1
            }
        },
        {
            "source": "df.loc[df[\"Deck\"]=='T',\"Deck\"] = 'N/A'",
            "mc_idx": 12,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    6,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 12,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 6,
                "o_idx": 0
            }
        },
        {
            "source": "replaces = {'B51 B53 B55': 'B55', 'B52 B54 B56': 'B56', 'B57 B59 B63 B66': 'B66', 'B58 B60': 'B60', \n            'B82 B84': 'B84', 'B96 B98': 'B98', 'C22 C26': 'C26', 'C23 C25 C27': 'C27', 'C55 C57': 'C57',\n            'C62 C64': 'C64', 'D10 D12': 'D12', 'E39 E41': 'E41', 'F E46': 'E46', 'F E57': 'E57',\n            'F E69': 'E69', 'F G63': 'G63', 'F G73': 'G73', 'F': None, 'D': None, ' ': None, 'T': None, np.nan: None}\ndf[\"Cabin\"] = df[\"Cabin\"].replace(replaces)\ndf[\"Cabin\"] = df.fillna(np.nan)[\"Cabin\"].str[1:].astype(float)",
            "mc_idx": 14,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".fillna(": 1,
                    ".replace(": 1,
                    ".astype(": 1,
                    ".fillna": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    7,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 14,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 7,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Cabin\",color=\"Survived\", height=300,\n                   color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 15,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    8,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"047b4d4a-05e3-403f-8377-dff738c187e5\" class=\"plotly-graph-div\" style=\"height:300px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"047b4d4a-05e3-403f-8377-dff738c187e5\")) {                    Plotly.newPlot(                        \"047b4d4a-05e3-403f-8377-dff738c187e5\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Cabin=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [null, null, null, 46.0, null, null, null, null, null, null, null, null, null, 27.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30.0, null, null, null, 83.0, null, null, null, null, null, null, null, null, 73.0, null, null, null, null, null, null, null, null, null, 31.0, null, null, null, 5.0, null, null, null, 26.0, null, null, null, null, 110.0, null, null, null, null, null, null, null, 60.0, null, null, null, null, 26.0, null, null, null, null, null, null, null, 123.0, null, 86.0, null, null, null, null, null, 2.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 19.0, null, null, 7.0, null, null, 49.0, null, null, null, null, null, 32.0, null, null, null, null, null, null, null, null, null, null, 6.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 78.0, null, null, null, 6.0, 87.0, null, null, null, 67.0, 94.0, null, null, null, null, 118.0, null, null, null, null, null, null, 19.0, null, null, null, null, null, null, null, 26.0, null, null, null, null, null, null, null, null, null, null, null, 124.0, 91.0, null, null, 2.0, null, null, null, null, null, null, 128.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 82.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 44.0, null, 27.0, null, null, null, null, null, 111.0, null, 38.0, null, null, 63.0, null, null, null, null, null, null, null, null, null, 14.0, null, null, null, null, null, null, null, 37.0, null, null, null, 30.0, null, null, null, null, 26.0, null, null, null, null, null, 65.0, null, null, null, 46.0, null, null, null, null, null, null, 95.0, null, null, null, null, null, 38.0, null, null, null, 86.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 10.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 50.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 48.0, null, 58.0, null, null, null, null, null, 71.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 68.0, 63.0, null, null, null, null, 124.0, null, null, 73.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 46.0, null, 22.0, null, 30.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 77.0, null, null, 38.0, null, 6.0, null, null, null, null, 84.0, null, null, null, null, null, null, null, null, null, null, 36.0, null, null, null, null, null, null, null, 102.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 24.0, null, null, 55.0, null, null, null, null, null, null, null, null, null, null, null, null], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Cabin=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [85.0, null, 123.0, null, null, 6.0, 103.0, null, null, null, 56.0, null, 6.0, null, null, 78.0, null, null, null, null, null, null, 33.0, null, 52.0, null, null, 28.0, null, 33.0, null, null, null, null, null, null, null, null, 27.0, 12.0, null, null, null, null, 101.0, null, null, 69.0, null, 47.0, null, null, null, 2.0, null, null, null, 33.0, null, 4.0, null, null, null, null, null, 2.0, 4.0, 80.0, null, null, null, null, 31.0, null, 36.0, null, 15.0, null, 93.0, null, 83.0, null, null, null, null, 35.0, null, null, 77.0, null, null, null, null, 125.0, 99.0, null, null, null, 7.0, null, null, null, null, null, null, 49.0, 106.0, 60.0, null, null, 101.0, 26.0, null, 65.0, 36.0, 54.0, 66.0, null, null, 7.0, 34.0, null, null, 32.0, null, null, 18.0, null, null, 40.0, null, 2.0, 27.0, 33.0, null, null, null, 33.0, null, null, 37.0, null, null, 35.0, 50.0, null, null, null, null, null, null, null, 98.0, null, 36.0, 6.0, null, null, null, 78.0, null, null, null, null, null, 10.0, 52.0, null, null, 98.0, null, null, null, null, 34.0, null, null, null, 104.0, 92.0, null, 21.0, null, 12.0, null, null, null, null, null, 49.0, 93.0, null, 20.0, 79.0, null, null, null, null, 25.0, null, 33.0, null, 73.0, 18.0, null, null, null, null, null, 39.0, 22.0, null, null, null, null, 70.0, null, null, 16.0, 67.0, null, null, null, 101.0, 25.0, null, null, 44.0, null, null, 68.0, 68.0, 41.0, 20.0, null, 20.0, null, null, null, null, 125.0, null, null, 4.0, 19.0, null, 9.0, 23.0, 50.0, null, 35.0, null, null, 33.0, 26.0, null, null, null, null, null, 126.0, null, null, null, 55.0, 49.0, 5.0, 20.0, null, null, null, 64.0, 24.0, null, 24.0, null, null, 90.0, 126.0, 45.0, 101.0, null, 8.0, null, null, 5.0, 101.0, 45.0, 66.0, null, null, null, 121.0, null, null, 77.0, null, 98.0, 11.0, null, null, 3.0, null, 20.0, null, null, 17.0, null, null, 98.0, null, null, 8.0, 69.0, null, 121.0, null, null, 28.0, null, null, 49.0, null, 47.0, null, 92.0, 28.0, null, null, 17.0, null, 17.0, null, null, null, 35.0, null, null, 50.0, null, 42.0, 148.0], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Cabin=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [null, null, null, null, null, null, null, null, null, null, null, null, 45.0, null, 31.0, null, null, null, null, null, null, null, null, null, 66.0, null, 36.0, null, 21.0, null, null, null, null, null, 78.0, null, null, null, null, null, null, 34.0, null, null, 19.0, null, 9.0, null, 15.0, null, 31.0, null, null, 27.0, null, null, null, 63.0, null, 61.0, null, null, null, null, 66.0, null, null, null, 53.0, 27.0, null, null, null, 43.0, 130.0, 132.0, null, 101.0, null, null, null, 57.0, null, null, null, null, null, null, null, null, null, null, 71.0, null, null, null, 46.0, null, null, null, 116.0, null, null, null, null, null, null, null, null, null, null, null, 29.0, null, 57.0, null, null, 6.0, 6.0, null, null, null, 28.0, null, null, null, null, null, null, null, null, 51.0, null, null, null, null, null, null, null, null, null, null, 66.0, null, null, null, 46.0, null, null, null, 54.0, null, null, null, null, null, 97.0, null, 22.0, null, null, null, null, null, null, null, 10.0, null, null, null, null, null, null, null, null, null, null, 116.0, 4.0, 45.0, null, 52.0, 30.0, null, 60.0, null, null, null, null, null, null, null, null, null, null, null, 34.0, null, null, null, null, null, 64.0, null, null, null, null, null, 11.0, null, null, null, null, null, null, 11.0, null, null, 80.0, null, null, null, 33.0, null, null, null, null, null, null, null, null, null, null, null, 85.0, null, 37.0, null, null, 86.0, null, null, 34.0, null, null, 21.0, null, null, null, null, null, null, 89.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 6.0, null, 89.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 45.0, 46.0, null, null, null, null, 34.0, null, null, null, null, null, null, null, null, null, null, null, 26.0, 26.0, null, 69.0, null, null, null, null, null, 32.0, null, 78.0, null, null, null, null, 57.0, 2.0, null, null, null, 4.0, null, null, null, null, 18.0, null, null, null, 106.0, null, null, null, null, null, null, null, 55.0, null, null, null, null, null, null, 12.0, null, null, null, null, 60.0, 101.0, null, null, null, null, null, null, null, 50.0, null, null, null, null, null, null, 41.0, 56.0, null, 34.0, null, null, null, 39.0, null, null, null, null, null, null, null, null, null, null, null, 24.0, 28.0, null, null, null, 31.0, null, 41.0, null, null, 7.0, null, null, null, 40.0, 38.0, null, 80.0, null, null, null, 78.0, null, null, 105.0, null, null, null], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"height\": 300, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Cabin\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('047b4d4a-05e3-403f-8377-dff738c187e5');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 15,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 8,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Side\"] = df[\"Cabin\"]\ndf.loc[df[\"Side\"]!=0,\"Side\"] = (df[\"Cabin\"][df[\"Cabin\"]!=0]%2-0.5)*2\n\ns = df[df[\"Side\"]==1]\nprint(f'Survived for side 1\\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Side\"]==-1]\nprint(f'Survived for side -1\\t {len(s[s[\"Survived\"]==1])/len(s)}')",
            "mc_idx": 17,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    9,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Survived for side 1\t 0.5076923076923077\nSurvived for side -1\t 0.4276729559748428\n"
                    ]
                },
                "mc_idx": 17,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 9,
                "o_idx": 0
            }
        },
        {
            "source": "for i in set(df[\"Deck\"].values):\n    v = df[df[\"Deck\"]==i][\"Cabin\"]//2\n    df.loc[df[\"Deck\"]==i, \"Cabin\"]= v\n    df.loc[(df[\"Deck\"]==i) & (df[\"Cabin\"]==0),\"Cabin\"] = np.median(v)\n    \ndf.loc[df[\"Cabin\"].isna(),\"Cabin\"]=-1\ndf[\"Cabin\"] = df[\"Cabin\"].astype(int)",
            "mc_idx": 19,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".median": 2,
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    10,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 19,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 10,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter_3d(dfplt, x=\"Cabin\", y=\"Side\", z= \"Deck\", color=\"Survived\",\n                    color_discrete_sequence=cm, size_max=6, width=1000, height=1000)\nfig.show()",
            "mc_idx": 21,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 1,
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    11,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"33991d93-358a-4f59-a927-48299b1d6f11\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"33991d93-358a-4f59-a927-48299b1d6f11\")) {                    Plotly.newPlot(                        \"33991d93-358a-4f59-a927-48299b1d6f11\",                        [{\"hovertemplate\": \"Survived=0.0<br>Cabin=%{x}<br>Side=%{y}<br>Deck=%{z}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"scene\": \"scene\", \"showlegend\": true, \"type\": \"scatter3d\", \"x\": [-1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 2, -1, -1, -1, 13, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, 61, -1, 43, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, 3, -1, -1, 24, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, 3, 43, -1, -1, -1, 33, 47, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 45, -1, -1, 1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, 13, -1, -1, -1, -1, -1, 55, -1, 19, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, 15, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, 32, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, 19, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, 29, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, 31, -1, -1, -1, -1, 62, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, 11, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, 19, -1, 3, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], \"y\": [null, null, null, -1.0, null, null, null, null, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, 1.0, null, null, null, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, null, null, 1.0, null, null, null, 1.0, null, null, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, null, 1.0, null, -1.0, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1.0, null, null, 1.0, null, null, 1.0, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, -1.0, 1.0, null, null, null, 1.0, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, -1.0, 1.0, null, null, -1.0, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, 1.0, null, null, null, null, null, 1.0, null, -1.0, null, null, 1.0, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, 1.0, null, null, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, 1.0, null, null, null, -1.0, null, null, null, null, null, null, 1.0, null, null, null, null, null, -1.0, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, -1.0, null, null, null, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, 1.0, null, null, null, null, -1.0, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, -1.0, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1.0, null, null, -1.0, null, -1.0, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, -1.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, -1.0, null, null, 1.0, null, null, null, null, null, null, null, null, null, null, null, null], \"z\": [\"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"G\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"G\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"C\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"B\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]}, {\"hovertemplate\": \"Survived=1.0<br>Cabin=%{x}<br>Side=%{y}<br>Deck=%{z}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"scene\": \"scene\", \"showlegend\": true, \"type\": \"scatter3d\", \"x\": [42, -1, 61, -1, -1, 3, 51, -1, -1, -1, 28, -1, 3, -1, -1, 39, -1, -1, -1, -1, -1, -1, 16, -1, 26, -1, -1, 14, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, 13, 6, -1, -1, -1, -1, 50, -1, -1, 34, -1, 23, -1, -1, -1, 1, -1, -1, -1, 16, -1, 2, -1, -1, -1, -1, -1, 1, 2, 40, -1, -1, -1, -1, 15, -1, 18, -1, 7, -1, 46, -1, 41, -1, -1, -1, -1, 17, -1, -1, 38, -1, -1, -1, -1, 62, 49, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 24, 53, 30, -1, -1, 50, 13, -1, 32, 18, 27, 33, -1, -1, 3, 17, -1, -1, 16, -1, -1, 9, -1, -1, 20, -1, 1, 13, 16, -1, -1, -1, 16, -1, -1, 18, -1, -1, 17, 25, -1, -1, -1, -1, -1, -1, -1, 49, -1, 18, 3, -1, -1, -1, 39, -1, -1, -1, -1, -1, 5, 26, -1, -1, 49, -1, -1, -1, -1, 17, -1, -1, -1, 52, 46, -1, 10, -1, 6, -1, -1, -1, -1, -1, 24, 46, -1, 10, 39, -1, -1, -1, -1, 12, -1, 16, -1, 36, 9, -1, -1, -1, -1, -1, 19, 11, -1, -1, -1, -1, 35, -1, -1, 8, 33, -1, -1, -1, 50, 12, -1, -1, 22, -1, -1, 34, 34, 20, 10, -1, 10, -1, -1, -1, -1, 62, -1, -1, 2, 9, -1, 4, 11, 25, -1, 17, -1, -1, 16, 13, -1, -1, -1, -1, -1, 63, -1, -1, -1, 27, 24, 2, 10, -1, -1, -1, 32, 12, -1, 12, -1, -1, 45, 63, 22, 50, -1, 4, -1, -1, 2, 50, 22, 33, -1, -1, -1, 60, -1, -1, 38, -1, 49, 5, -1, -1, 1, -1, 10, -1, -1, 8, -1, -1, 49, -1, -1, 4, 34, -1, 60, -1, -1, 14, -1, -1, 24, -1, 23, -1, 46, 14, -1, -1, 8, -1, 8, -1, -1, -1, 17, -1, -1, 25, -1, 21, 74], \"y\": [1.0, null, 1.0, null, null, -1.0, 1.0, null, null, null, -1.0, null, -1.0, null, null, -1.0, null, null, null, null, null, null, 1.0, null, -1.0, null, null, -1.0, null, 1.0, null, null, null, null, null, null, null, null, 1.0, -1.0, null, null, null, null, 1.0, null, null, 1.0, null, 1.0, null, null, null, -1.0, null, null, null, 1.0, null, -1.0, null, null, null, null, null, -1.0, -1.0, -1.0, null, null, null, null, 1.0, null, -1.0, null, 1.0, null, 1.0, null, 1.0, null, null, null, null, 1.0, null, null, 1.0, null, null, null, null, 1.0, 1.0, null, null, null, 1.0, null, null, null, null, null, null, 1.0, -1.0, -1.0, null, null, 1.0, -1.0, null, 1.0, -1.0, -1.0, -1.0, null, null, 1.0, -1.0, null, null, -1.0, null, null, -1.0, null, null, -1.0, null, -1.0, 1.0, 1.0, null, null, null, 1.0, null, null, 1.0, null, null, 1.0, -1.0, null, null, null, null, null, null, null, -1.0, null, -1.0, -1.0, null, null, null, -1.0, null, null, null, null, null, -1.0, -1.0, null, null, -1.0, null, null, null, null, -1.0, null, null, null, -1.0, -1.0, null, 1.0, null, -1.0, null, null, null, null, null, 1.0, 1.0, null, -1.0, 1.0, null, null, null, null, 1.0, null, 1.0, null, 1.0, -1.0, null, null, null, null, null, 1.0, -1.0, null, null, null, null, -1.0, null, null, -1.0, 1.0, null, null, null, 1.0, 1.0, null, null, -1.0, null, null, -1.0, -1.0, 1.0, -1.0, null, -1.0, null, null, null, null, 1.0, null, null, -1.0, 1.0, null, 1.0, 1.0, -1.0, null, 1.0, null, null, 1.0, -1.0, null, null, null, null, null, -1.0, null, null, null, 1.0, 1.0, 1.0, -1.0, null, null, null, -1.0, -1.0, null, -1.0, null, null, -1.0, -1.0, 1.0, 1.0, null, -1.0, null, null, 1.0, 1.0, 1.0, -1.0, null, null, null, 1.0, null, null, 1.0, null, -1.0, 1.0, null, null, 1.0, null, -1.0, null, null, 1.0, null, null, -1.0, null, null, -1.0, 1.0, null, 1.0, null, null, -1.0, null, null, 1.0, null, 1.0, null, -1.0, -1.0, null, null, 1.0, null, 1.0, null, null, null, 1.0, null, null, -1.0, null, -1.0, -1.0], \"z\": [\"C\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"G\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"F\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"F\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"D\", \"N/A\", \"D\", \"N/A\", \"C\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"C\", \"B\", \"N/A\", \"N/A\", \"E\", \"C\", \"N/A\", \"C\", \"E\", \"C\", \"B\", \"N/A\", \"N/A\", \"C\", \"E\", \"N/A\", \"N/A\", \"C\", \"D\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"F\", \"C\", \"F\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"D\", \"G\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"C\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"C\", \"N/A\", \"D\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"C\", \"N/A\", \"D\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"F\", \"N/A\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"A\", \"E\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"E\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"C\", \"E\", \"B\", \"D\", \"N/A\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"F\", \"D\", \"N/A\", \"D\", \"A\", \"B\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"D\", \"A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"N/A\", \"N/A\", \"B\", \"D\", \"B\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"C\", \"E\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"C\", \"C\", \"C\", \"E\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"B\", \"B\", \"D\", \"B\", \"N/A\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"B\", \"D\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"E\", \"B\", \"N/A\", \"E\", \"N/A\", \"N/A\", \"B\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"C\", \"N/A\", \"C\", \"D\", \"N/A\", \"N/A\", \"E\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"N/A\", \"D\", \"N/A\", \"N/A\", \"C\", \"N/A\", \"B\", \"C\"]}],                        {\"height\": 1000, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"scene\": {\"domain\": {\"x\": [0.0, 1.0], \"y\": [0.0, 1.0]}, \"xaxis\": {\"title\": {\"text\": \"Cabin\"}}, \"yaxis\": {\"title\": {\"text\": \"Side\"}}, \"zaxis\": {\"title\": {\"text\": \"Deck\"}}}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1000},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('33991d93-358a-4f59-a927-48299b1d6f11');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 21,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 11,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Side\"] = df[\"Side\"].fillna(0)\nmsno.bar(df, figsize=(30,2), color=cm)",
            "mc_idx": 23,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".fillna(": 1,
                    ".fillna": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c012_o001_image_2.png",
                    12,
                    1,
                    2
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 2160x144 with 3 Axes>"
                    ]
                },
                "mc_idx": 23,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 12,
                "o_idx": 1
            }
        },
        {
            "source": "lin_rep = lambda x: x.replace({'LINE':\"370160\"})\ndf = lin_rep(df)",
            "mc_idx": 27,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    13,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 27,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 13,
                "o_idx": 0
            }
        },
        {
            "source": "prefixes = []\nnums, prefs = [],[]\nfor i in df[\"Ticket\"].values:   \n    if not i.isdigit():\n        nums.append(int(re.search('.* {1}([0-9]+)', i).groups()[0]))\n        prefix = re.search('(.*)( {1})[0-9]+', i).groups()[0]\n        prefs.append(prefix.replace(\".\",\"\").replace(\" \", \"\").replace(\"/\",\"\")) # Needed to put in one group such prefixes as \"A/5\", \"A/5.\", \"A.5\" etc.\n    else:\n        nums.append(int(i))\n        prefs.append(\"\")\ndf[\"Ticket\"] = nums\ndf[\"Ticket_p\"] = prefs",
            "mc_idx": 29,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 3,
                    ".replace": 3
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    14,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 29,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 14,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show()",
            "mc_idx": 30,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    15,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"7fce9260-136e-4bf5-824b-0373080fe871\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7fce9260-136e-4bf5-824b-0373080fe871\")) {                    Plotly.newPlot(                        \"7fce9260-136e-4bf5-824b-0373080fe871\",                        [{\"hovertemplate\": \"Survived=0.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [\"A5\", \"\", \"\", \"\", \"\", \"A5\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"CA\", \"PC\", \"\", \"A5\", \"\", \"\", \"\", \"\", \"SCA4\", \"\", \"\", \"\", \"\", \"A4\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"PC\", \"SP\", \"\", \"CA\", \"CA\", \"SOC\", \"\", \"\", \"\", \"\", \"\", \"\", \"WC\", \"SOTONOQ\", \"\", \"\", \"\", \"WEP\", \"CA\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"PC\", \"\", \"SOC\", \"A4\", \"\", \"\", \"\", \"\", \"\", \"SOTONOQ\", \"A5\", \"CA\", \"SCPARIS\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"CA\", \"WC\", \"\", \"\", \"SOP\", \"A5\", \"A5\", \"Faaris\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"A5\", \"PPP\", \"\", \"\", \"FCC\", \"\", \"A5\", \"\", \"CA\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"SOTONOQ\", \"\", \"C\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"STONO2\", \"\", \"SOC\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"A5\", \"\", \"\", \"\", \"A4\", \"\", \"STONO2\", \"\", \"WC\", \"\", \"CA\", \"\", \"\", \"CA\", \"\", \"\", \"A5\", \"\", \"\", \"\", \"\", \"\", \"AS\", \"SOTONOQ\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"A5\", \"\", \"\", \"A5\", \"\", \"SOTONOQ\", \"\", \"PC\", \"A4\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"C\", \"SOTONOQ\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"SOTONOQ\", \"SOTONOQ\", \"A4\", \"\", \"\", \"\", \"A4\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"A5\", \"STONO2\", \"A5\", \"\", \"SCAH\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOTONOQ\", \"\", \"\", \"\", \"A5\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"STONO2\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"SOPP\", \"\", \"\", \"\", \"SOC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOC\", \"\", \"\", \"A5\", \"FC\", \"CA\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"CA\", \"\", \"SCParis\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"WC\", \"\", \"\", \"\", \"\", \"WEP\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOTONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOPP\", \"\", \"\", \"\", \"\", \"\", \"WC\", \"SOTONOQ\", \"\", \"\", \"PC\", \"\", \"\", \"CA\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"A4\", \"\", \"\", \"\", \"\", \"STONO2\", \"SCPARIS\", \"C\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOTONO2\", \"SOPP\", \"\", \"\", \"CA\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CASOTON\", \"SOTONOQ\", \"\", \"\", \"WC\", \"\"], \"xaxis\": \"x\", \"y\": [\"Braund, Mr. Owen Harris\", \"Allen, Mr. William Henry\", \"Moran, Mr. James\", \"McCarthy, Mr. Timothy J\", \"Palsson, Master. Gosta Leonard\", \"Saundercock, Mr. William Henry\", \"Andersson, Mr. Anders Johan\", \"Vestrom, Miss. Hulda Amanda Adolfina\", \"Rice, Master. Eugene\", \"Vander Planke, Mrs. Julius (Emelia Maria Vandemoortele)\", \"Fynney, Mr. Joseph J\", \"Palsson, Miss. Torborg Danira\", \"Emir, Mr. Farred Chehab\", \"Fortune, Mr. Charles Alexander\", \"Todoroff, Mr. Lalio\", \"Uruchurtu, Don. Manuel E\", \"Wheadon, Mr. Edward H\", \"Meyer, Mr. Edgar Joseph\", \"Holverson, Mr. Alexander Oskar\", \"Cann, Mr. Ernest Charles\", \"Vander Planke, Miss. Augusta Maria\", \"Ahlin, Mrs. Johan (Johanna Persdotter Larsson)\", \"Turpin, Mrs. William John Robert (Dorothy Ann Wonnacott)\", \"Kraeff, Mr. Theodor\", \"Rogers, Mr. William John\", \"Lennon, Mr. Denis\", \"Samaan, Mr. Youssef\", \"Arnold-Franchi, Mrs. Josef (Josefine Franchi)\", \"Panula, Master. Juha Niilo\", \"Nosworthy, Mr. Richard Cater\", \"Ostby, Mr. Engelhart Cornelius\", \"Novel, Mr. Mansouer\", \"Goodwin, Master. William Frederick\", \"Sirayanian, Mr. Orsen\", \"Harris, Mr. Henry Birkhardt\", \"Skoog, Master. Harald\", \"Stewart, Mr. Albert A\", \"Crease, Mr. Ernest James\", \"Kink, Mr. Vincenz\", \"Jenkin, Mr. Stephen Curnow\", \"Goodwin, Miss. Lillian Amy\", \"Hood, Mr. Ambrose Jr\", \"Chronopoulos, Mr. Apostolos\", \"Moen, Mr. Sigurd Hansen\", \"Staneff, Mr. Ivan\", \"Moutal, Mr. Rahamin Haim\", \"Waelens, Mr. Achille\", \"Carrau, Mr. Francisco M\", \"Ford, Mr. William Neal\", \"Slocovski, Mr. Selman Francis\", \"Celotti, Mr. Francesco\", \"Christmann, Mr. Emil\", \"Andreasson, Mr. Paul Edvin\", \"Chaffee, Mr. Herbert Fuller\", \"Dean, Mr. Bertram Frank\", \"Coxon, Mr. Daniel\", \"Shorney, Mr. Charles Joseph\", \"Goldschmidt, Mr. George B\", \"Kantor, Mr. Sinai\", \"Petranec, Miss. Matilda\", \"Petroff, Mr. Pastcho (\\\"Pentcho\\\")\", \"White, Mr. Richard Frasar\", \"Johansson, Mr. Gustaf Joel\", \"Gustafsson, Mr. Anders Vilhelm\", \"Mionoff, Mr. Stoytcho\", \"Rekic, Mr. Tido\", \"Porter, Mr. Walter Chamberlain\", \"Zabour, Miss. Hileni\", \"Barton, Mr. David John\", \"Jussila, Miss. Katriina\", \"Attalah, Miss. Malake\", \"Pekoniemi, Mr. Edvard\", \"Connors, Mr. Patrick\", \"Turpin, Mr. William John Robert\", \"Baxter, Mr. Quigg Edmond\", \"Andersson, Miss. Ellis Anna Maria\", \"Hickman, Mr. Stanley George\", \"Moore, Mr. Leonard Charles\", \"Nasser, Mr. Nicholas\", \"White, Mr. Percival Wayland\", \"McMahon, Mr. Martin\", \"Ekstrom, Mr. Johan\", \"Drazenoic, Mr. Jozef\", \"Coelho, Mr. Domingos Fernandeo\", \"Robins, Mrs. Alexander A (Grace Charity Laury)\", \"Sobey, Mr. Samuel James Hayden\", \"Richard, Mr. Emile\", \"Futrelle, Mr. Jacques Heath\", \"Osen, Mr. Olaf Elon\", \"Giglio, Mr. Victor\", \"Boulos, Mrs. Joseph (Sultana)\", \"Burke, Mr. Jeremiah\", \"Andrew, Mr. Edgardo Samuel\", \"Nicholls, Mr. Joseph Charles\", \"Ford, Miss. Robina Maggie \\\"Ruby\\\"\", \"Navratil, Mr. Michel (\\\"Louis M Hoffman\\\")\", \"Byles, Rev. Thomas Roussel Davids\", \"Bateman, Rev. Robert James\", \"Meo, Mr. Alfonzo\", \"van Billiard, Mr. Austin Blyler\", \"Olsen, Mr. Ole Martin\", \"Williams, Mr. Charles Duane\", \"Corn, Mr. Harry\", \"Smiljanic, Mr. Mile\", \"Sage, Master. Thomas Henry\", \"Cribb, Mr. John Hatfield\", \"Bengtsson, Mr. John Viktor\", \"Calic, Mr. Jovo\", \"Panula, Master. Eino Viljami\", \"Skoog, Mrs. William (Anna Bernhardina Karlsson)\", \"Baumann, Mr. John D\", \"Ling, Mr. Lee\", \"Van der hoef, Mr. Wyckoff\", \"Rice, Master. Arthur\", \"Sivola, Mr. Antti Wilhelm\", \"Smith, Mr. James Clinch\", \"Klasen, Mr. Klas Albin\", \"Lefebre, Master. Henry Forbes\", \"Isham, Miss. Ann Elizabeth\", \"Hale, Mr. Reginald\", \"Leonard, Mr. Lionel\", \"Sage, Miss. Constance Gladys\", \"Pernot, Mr. Rene\", \"Asplund, Master. Clarence Gustaf Hugo\", \"Rood, Mr. Hugh Roscoe\", \"Bourke, Mr. John\", \"Turcin, Mr. Stjepan\", \"Carbines, Mr. William\", \"Mernagh, Mr. Robert\", \"Olsen, Mr. Karl Siegwart Andreas\", \"Yrois, Miss. Henriette (\\\"Mrs Harbeck\\\")\", \"Vande Walle, Mr. Nestor Cyriel\", \"Sage, Mr. Frederick\", \"Johanson, Mr. Jakob Alfred\", \"Youseff, Mr. Gerious\", \"Strom, Miss. Telma Matilda\", \"Backstrom, Mr. Karl Alfred\", \"Ali, Mr. Ahmed\", \"Perkin, Mr. John Henry\", \"Givard, Mr. Hans Kristensen\", \"Kiernan, Mr. Philip\", \"Jacobsohn, Mr. Sidney Samuel\", \"Harris, Mr. Walter\", \"Bracken, Mr. James H\", \"Green, Mr. George Henry\", \"Nenkoff, Mr. Christo\", \"Berglund, Mr. Karl Ivar Sven\", \"Lovell, Mr. John Hall (\\\"Henry\\\")\", \"Fahlstrom, Mr. Arne Jonas\", \"Lefebre, Miss. Mathilde\", \"Larsson, Mr. Bengt Edvin\", \"Sjostedt, Mr. Ernst Adolf\", \"Leyson, Mr. Robert William Norman\", \"Harknett, Miss. Alice Phoebe\", \"Hold, Mr. Stephen\", \"Pengelly, Mr. Frederick William\", \"Hunt, Mr. George Henry\", \"Zabour, Miss. Thamine\", \"Coleridge, Mr. Reginald Charles\", \"Maenpaa, Mr. Matti Alexanteri\", \"Attalah, Mr. Sleiman\", \"Minahan, Dr. William Edward\", \"Lindahl, Miss. Agda Thorilda Viktoria\", \"Carter, Rev. Ernest Courtenay\", \"Reed, Mr. James George\", \"Strom, Mrs. Wilhelm (Elna Matilda Persson)\", \"Stead, Mr. William Thomas\", \"Lobb, Mr. William Arthur\", \"Rosblom, Mrs. Viktor (Helena Wilhelmina)\", \"Smith, Mr. Thomas\", \"Taussig, Mr. Emil\", \"Harrison, Mr. William\", \"Henry, Miss. Delia\", \"Reeves, Mr. David\", \"Panula, Mr. Ernesti Arvid\", \"Cairns, Mr. Alexander\", \"Natsch, Mr. Charles H\", \"Lindblom, Miss. Augusta Charlotta\", \"Parkes, Mr. Francis \\\"Frank\\\"\", \"Rice, Master. Eric\", \"Duane, Mr. Frank\", \"Olsson, Mr. Nils Johan Goransson\", \"de Pelsmaeker, Mr. Alfons\", \"Smith, Mr. Richard William\", \"Stankovic, Mr. Ivan\", \"Naidenoff, Mr. Penko\", \"Levy, Mr. Rene Jacques\", \"Haas, Miss. Aloisia\", \"Mineff, Mr. Ivan\", \"Lewy, Mr. Ervin G\", \"Hanna, Mr. Mansour\", \"Allison, Miss. Helen Loraine\", \"Johnson, Mr. William Cahoone Jr\", \"Williams, Mr. Howard Hugh \\\"Harry\\\"\", \"Abelson, Mr. Samuel\", \"Lahtinen, Mrs. William (Anna Sylfven)\", \"Hendekovic, Mr. Ignjac\", \"Hart, Mr. Benjamin\", \"Moraweck, Dr. Ernest\", \"Dennis, Mr. Samuel\", \"Danoff, Mr. Yoto\", \"Sage, Mr. George John Jr\", \"Nysveen, Mr. Johan Hansen\", \"Partner, Mr. Austen\", \"Graham, Mr. George Edward\", \"Vander Planke, Mr. Leo Edmondus\", \"Denkoff, Mr. Mitto\", \"Pears, Mr. Thomas Clinton\", \"Blackwell, Mr. Stephen Weart\", \"Collander, Mr. Erik Gustaf\", \"Sedgwick, Mr. Charles Frederick Waddington\", \"Fox, Mr. Stanley Hubert\", \"Dimic, Mr. Jovan\", \"Odahl, Mr. Nils Martin\", \"Williams-Lambert, Mr. Fletcher Fellows\", \"Elias, Mr. Tannous\", \"Arnold-Franchi, Mr. Josef\", \"Yousif, Mr. Wazli\", \"Vanden Steen, Mr. Leo Peter\", \"Funk, Miss. Annie Clemmer\", \"Skoog, Mr. Wilhelm\", \"del Carlo, Mr. Sebastiano\", \"Barbara, Mrs. (Catherine David)\", \"Asim, Mr. Adola\", \"O'Brien, Mr. Thomas\", \"Adahl, Mr. Mauritz Nils Martin\", \"Wiklund, Mr. Jakob Alfred\", \"Beavan, Mr. William Thomas\", \"Ringhini, Mr. Sante\", \"Palsson, Miss. Stina Viola\", \"Widener, Mr. Harry Elkins\", \"Betros, Mr. Tannous\", \"Gustafsson, Mr. Karl Gideon\", \"Tikkanen, Mr. Juho\", \"Plotcharsky, Mr. Vasil\", \"Davies, Mr. Charles Henry\", \"Goodwin, Master. Sidney Leonard\", \"Sadlier, Mr. Matthew\", \"Gustafsson, Mr. Johan Birger\", \"Johansson, Mr. Erik\", \"Olsson, Miss. Elina\", \"McKane, Mr. Peter David\", \"Pain, Dr. Alfred\", \"Adams, Mr. John\", \"Jussila, Miss. Mari Aina\", \"Hakkarainen, Mr. Pekka Pietari\", \"Oreskovic, Miss. Marija\", \"Gale, Mr. Shadrach\", \"Widegren, Mr. Carl/Charles Peter\", \"Birkeland, Mr. Hans Martin Monsen\", \"Lefebre, Miss. Ida\", \"Sdycoff, Mr. Todor\", \"Hart, Mr. Henry\", \"Cunningham, Mr. Alfred Fleming\", \"Meek, Mrs. Thomas (Annie Louise Rowley)\", \"Matthews, Mr. William John\", \"Van Impe, Miss. Catharina\", \"Gheorgheff, Mr. Stanio\", \"Charters, Mr. David\", \"Zimmerman, Mr. Leo\", \"Danbom, Mrs. Ernst Gilbert (Anna Sigrid Maria Brogren)\", \"Rosblom, Mr. Viktor Richard\", \"Wiseman, Mr. Phillippe\", \"Flynn, Mr. James\", \"Kallio, Mr. Nikolai Erland\", \"Silvey, Mr. William Baird\", \"Ford, Miss. Doolina Margaret \\\"Daisy\\\"\", \"Fortune, Mr. Mark\", \"Kvillner, Mr. Johan Henrik Johannesson\", \"Hampe, Mr. Leon\", \"Petterson, Mr. Johan Emil\", \"West, Mr. Edwy Arthur\", \"Hagland, Mr. Ingvald Olai Olsen\", \"Foreman, Mr. Benjamin Laventall\", \"Peduzzi, Mr. Joseph\", \"Millet, Mr. Francis Davis\", \"O'Connor, Mr. Maurice\", \"Morley, Mr. William\", \"Gee, Mr. Arthur H\", \"Milling, Mr. Jacob Christian\", \"Maisner, Mr. Simon\", \"Goncalves, Mr. Manuel Estanslas\", \"Campbell, Mr. William\", \"Smart, Mr. John Montgomery\", \"Scanlan, Mr. James\", \"Keefe, Mr. Arthur\", \"Cacic, Mr. Luka\", \"Strandberg, Miss. Ida Sofia\", \"Clifford, Mr. George Quincy\", \"Renouf, Mr. Peter Henry\", \"Braund, Mr. Lewis Richard\", \"Karlsson, Mr. Nils August\", \"Goodwin, Master. Harold Victor\", \"Frost, Mr. Anthony Wood \\\"Archie\\\"\", \"Rouse, Mr. Richard Henry\", \"Lefebre, Miss. Jeannie\", \"Kent, Mr. Edward Austin\", \"Somerton, Mr. Francis William\", \"Hagland, Mr. Konrad Mathias Reiersen\", \"Windelov, Mr. Einar\", \"Molson, Mr. Harry Markland\", \"Artagaveytia, Mr. Ramon\", \"Stanley, Mr. Edward Roland\", \"Yousseff, Mr. Gerious\", \"Shellard, Mr. Frederick William\", \"Allison, Mrs. Hudson J C (Bessie Waldo Daniels)\", \"Svensson, Mr. Olof\", \"Calic, Mr. Petar\", \"Canavan, Miss. Mary\", \"O'Sullivan, Miss. Bridget Mary\", \"Laitinen, Miss. Kristina Sofia\", \"Penasco y Castellana, Mr. Victor de Satode\", \"Olsen, Mr. Henry Margido\", \"Webber, Mr. James\", \"Coleff, Mr. Satio\", \"Walker, Mr. William Anderson\", \"Ryan, Mr. Patrick\", \"Pavlovic, Mr. Stefo\", \"Vovk, Mr. Janko\", \"Lahoud, Mr. Sarkis\", \"Kassem, Mr. Fared\", \"Farrell, Mr. James\", \"Farthing, Mr. John\", \"Salonen, Mr. Johan Werner\", \"Hocking, Mr. Richard George\", \"Toufik, Mr. Nakli\", \"Elias, Mr. Joseph Jr\", \"Cacic, Miss. Marija\", \"Butt, Major. Archibald Willingham\", \"Risien, Mr. Samuel Beard\", \"Andersson, Miss. Ingeborg Constanzia\", \"Andersson, Miss. Sigrid Elisabeth\", \"Douglas, Mr. Walter Donald\", \"Nicholson, Mr. Arthur Ernest\", \"Goldsmith, Mr. Frank John\", \"Sharp, Mr. Percival James R\", \"O'Brien, Mr. Timothy\", \"Wright, Mr. George\", \"Robbins, Mr. Victor\", \"Morrow, Mr. Thomas Rowan\", \"Sivic, Mr. Husein\", \"Norman, Mr. Robert Douglas\", \"Simmons, Mr. John\", \"Meanwell, Miss. (Marion Ogden)\", \"Davies, Mr. Alfred J\", \"Stoytcheff, Mr. Ilia\", \"Palsson, Mrs. Nils (Alma Cornelia Berglund)\", \"Doharr, Mr. Tannous\", \"Rush, Mr. Alfred George John\", \"Patchett, Mr. George\", \"Caram, Mrs. Joseph (Maria Elias)\", \"Downton, Mr. William James\", \"Ross, Mr. John Hugo\", \"Paulner, Mr. Uscher\", \"Jarvis, Mr. John Denzil\", \"Gilinski, Mr. Eliezer\", \"Murdlin, Mr. Joseph\", \"Rintamaki, Mr. Matti\", \"Elsbury, Mr. William James\", \"Bourke, Miss. Mary\", \"Chapman, Mr. John Henry\", \"Van Impe, Mr. Jean Baptiste\", \"Johnson, Mr. Alfred\", \"Boulos, Mr. Hanna\", \"Slabenoff, Mr. Petco\", \"Harrington, Mr. Charles H\", \"Torber, Mr. Ernst William\", \"Lindell, Mr. Edvard Bengtsson\", \"Karaic, Mr. Milan\", \"Andersson, Mrs. Anders Johan (Alfrida Konstantia Brogren)\", \"Jardin, Mr. Jose Neto\", \"Horgan, Mr. John\", \"Brocklebank, Mr. William Alfred\", \"Danbom, Mr. Ernst Gilbert\", \"Lobb, Mrs. William Arthur (Cordelia K Stanlick)\", \"Gavey, Mr. Lawrence\", \"Yasbeck, Mr. Antoni\", \"Hansen, Mr. Henry Damsgaard\", \"Bowen, Mr. David John \\\"Dai\\\"\", \"Sutton, Mr. Frederick\", \"Kirkland, Rev. Charles Leonard\", \"Bostandyeff, Mr. Guentcho\", \"O'Connell, Mr. Patrick D\", \"Lundahl, Mr. Johan Svensson\", \"Parr, Mr. William Henry Marsh\", \"Skoog, Miss. Mabel\", \"Leinonen, Mr. Antti Gustaf\", \"Collyer, Mr. Harvey\", \"Panula, Mrs. Juha (Maria Emilia Ojala)\", \"Thorneycroft, Mr. Percival\", \"Jensen, Mr. Hans Peder\", \"Skoog, Miss. Margit Elizabeth\", \"Cor, Mr. Liudevit\", \"Willey, Mr. Edward\", \"Mitkoff, Mr. Mito\", \"Kalvik, Mr. Johannes Halvorsen\", \"Hegarty, Miss. Hanora \\\"Nora\\\"\", \"Hickman, Mr. Leonard Mark\", \"Radeff, Mr. Alexander\", \"Bourke, Mrs. John (Catherine)\", \"Eitemiller, Mr. George Floyd\", \"Newell, Mr. Arthur Webster\", \"Badt, Mr. Mohamed\", \"Colley, Mr. Edward Pomeroy\", \"Coleff, Mr. Peju\", \"Hickman, Mr. Lewis\", \"Butler, Mr. Reginald Fenton\", \"Rommetvedt, Mr. Knud Paust\", \"Cook, Mr. Jacob\", \"Davidson, Mr. Thornton\", \"Mitchell, Mr. Henry Michael\", \"Watson, Mr. Ennis Hastings\", \"Edvardsson, Mr. Gustaf Hjalmar\", \"Sawyer, Mr. Frederick Charles\", \"Goodwin, Mrs. Frederick (Augusta Tyler)\", \"Peters, Miss. Katie\", \"Olsvigen, Mr. Thor Anderson\", \"Goodwin, Mr. Charles Edward\", \"Brown, Mr. Thomas William Solomon\", \"Laroche, Mr. Joseph Philippe Lemercier\", \"Panula, Mr. Jaako Arnold\", \"Dakic, Mr. Branko\", \"Fischer, Mr. Eberhard Thelander\", \"Saad, Mr. Khalil\", \"Weir, Col. John\", \"Chapman, Mr. Charles Henry\", \"Kelly, Mr. James\", \"Thayer, Mr. John Borland\", \"Humblen, Mr. Adolf Mathias Nicolai Olsen\", \"Barbara, Miss. Saiide\", \"Gallagher, Mr. Martin\", \"Hansen, Mr. Henrik Juul\", \"Morley, Mr. Henry Samuel (\\\"Mr Henry Marshall\\\")\", \"Klaber, Mr. Herman\", \"Larsson, Mr. August Viktor\", \"Greenberg, Mr. Samuel\", \"Soholt, Mr. Peter Andreas Lauritz Andersen\", \"McEvoy, Mr. Michael\", \"Johnson, Mr. Malkolm Joackim\", \"Jensen, Mr. Svend Lauritz\", \"Gillespie, Mr. William Henry\", \"Hodges, Mr. Henry Price\", \"Oreskovic, Mr. Luka\", \"Bryhl, Mr. Kurt Arnold Gottfrid\", \"Ilmakangas, Miss. Pieta Sofia\", \"Hassan, Mr. Houssein G N\", \"Knight, Mr. Robert J\", \"Berriman, Mr. William John\", \"Troupiansky, Mr. Moses Aaron\", \"Williams, Mr. Leslie\", \"Ford, Mrs. Edward (Margaret Ann Watson)\", \"Ivanoff, Mr. Kanio\", \"Nankoff, Mr. Minko\", \"Cavendish, Mr. Tyrell William\", \"McNamee, Mr. Neal\", \"Crosby, Capt. Edward Gifford\", \"Abbott, Mr. Rossmore Edward\", \"Marvin, Mr. Daniel Warner\", \"Connaghton, Mr. Michael\", \"Vande Velde, Mr. Johannes Joseph\", \"Jonkoff, Mr. Lalio\", \"Carlsson, Mr. August Sigfrid\", \"Bailey, Mr. Percy Andrew\", \"Theobald, Mr. Thomas Leonard\", \"Garfirth, Mr. John\", \"Nirva, Mr. Iisakki Antino Aijo\", \"Eklund, Mr. Hans Linus\", \"Brewe, Dr. Arthur Jackson\", \"Mangan, Miss. Mary\", \"Moran, Mr. Daniel J\", \"Gronnestad, Mr. Daniel Danielsen\", \"Lievens, Mr. Rene Aime\", \"Jensen, Mr. Niels Peder\", \"Mack, Mrs. (Mary)\", \"Elias, Mr. Dibo\", \"Myhrman, Mr. Pehr Fabian Oliver Malkolm\", \"Tobin, Mr. Roger\", \"Kilgannon, Mr. Thomas J\", \"Long, Mr. Milton Clyde\", \"Johnston, Mr. Andrew G\", \"Ali, Mr. William\", \"Harmer, Mr. Abraham (David Lishin)\", \"Rice, Master. George Hugh\", \"Guggenheim, Mr. Benjamin\", \"Keane, Mr. Andrew \\\"Andy\\\"\", \"Gaskell, Mr. Alfred\", \"Sage, Miss. Stella Anna\", \"Hoyt, Mr. William Fisher\", \"Dantcheff, Mr. Ristiu\", \"Otter, Mr. Richard\", \"Ibrahim Shawah, Mr. Yousseff\", \"Van Impe, Mrs. Jean Baptiste (Rosalie Paula Govaert)\", \"Ponesell, Mr. Martin\", \"Johansson, Mr. Karl Johan\", \"Andrews, Mr. Thomas Jr\", \"Pettersson, Miss. Ellen Natalia\", \"Meyer, Mr. August\", \"Alexander, Mr. William\", \"Lester, Mr. James\", \"Slemen, Mr. Richard James\", \"Andersson, Miss. Ebba Iris Alfrida\", \"Tomlin, Mr. Ernest Portage\", \"Fry, Mr. Richard\", \"Heininen, Miss. Wendla Maria\", \"Mallet, Mr. Albert\", \"Holm, Mr. John Fredrik Alexander\", \"Skoog, Master. Karl Thorsten\", \"Reuchlin, Jonkheer. John George\", \"Panula, Master. Urho Abraham\", \"Flynn, Mr. John\", \"Lam, Mr. Len\", \"Saad, Mr. Amin\", \"Augustsson, Mr. Albert\", \"Allum, Mr. Owen George\", \"Pasic, Mr. Jakob\", \"Sirota, Mr. Maurice\", \"Alhomaki, Mr. Ilmari Rudolf\", \"Mudd, Mr. Thomas Charles\", \"Lemberopolous, Mr. Peter L\", \"Culumovic, Mr. Jeso\", \"Abbing, Mr. Anthony\", \"Sage, Mr. Douglas Bullen\", \"Markoff, Mr. Marin\", \"Harper, Rev. John\", \"Andersson, Master. Sigvard Harald Elias\", \"Svensson, Mr. Johan\", \"Boulos, Miss. Nourelain\", \"Carter, Mrs. Ernest Courtenay (Lilian Hughes)\", \"Razi, Mr. Raihed\", \"Hansen, Mr. Claus Peter\", \"Giles, Mr. Frederick Edward\", \"Sage, Miss. Dorothy Edith \\\"Dolly\\\"\", \"Gill, Mr. John William\", \"Roebling, Mr. Washington Augustus II\", \"van Melkebeke, Mr. Philemon\", \"Balkic, Mr. Cerin\", \"Carlsson, Mr. Frans Olof\", \"Vander Cruyssen, Mr. Victor\", \"Gustafsson, Mr. Alfred Ossian\", \"Petroff, Mr. Nedelio\", \"Laleff, Mr. Kristo\", \"Markun, Mr. Johann\", \"Dahlberg, Miss. Gerda Ulrika\", \"Banfield, Mr. Frederick James\", \"Sutehall, Mr. Henry Jr\", \"Rice, Mrs. William (Margaret Norton)\", \"Montvila, Rev. Juozas\", \"Johnston, Miss. Catherine Helen \\\"Carrie\\\"\", \"Dooley, Mr. Patrick\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [\"PC\", \"STONO2\", \"\", \"\", \"\", \"PP\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"SCParis\", \"\", \"\", \"PC\", \"\", \"\", \"CA\", \"CA\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"SOC\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"C\", \"\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"A5\", \"\", \"\", \"\", \"FCC\", \"\", \"STONO2\", \"\", \"SOTONOQ\", \"\", \"SWPP\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"PC\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"\", \"\", \"\", \"CA\", \"A5\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"PC\", \"C\", \"PC\", \"\", \"\", \"\", \"SC\", \"\", \"\", \"\", \"PP\", \"\", \"STONO2\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"\", \"SOTONOQ\", \"\", \"\", \"SCAH\", \"\", \"\", \"FCC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"FCC\", \"\", \"\", \"CA\", \"SCAHBasle\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"CA\", \"\", \"\", \"\", \"WC\", \"\", \"\", \"FCC\", \"PC\", \"\", \"WEP\", \"\", \"\", \"SCPARIS\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SWPP\", \"\", \"PC\", \"\", \"\", \"\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"SCParis\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"PC\", \"\", \"CA\", \"\", \"\", \"PC\", \"STONO2\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"PC\", \"\", \"PC\", \"\", \"\", \"PC\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"PC\", \"STONO2\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"PPP\", \"\", \"\", \"\", \"\", \"\"], \"xaxis\": \"x\", \"y\": [\"Cumings, Mrs. John Bradley (Florence Briggs Thayer)\", \"Heikkinen, Miss. Laina\", \"Futrelle, Mrs. Jacques Heath (Lily May Peel)\", \"Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)\", \"Nasser, Mrs. Nicholas (Adele Achem)\", \"Sandstrom, Miss. Marguerite Rut\", \"Bonnell, Miss. Elizabeth\", \"Hewlett, Mrs. (Mary D Kingcome) \", \"Williams, Mr. Charles Eugene\", \"Masselmani, Mrs. Fatima\", \"Beesley, Mr. Lawrence\", \"McGowan, Miss. Anna \\\"Annie\\\"\", \"Sloper, Mr. William Thompson\", \"Asplund, Mrs. Carl Oscar (Selma Augusta Emilia Johansson)\", \"O'Dwyer, Miss. Ellen \\\"Nellie\\\"\", \"Spencer, Mrs. William Augustus (Marie Eugenie)\", \"Glynn, Miss. Mary Agatha\", \"Mamee, Mr. Hanna\", \"Nicola-Yarred, Miss. Jamila\", \"Laroche, Miss. Simonne Marie Anne Andree\", \"Devaney, Miss. Margaret Delia\", \"O'Driscoll, Miss. Bridget\", \"Harper, Mrs. Henry Sleeper (Myna Haxtun)\", \"Faunthorpe, Mrs. Lizzie (Elizabeth Anne Wilkinson)\", \"Woolner, Mr. Hugh\", \"Rugg, Miss. Emily\", \"West, Miss. Constance Mirium\", \"Icard, Miss. Amelie\", \"Moubarek, Master. Gerios\", \"Nye, Mrs. (Elizabeth Ramell)\", \"Andersson, Miss. Erna Alexandra\", \"Bing, Mr. Lee\", \"Caldwell, Master. Alden Gates\", \"Dowdell, Miss. Elizabeth\", \"Sheerlinck, Mr. Jan Baptist\", \"McDermott, Miss. Brigdet Delia\", \"Ilett, Miss. Bertha\", \"Backstrom, Mrs. Karl Alfred (Maria Mathilda Gustafsson)\", \"Fortune, Miss. Mabel Helen\", \"Greenfield, Mr. William Bertram\", \"Doling, Mrs. John T (Ada Julia Bone)\", \"Salkjelsvik, Miss. Anna Kristine\", \"Moss, Mr. Albert Johan\", \"Moran, Miss. Bertha\", \"Webber, Miss. Susan\", \"Nicola-Yarred, Master. Elias\", \"Madsen, Mr. Fridtjof Arne\", \"Peter, Miss. Anna\", \"Weisz, Mrs. Leopold (Mathilde Francoise Pede)\", \"Newsom, Miss. Helen Monypeny\", \"Nysten, Miss. Anna Sofia\", \"Hakkarainen, Mrs. Pekka Pietari (Elin Matilda Dolck)\", \"Andersson, Mr. August Edvard (\\\"Wennerstrom\\\")\", \"Pears, Mrs. Thomas (Edith Wearne)\", \"Gilnagh, Miss. Katherine \\\"Katie\\\"\", \"Watt, Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \"Goldsmith, Master. Frank John William \\\"Frankie\\\"\", \"Chibnall, Mrs. (Edith Martha Bowerman)\", \"Johnson, Miss. Eleanor Ileen\", \"Becker, Master. Richard F\", \"Kink-Heilmann, Miss. Luise Gretchen\", \"O'Brien, Mrs. Thomas (Johanna \\\"Hannah\\\" Godfrey)\", \"Romaine, Mr. Charles Hallace (\\\"Mr C Rolmane\\\")\", \"Pinsky, Mrs. (Rosa)\", \"Andersen-Jensen, Miss. Carla Christine Nielsine\", \"Navratil, Master. Michel M\", \"Brown, Mrs. James Joseph (Margaret Tobin)\", \"Lurette, Miss. Elise\", \"Madigan, Miss. Margaret \\\"Maggie\\\"\", \"Cohen, Mr. Gurshon \\\"Gus\\\"\", \"Albimona, Mr. Nassef Cassem\", \"Carr, Miss. Helen \\\"Ellen\\\"\", \"Blank, Mr. Henry\", \"Cameron, Miss. Clear Annie\", \"Newell, Miss. Madeleine\", \"Honkanen, Miss. Eliina\", \"Bazzani, Miss. Albina\", \"Sunderland, Mr. Victor Francis\", \"Hoyt, Mr. Frederick Maxfield\", \"Mellors, Mr. William John\", \"Harris, Mrs. Henry Birkhardt (Irene Wallach)\", \"Asplund, Miss. Lillian Gertrud\", \"Collyer, Miss. Marjorie \\\"Lottie\\\"\", \"Murphy, Miss. Katherine \\\"Kate\\\"\", \"Hamalainen, Mrs. William (Anna)\", \"Beckwith, Mr. Richard Leonard\", \"Touma, Mrs. Darwis (Hanne Youssef Razi)\", \"Thorne, Mrs. Gertrude Maybelle\", \"Cherry, Miss. Gladys\", \"Ward, Miss. Anna\", \"Parrish, Mrs. (Lutie Davis)\", \"Asplund, Master. Edvin Rojj Felix\", \"Persson, Mr. Ernst Ulrik\", \"Graham, Mrs. William Thompson (Edith Junkins)\", \"Bissette, Miss. Amelia\", \"Tornquist, Mr. William Henry\", \"Mellinger, Mrs. (Elizabeth Anne Maidment)\", \"Healy, Miss. Hanora \\\"Nora\\\"\", \"Andrews, Miss. Kornelia Theodosia\", \"Abbott, Mrs. Stanton (Rosa Hunt)\", \"Dorking, Mr. Edward Arthur\", \"de Mulder, Mr. Theodore\", \"Hosono, Mr. Masabumi\", \"Connolly, Miss. Kate\", \"Barber, Miss. Ellen \\\"Nellie\\\"\", \"Bishop, Mrs. Dickinson H (Helen Walton)\", \"Saalfeld, Mr. Adolphe\", \"Baxter, Mrs. James (Helene DeLaudeniere Chaput)\", \"Kelly, Miss. Anna Katherine \\\"Annie Kate\\\"\", \"McCoy, Mr. Bernard\", \"Keane, Miss. Nora A\", \"Allison, Master. Hudson Trevor\", \"Fleming, Miss. Margaret\", \"Penasco y Castellana, Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \"Francatelli, Miss. Laura Mabel\", \"Hays, Miss. Margaret Bechstein\", \"Ryerson, Miss. Emily Borie\", \"Nilsson, Miss. Helmina Josefina\", \"Kantor, Mrs. Sinai (Miriam Sternin)\", \"Wick, Miss. Mary Natalie\", \"Spedden, Mrs. Frederic Oakley (Margaretta Corning Stone)\", \"Slayter, Miss. Hilda Mary\", \"Caldwell, Mrs. Albert Francis (Sylvia Mae Harbaugh)\", \"Young, Miss. Marie Grice\", \"Ball, Mrs. (Ada E Hall)\", \"Goldsmith, Mrs. Frank John (Emily Alice Brown)\", \"Hippach, Miss. Jean Gertrude\", \"McCoy, Miss. Agnes\", \"Frauenthal, Mrs. Henry William (Clara Heinsheimer)\", \"Burns, Miss. Elizabeth Margaret\", \"Dahl, Mr. Karl Edwart\", \"Navratil, Master. Edmond Roger\", \"Fortune, Miss. Alice Elizabeth\", \"Brown, Miss. Amelia \\\"Mildred\\\"\", \"Smith, Miss. Marion Elsie\", \"Davison, Mrs. Thomas Henry (Mary E Finck)\", \"Coutts, Master. William Loch \\\"William\\\"\", \"Bowerman, Miss. Elsie Edith\", \"McGovern, Miss. Mary\", \"Mockler, Miss. Helen Mary \\\"Ellie\\\"\", \"Warren, Mrs. Frank Manley (Anna Sophia Atkinson)\", \"Moussa, Mrs. (Mantoura Boulos)\", \"Jermyn, Miss. Annie\", \"Aubart, Mme. Leontine Pauline\", \"Harder, Mr. George Achilles\", \"Meyer, Mrs. Edgar Joseph (Leila Saks)\", \"Landergren, Miss. Aurora Adelia\", \"Bidois, Miss. Rosalie\", \"Nakid, Miss. Maria (\\\"Mary\\\")\", \"Holverson, Mrs. Alexander Oskar (Mary Aline Towner)\", \"Buss, Miss. Kate\", \"Lehmann, Miss. Bertha\", \"Carter, Mr. William Ernest\", \"Jansson, Mr. Carl Olof\", \"Newell, Miss. Marjorie\", \"Sandstrom, Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \"Trout, Mrs. William H (Jessie L)\", \"Niskanen, Mr. Juha\", \"Richards, Master. William Rowe\", \"Minahan, Miss. Daisy E\", \"Sundman, Mr. Johan Julian\", \"Drew, Mrs. James Vivian (Lulu Thorne Christian)\", \"Silven, Miss. Lyyli Karoliina\", \"Clarke, Mrs. Charles V (Ada Maria Winfield)\", \"Phillips, Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\", \"Pickard, Mr. Berk (Berk Trembisky)\", \"Bjornstrom-Steffansson, Mr. Mauritz Hakan\", \"Thorneycroft, Mrs. Percival (Florence Kate White)\", \"Louch, Mrs. Charles Alexander (Alice Adelaide Slow)\", \"Carter, Miss. Lucile Polk\", \"Richards, Mrs. Sidney (Emily Hocking)\", \"Hart, Mrs. Benjamin (Esther Ada Bloomfield)\", \"Reynaldo, Ms. Encarnacion\", \"Johannesen-Bratthammer, Mr. Bernt\", \"Dodge, Master. Washington\", \"Mellinger, Miss. Madeleine Violet\", \"Seward, Mr. Frederic Kimber\", \"Baclini, Miss. Marie Catherine\", \"Peuchen, Major. Arthur Godfrey\", \"Goldenberg, Mr. Samuel L\", \"Jalsevac, Mr. Ivan\", \"Kenyon, Mrs. Frederick R (Marion)\", \"Toomey, Miss. Ellen\", \"Anderson, Mr. Harry\", \"Baclini, Miss. Helene Barbara\", \"West, Mrs. Edwy Arthur (Ada Mary Worth)\", \"Jerwan, Mrs. Amin S (Marie Marthe Thuillard)\", \"Hirvonen, Miss. Hildur E\", \"Turkula, Mrs. (Hedwig)\", \"Bishop, Mr. Dickinson H\", \"Hoyt, Mrs. Frederick Maxfield (Jane Anne Forby)\", \"Coutts, Master. Eden Leslie \\\"Neville\\\"\", \"Eustis, Miss. Elizabeth Mussey\", \"Maioni, Miss. Roberta\", \"Quick, Mrs. Frederick Charles (Jane Richards)\", \"Bradley, Mr. George (\\\"George Arthur Brayton\\\")\", \"Lang, Mr. Fang\", \"Daly, Mr. Eugene Patrick\", \"McGough, Mr. James Robert\", \"Rothschild, Mrs. Martin (Elizabeth L. Barrett)\", \"Lemore, Mrs. (Amelia Milley)\", \"Angle, Mrs. William A (Florence \\\"Mary\\\" Agnes Hughes)\", \"Perreault, Miss. Anne\", \"Hippach, Mrs. Louis Albert (Ida Sophia Fischer)\", \"Ridsdale, Miss. Lucy\", \"Quick, Miss. Phyllis May\", \"Peter, Mrs. Catherine (Catherine Rizk)\", \"Hart, Miss. Eva Miriam\", \"LeRoy, Miss. Bertha\", \"Frolicher, Miss. Hedwig Margaritha\", \"Crosby, Miss. Harriet R\", \"Beane, Mr. Edward\", \"Beane, Mrs. Edward (Ethel Clarke)\", \"Padro y Manent, Mr. Julian\", \"Davies, Master. John Morgan Jr\", \"Thayer, Mr. John Borland Jr\", \"Leeni, Mr. Fahim (\\\"Philip Zenni\\\")\", \"Ohman, Miss. Velin\", \"Duff Gordon, Lady. (Lucille Christiana Sutherland) (\\\"Mrs Morgan\\\")\", \"Taussig, Mrs. Emil (Tillie Mandelbaum)\", \"de Messemaeker, Mrs. Guillaume Joseph (Emma)\", \"Jonsson, Mr. Carl\", \"Harris, Mr. George\", \"Appleton, Mrs. Edward Dale (Charlotte Lamson)\", \"Flynn, Mr. John Irwin (\\\"Irving\\\")\", \"Kelly, Miss. Mary\", \"Garside, Miss. Ethel\", \"Silvey, Mrs. William Baird (Alice Munger)\", \"Jussila, Mr. Eiriik\", \"Christy, Miss. Julie Rachel\", \"Thayer, Mrs. John Borland (Marian Longstreth Morris)\", \"Taussig, Miss. Ruth\", \"Frolicher-Stehli, Mr. Maxmillian\", \"Stephenson, Mrs. Walter Bertram (Martha Eustis)\", \"Leitch, Miss. Jessie Wills\", \"Duff Gordon, Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \"Jacobsohn, Mrs. Sidney Samuel (Amy Frances Christy)\", \"Homer, Mr. Harry (\\\"Mr E Haven\\\")\", \"Daniel, Mr. Robert Williams\", \"Laroche, Mrs. Joseph (Juliette Marie Louise Lafargue)\", \"Shutes, Miss. Elizabeth W\", \"Murphy, Miss. Margaret Jane\", \"Herman, Miss. Alice\", \"Becker, Miss. Marion Louise\", \"Kimball, Mr. Edwin Nelson Jr\", \"Nakid, Mr. Sahid\", \"Longley, Miss. Gretchen Fiske\", \"Barkworth, Mr. Algernon Henry Wilson\", \"Stahelin-Maeglin, Dr. Max\", \"Davis, Miss. Mary\", \"Sagesser, Mlle. Emma\", \"Foo, Mr. Choong\", \"Baclini, Miss. Eugenie\", \"Harper, Mr. Henry Sleeper\", \"Simonius-Blumer, Col. Oberst Alfons\", \"Stanley, Miss. Amy Zillah Elsie\", \"Doling, Miss. Elsie\", \"O'Leary, Miss. Hanora \\\"Norah\\\"\", \"Frauenthal, Dr. Henry William\", \"Lindqvist, Mr. Eino William\", \"Taylor, Mrs. Elmer Zebley (Juliet Cummins Wright)\", \"Brown, Mrs. Thomas William Solomon (Elizabeth Catherine Ford)\", \"Wilhelms, Mr. Charles\", \"Turja, Miss. Anna Sofia\", \"Cardeza, Mr. Thomas Drake Martinez\", \"Hassab, Mr. Hammad\", \"Madill, Miss. Georgette Alexandra\", \"Dick, Mr. Albert Adrian\", \"Karun, Miss. Manca\", \"Lam, Mr. Ali\", \"Mullens, Miss. Katherine \\\"Katie\\\"\", \"Astor, Mrs. John Jacob (Madeleine Talmadge Force)\", \"Silverthorne, Mr. Spencer Victor\", \"Kelly, Mrs. Florence \\\"Fannie\\\"\", \"Calderhead, Mr. Edward Pennington\", \"Cleaver, Miss. Alice\", \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\", \"Mayne, Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \"Taylor, Mr. Elmer Zebley\", \"Endres, Miss. Caroline Louise\", \"Troutt, Miss. Edwina Celia \\\"Winnie\\\"\", \"Harper, Miss. Annie Jessie \\\"Nina\\\"\", \"Chambers, Mr. Norman Campbell\", \"Renouf, Mrs. Peter Henry (Lillian Jefferys)\", \"Mannion, Miss. Margareth\", \"Allen, Miss. Elisabeth Walton\", \"Lesurer, Mr. Gustave J\", \"Hawksford, Mr. Walter James\", \"Ryerson, Miss. Susan Parker \\\"Suzette\\\"\", \"Stranden, Mr. Juho\", \"Sinkkonen, Miss. Anna\", \"Wells, Miss. Joan\", \"Moor, Master. Meier\", \"Herman, Mrs. Samuel (Jane Laver)\", \"Hamalainen, Master. Viljo\", \"Rothes, the Countess. of (Lucy Noel Martha Dyer-Edwards)\", \"Barah, Mr. Hanna Assi\", \"Carter, Mrs. William Ernest (Lucile Polk)\", \"Hogeboom, Mrs. John C (Anna Andrews)\", \"Hocking, Mrs. Elizabeth (Eliza Needs)\", \"Emanuel, Miss. Virginia Ethel\", \"Robert, Mrs. Edward Scott (Elisabeth Walton McMillan)\", \"Ayoub, Miss. Banoura\", \"Dick, Mrs. Albert Adrian (Vera Gillespie)\", \"Sjoblom, Miss. Anna Sofia\", \"Dean, Master. Bertram Vere\", \"Leader, Dr. Alice (Farnham)\", \"Osman, Mrs. Mara\", \"Collyer, Mrs. Harvey (Charlotte Annie Tate)\", \"Carter, Master. William Thornton II\", \"Thomas, Master. Assad Alexander\", \"Hedman, Mr. Oskar Arvid\", \"Chambers, Mrs. Norman Campbell (Bertha Griggs)\", \"Hays, Mrs. Charles Melville (Clara Jennings Gregg)\", \"Lulic, Mr. Nikola\", \"Moor, Mrs. (Beila)\", \"Mallet, Master. Andre\", \"McCormack, Mr. Thomas Joseph\", \"Stone, Mrs. George Nelson (Martha Evelyn)\", \"Yasbeck, Mrs. Antoni (Selini Alexander)\", \"Richards, Master. George Sibley\", \"Compton, Miss. Sara Rebecca\", \"Chip, Mr. Chang\", \"Marechal, Mr. Pierre\", \"Serepeca, Miss. Augusta\", \"Goldenberg, Mrs. Samuel L (Edwiga Grabowska)\", \"Lines, Miss. Mary Conover\", \"Aks, Mrs. Sam (Leah Rosen)\", \"Wick, Mrs. George Dennick (Mary Hitchcock)\", \"Daly, Mr. Peter Denis \", \"Baclini, Mrs. Solomon (Latifa Qurban)\", \"Swift, Mrs. Frederick Joel (Margaret Welles Barron)\", \"Bystrom, Mrs. (Karolina)\", \"Duran y More, Miss. Asuncion\", \"Johnson, Master. Harold Theodor\", \"Beckwith, Mrs. Richard Leonard (Sallie Monypeny)\", \"Abelson, Mrs. Samuel (Hannah Wizosky)\", \"Najib, Miss. Adele Kiamie \\\"Jane\\\"\", \"Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)\", \"Shelley, Mrs. William (Imanita Parrish Hall)\", \"Graham, Miss. Margaret Edith\", \"Behr, Mr. Karl Howell\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"showlegend\": true, \"type\": \"scattergl\", \"xaris\", \"\", \"\", \"\", \"\", \"\", \"SOPP\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"LP\", \"\", \"PC\", \"AQ3\", \"PC\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"SOTONOQ\", \"\", \"PC\", \"\", \"\", \"CA\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"\", \"CA\", \"\", \"CA\", \"PC\", \"A5\", \"\", \"\", \"\", \"\", \"FCC\", \"PC\", \"FCC\", \"SOC\", \"\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"CA\", \"SCPARIS\", \"CA\", \"\", \"\", \"CA\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"\", \"\", \"\", \"PC\", \"CA\", \"CA\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"SCPARIS\", \"\", \"\", \"\", \"SOTONOQ\", \"\", \"\", \"\", \"A5\", \"PC\", \"SOTONOQ\", \"\", \"\"], \"xaxis\": \"x\", \"y\": [\"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"Myles, Mr. Thomas Francis\", \"Wirz, Mr. Albert\", \"Hirvonen, Mrs. Alexander (Helga E Lindqvist)\", \"Svensson, Mr. Johan Cervin\", \"Connolly, Miss. Kate\", \"Caldwell, Mr. Albert Francis\", \"Abrahim, Mrs. Joseph (Sophie Halaut Easu)\", \"Davies, Mr. John Samuel\", \"Ilieff, Mr. Ylio\", \"Jones, Mr. Charles Cresson\", \"Snyder, Mrs. John Pillsbury (Nelle Stevenson)\", \"Howard, Mr. Benjamin\", \"Chaffee, Mrs. Herbert Fuller (Carrie Constance Toogood)\", \"del Carlo, Mrs. Sebastiano (Argenia Genovesi)\", \"Keane, Mr. Daniel\", \"Assaf, Mr. Gerios\", \"Ilmakangas, Miss. Ida Livija\", \"Assaf Khalil, Mrs. Mariana (Miriam\\\")\\\"\", \"Rothschild, Mr. Martin\", \"Olsen, Master. Artur Karl\", \"Flegenheim, Mrs. Alfred (Antoinette)\", \"Williams, Mr. Richard Norris II\", \"Ryerson, Mrs. Arthur Larned (Emily Maria Borie)\", \"Robins, Mr. Alexander A\", \"Ostby, Miss. Helene Ragnhild\", \"Daher, Mr. Shedid\", \"Brady, Mr. John Bertram\", \"Samaan, Mr. Elias\", \"Louch, Mr. Charles Alexander\", \"Jefferys, Mr. Clifford Thomas\", \"Dean, Mrs. Bertram (Eva Georgetta Light)\", \"Johnston, Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \"Mock, Mr. Philipp Edmund\", \"Katavelas, Mr. Vassilios (Catavelas Vassilios\\\")\\\"\", \"Roth, Miss. Sarah A\", \"Cacic, Miss. Manda\", \"Sap, Mr. Julius\", \"Hee, Mr. Ling\", \"Karun, Mr. Franz\", \"Franklin, Mr. Thomas Parham\", \"Goldsmith, Mr. Nathan\", \"Corbett, Mrs. Walter H (Irene Colvin)\", \"Kimball, Mrs. Edwin Nelson Jr (Gertrude Parsons)\", \"Peltomaki, Mr. Nikolai Johannes\", \"Chevre, Mr. Paul Romaine\", \"Shaughnessy, Mr. Patrick\", \"Bucknell, Mrs. William Robert (Emma Eliza Ward)\", \"Coutts, Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \"Smith, Mr. Lucien Philip\", \"Pulbaum, Mr. Franz\", \"Hocking, Miss. Ellen Nellie\\\"\\\"\", \"Fortune, Miss. Ethel Flora\", \"Mangiavacchi, Mr. Serafino Emilio\", \"Rice, Master. Albert\", \"Cor, Mr. Bartol\", \"Abelseth, Mr. Olaus Jorgensen\", \"Davison, Mr. Thomas Henry\", \"Chaudanson, Miss. Victorine\", \"Dika, Mr. Mirko\", \"McCrae, Mr. Arthur Gordon\", \"Bjorklund, Mr. Ernst Herbert\", \"Bradley, Miss. Bridget Delia\", \"Ryerson, Master. John Borie\", \"Corey, Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \"Burns, Miss. Mary Delia\", \"Moore, Mr. Clarence Bloomfield\", \"Tucker, Mr. Gilbert Milligan Jr\", \"Fortune, Mrs. Mark (Mary McDougald)\", \"Mulvihill, Miss. Bertha E\", \"Minkoff, Mr. Lazar\", \"Nieminen, Miss. Manta Josefina\", \"Ovies y Rodriguez, Mr. Servando\", \"Geiger, Miss. Amalie\", \"Keeping, Mr. Edwin\", \"Miles, Mr. Frank\", \"Cornell, Mrs. Robert Clifford (Malvina Helen Lamson)\", \"Aldworth, Mr. Charles Augustus\", \"Doyle, Miss. Elizabeth\", \"Boulos, Master. Akar\", \"Straus, Mr. Isidor\", \"Case, Mr. Howard Brown\", \"Demetri, Mr. Marinko\", \"Lamb, Mr. John Joseph\", \"Khalil, Mr. Betros\", \"Barry, Miss. Julia\", \"Badman, Miss. Emily Louisa\", \"O'Donoghue, Ms. Bridget\", \"Wells, Master. Ralph Lester\", \"Dyker, Mrs. Adolf Fredrik (Anna Elisabeth Judith Andersson)\", \"Pedersen, Mr. Olaf\", \"Davidson, Mrs. Thornton (Orian Hays)\", \"Guest, Mr. Robert\", \"Birnbaum, Mr. Jakob\", \"Tenglin, Mr. Gunnar Isidor\", \"Cavendish, Mrs. Tyrell William (Julia Florence Siegel)\", \"Makinen, Mr. Kalle Edvard\", \"Braf, Miss. Elin Ester Maria\", \"Nancarrow, Mr. William Henry\", \"Stengel, Mrs. Charles Emil Henry (Annie May Morris)\", \"Weisz, Mr. Leopold\", \"Foley, Mr. William\", \"Johansson Palmquist, Mr. Oskar Leander\", \"Thomas, Mrs. Alexander (Thamine Thelma\\\")\\\"\", \"Holthen, Mr. Johan Martin\", \"Buckley, Mr. Daniel\", \"Ryan, Mr. Edward\", \"Willer, Mr. Aaron (Abi Weller\\\")\\\"\", \"Swane, Mr. George\", \"Stanton, Mr. Samuel Ward\", \"Shine, Miss. Ellen Natalia\", \"Evans, Miss. Edith Corse\", \"Buckley, Miss. Katherine\", \"Straus, Mrs. Isidor (Rosalie Ida Blun)\", \"Chronopoulos, Mr. Demetrios\", \"Thomas, Mr. John\", \"Sandstrom, Miss. Beatrice Irene\", \"Beattie, Mr. Thomson\", \"Chapman, Mrs. John Henry (Sara Elizabeth Lawry)\", \"Watt, Miss. Bertha J\", \"Kiernan, Mr. John\", \"Schabert, Mrs. Paul (Emma Mock)\", \"Carver, Mr. Alfred John\", \"Kennedy, Mr. John\", \"Cribb, Miss. Laura Alice\", \"Brobeck, Mr. Karl Rudolf\", \"McCoy, Miss. Alicia\", \"Bowenur, Mr. Solomon\", \"Petersen, Mr. Marius\", \"Spinner, Mr. Henry John\", \"Gracie, Col. Archibald IV\", \"Lefebre, Mrs. Frank (Frances)\", \"Thomas, Mr. Charles P\", \"Dintcheff, Mr. Valtcho\", \"Carlsson, Mr. Carl Robert\", \"Zakarian, Mr. Mapriededer\", \"Schmidt, Mr. August\", \"Drapkin, Miss. Jennie\", \"Goodwin, Mr. Charles Frederick\", \"Goodwin, Miss. Jessie Allis\", \"Daniels, Miss. Sarah\", \"Ryerson, Mr. Arthur Larned\", \"Beauchamp, Mr. Henry James\", \"Lindeberg-Lind, Mr. Erik Gustaf (Mr Edward Lingrey\\\")\\\"\", \"Vander Planke, Mr. Julius\", \"Hilliard, Mr. Herbert Henry\", \"Davies, Mr. Evan\", \"Crafton, Mr. John Bertram\", \"Lahtinen, Rev. William\", \"Earnshaw, Mrs. Boulton (Olive Potter)\", \"Matinoff, Mr. Nicola\", \"Storey, Mr. Thomas\", \"Klasen, Mrs. (Hulda Kristina Eugenia Lofqvist)\", \"Asplund, Master. Filip Oscar\", \"Duquemin, Mr. Joseph\", \"Bird, Miss. Ellen\", \"Lundin, Miss. Olga Elida\", \"Borebank, Mr. John James\", \"Peacock, Mrs. Benjamin (Edith Nile)\", \"Smyth, Miss. Julia\", \"Touma, Master. Georges Youssef\", \"Wright, Miss. Marion\", \"Pearce, Mr. Ernest\", \"Peruschitz, Rev. Joseph Maria\", \"Kink-Heilmann, Mrs. Anton (Luise Heilmann)\", \"Brandeis, Mr. Emil\", \"Ford, Mr. Edward Watson\", \"Cassebeer, Mrs. Henry Arthur Jr (Eleanor Genevieve Fosdick)\", \"Hellstrom, Miss. Hilda Maria\", \"Lithman, Mr. Simon\", \"Zakarian, Mr. Ortin\", \"Dyker, Mr. Adolf Fredrik\", \"Torfa, Mr. Assad\", \"Asplund, Mr. Carl Oscar Vilhelm Gustafsson\", \"Brown, Miss. Edith Eileen\", \"Sincock, Miss. Maude\", \"Stengel, Mr. Charles Emil Henry\", \"Becker, Mrs. Allen Oliver (Nellie E Baumgardner)\", \"Compton, Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \"McCrie, Mr. James Matthew\", \"Compton, Mr. Alexander Taylor Jr\", \"Marvin, Mrs. Daniel Warner (Mary Graham Carmichael Farquarson)\", \"Lane, Mr. Patrick\", \"Douglas, Mrs. Frederick Charles (Mary Helene Baxter)\", \"Maybery, Mr. Frank Hubert\", \"Phillips, Miss. Alice Frances Louisa\", \"Davies, Mr. Joseph\", \"Sage, Miss. Ada\", \"Veal, Mr. James\", \"Angle, Mr. William A\", \"Salomon, Mr. Abraham L\", \"van Billiard, Master. Walter John\", \"Lingane, Mr. John\", \"Drew, Master. Marshall Brines\", \"Karlsson, Mr. Julius Konrad Eugen\", \"Spedden, Master. Robert Douglas\", \"Nilsson, Miss. Berta Olivia\", \"Baimbrigge, Mr. Charles Robert\", \"Rasmussen, Mrs. (Lena Jacobsen Solvang)\", \"Murphy, Miss. Nora\", \"Danbom, Master. Gilbert Sigvard Emanuel\", \"Astor, Col. John Jacob\", \"Quick, Miss. Winifred Vera\", \"Andrew, Mr. Frank Thomas\", \"Omont, Mr. Alfred Fernand\", \"McGowan, Miss. Katherine\", \"Collett, Mr. Sidney C Stuart\", \"Rosenbaum, Miss. Edith Louise\", \"Delalic, Mr. Redjo\", \"Andersen, Mr. Albert Karvin\", \"Finoli, Mr. Luigi\", \"Deacon, Mr. Percy William\", \"Howard, Mrs. Benjamin (Ellen Truelove Arman)\", \"Andersson, Miss. Ida Augusta Margareta\", \"Head, Mr. Christopher\", \"Mahon, Miss. Bridget Delia\", \"Wick, Mr. George Dennick\", \"Widener, Mrs. George Dunton (Eleanor Elkins)\", \"Thomson, Mr. Alexander Morrison\", \"Duran y More, Miss. Florentina\", \"Reynolds, Mr. Harold J\", \"Cook, Mrs. (Selena Rogers)\", \"Karlsson, Mr. Einar Gervasius\", \"Candee, Mrs. Edward (Helen Churchill Hungerford)\", \"Moubarek, Mrs. George (Omine Amenia\\\" Alexander)\\\"\", \"Asplund, Mr. Johan Charles\", \"McNeill, Miss. Bridget\", \"Everett, Mr. Thomas James\", \"Hocking, Mr. Samuel James Metcalfe\", \"Sweet, Mr. George Frederick\", \"Willard, Miss. Constance\", \"Wiklund, Mr. Karl Johan\", \"Linehan, Mr. Michael\", \"Cumings, Mr. John Bradley\", \"Vendel, Mr. Olof Edvin\", \"Warren, Mr. Frank Manley\", \"Baccos, Mr. Raffull\", \"Hiltunen, Miss. Marta\", \"Douglas, Mrs. Walter Donald (Mahala Dutton)\", \"Lindstrom, Mrs. Carl Johan (Sigrid Posse)\", \"Christy, Mrs. (Alice Frances)\", \"Spedden, Mr. Frederic Oakley\", \"Hyman, Mr. Abraham\", \"Johnston, Master. William Arthur Willie\\\"\\\"\", \"Kenyon, Mr. Frederick R\", \"Karnes, Mrs. J Frank (Claire Bennett)\", \"Drew, Mr. James Vivian\", \"Hold, Mrs. Stephen (Annie Margaret Hill)\", \"Khalil, Mrs. Betros (Zahie Maria\\\" Elias)\\\"\", \"West, Miss. Barbara J\", \"Abrahamsson, Mr. Abraham August Johannes\", \"Clark, Mr. Walter Miller\", \"Salander, Mr. Karl Johan\", \"Wenzel, Mr. Linhart\", \"MacKay, Mr. George William\", \"Mahon, Mr. John\", \"Niklasson, Mr. Samuel\", \"Bentham, Miss. Lilian W\", \"Midtsjo, Mr. Karl Albert\", \"de Messemaeker, Mr. Guillaume Joseph\", \"Nilsson, Mr. August Ferdinand\", \"Wells, Mrs. Arthur Henry (Addie\\\" Dart Trevaskis)\\\"\", \"Klasen, Miss. Gertrud Emilia\", \"Portaluppi, Mr. Emilio Ilario Giuseppe\", \"Lyntakoff, Mr. Stanko\", \"Chisholm, Mr. Roderick Robert Crispin\", \"Warren, Mr. Charles William\", \"Howard, Miss. May Elizabeth\", \"Pokrnic, Mr. Mate\", \"McCaffry, Mr. Thomas Francis\", \"Fox, Mr. Patrick\", \"Clark, Mrs. Walter Miller (Virginia McDowell)\", \"Lennon, Miss. Mary\", \"Saade, Mr. Jean Nassr\", \"Bryhl, Miss. Dagmar Jenny Ingeborg \", \"Parker, Mr. Clifford Richard\", \"Faunthorpe, Mr. Harry\", \"Ware, Mr. John James\", \"Oxenham, Mr. Percy Thomas\", \"Oreskovic, Miss. Jelka\", \"Peacock, Master. Alfred Edward\", \"Fleming, Miss. Honora\", \"Touma, Miss. Maria Youssef\", \"Rosblom, Miss. Salli Helena\", \"Dennis, Mr. William\", \"Franklin, Mr. Charles (Charles Fardon)\", \"Snyder, Mr. John Pillsbury\", \"Mardirosian, Mr. Sarkis\", \"Ford, Mr. Arthur\", \"Rheims, Mr. George Alexander Lucien\", \"Daly, Miss. Margaret Marcella Maggie\\\"\\\"\", \"Nasr, Mr. Mustafa\", \"Dodge, Dr. Washington\", \"Wittevrongel, Mr. Camille\", \"Angheloff, Mr. Minko\", \"Laroche, Miss. Louise\", \"Samaan, Mr. Hanna\", \"Loring, Mr. Joseph Holland\", \"Johansson, Mr. Nils\", \"Olsson, Mr. Oscar Wilhelm\", \"Malachard, Mr. Noel\", \"Phillips, Mr. Escott Robert\", \"Pokrnic, Mr. Tome\", \"McCarthy, Miss. Catherine Katie\\\"\\\"\", \"Crosby, Mrs. Edward Gifford (Catherine Elizabeth Halstead)\", \"Allison, Mr. Hudson Joshua Creighton\", \"Aks, Master. Philip Frank\", \"Hays, Mr. Charles Melville\", \"Hansen, Mrs. Claus Peter (Jennie L Howard)\", \"Cacic, Mr. Jego Grga\", \"Vartanian, Mr. David\", \"Sadowitz, Mr. Harry\", \"Carr, Miss. Jeannie\", \"White, Mrs. John Stuart (Ella Holmes)\", \"Hagardon, Miss. Kate\", \"Spencer, Mr. William Augustus\", \"Rogers, Mr. Reginald Harry\", \"Jonsson, Mr. Nils Hilding\", \"Jefferys, Mr. Ernest Wilfred\", \"Andersson, Mr. Johan Samuel\", \"Krekorian, Mr. Neshan\", \"Nesson, Mr. Israel\", \"Rowe, Mr. Alfred G\", \"Kreuchen, Miss. Emilie\", \"Assam, Mr. Ali\", \"Becker, Miss. Ruth Elizabeth\", \"Rosenshine, Mr. George (Mr George Thorne\\\")\\\"\", \"Clarke, Mr. Charles Valentine\", \"Enander, Mr. Ingvar\", \"Davies, Mrs. John Morgan (Elizabeth Agnes Mary White) \", \"Dulles, Mr. William Crothers\", \"Thomas, Mr. Tannous\", \"Nakid, Mrs. Said (Waika Mary\\\" Mowad)\\\"\", \"Cor, Mr. Ivan\", \"Maguire, Mr. John Edward\", \"de Brito, Mr. Jose Joaquim\", \"Elias, Mr. Joseph\", \"Denbury, Mr. Herbert\", \"Betros, Master. Seman\", \"Fillbrook, Mr. Joseph Charles\", \"Lundstrom, Mr. Thure Edvin\", \"Sage, Mr. John George\", \"Cardeza, Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \"van Billiard, Master. James William\", \"Abelseth, Miss. Karen Marie\", \"Botsford, Mr. William Hull\", \"Whabee, Mrs. George Joseph (Shawneene Abi-Saab)\", \"Giles, Mr. Ralph\", \"Walcroft, Miss. Nellie\", \"Greenfield, Mrs. Leo David (Blanche Strouse)\", \"Stokes, Mr. Philip Joseph\", \"Dibden, Mr. William\", \"Herman, Mr. Samuel\", \"Dean, Miss. Elizabeth Gladys Millvina\\\"\\\"\", \"Julian, Mr. Henry Forbes\", \"Brown, Mrs. John Murray (Caroline Lane Lamson)\", \"Lockyer, Mr. Edward\", \"O'Keefe, Mr. Patrick\", \"Lindell, Mrs. Edvard Bengtsson (Elin Gerda Persson)\", \"Sage, Master. William Henry\", \"Mallet, Mrs. Albert (Antoinette Magnin)\", \"Ware, Mrs. John James (Florence Louise Long)\", \"Strilic, Mr. Ivan\", \"Harder, Mrs. George Achilles (Dorothy Annan)\", \"Sage, Mrs. John (Annie Bullen)\", \"Caram, Mr. Joseph\", \"Riihivouri, Miss. Susanna Juhantytar Sanni\\\"\\\"\", \"Gibson, Mrs. Leonard (Pauline C Boeson)\", \"Pallas y Castello, Mr. Emilio\", \"Giles, Mr. Edgar\", \"Wilson, Miss. Helen Alice\", \"Ismay, Mr. Joseph Bruce\", \"Harbeck, Mr. William H\", \"Dodge, Mrs. Washington (Ruth Vidaver)\", \"Bowen, Miss. Grace Scott\", \"Kink, Miss. Maria\", \"Cotterill, Mr. Henry Harry\\\"\\\"\", \"Hipkins, Mr. William Edward\", \"Asplund, Master. Carl Edgar\", \"O'Connor, Mr. Patrick\", \"Foley, Mr. Joseph\", \"Risien, Mrs. Samuel (Emma)\", \"McNamee, Mrs. Neal (Eileen O'Leary)\", \"Wheeler, Mr. Edwin Frederick\\\"\\\"\", \"Herman, Miss. Kate\", \"Aronsson, Mr. Ernst Axel Algot\", \"Ashby, Mr. John\", \"Canavan, Mr. Patrick\", \"Palsson, Master. Paul Folke\", \"Payne, Mr. Vivian Ponsonby\", \"Lines, Mrs. Ernest H (Elizabeth Lindsey James)\", \"Abbott, Master. Eugene Joseph\", \"Gilbert, Mr. William\", \"Kink-Heilmann, Mr. Anton\", \"Smith, Mrs. Lucien Philip (Mary Eloise Hughes)\", \"Colbert, Mr. Patrick\", \"Frolicher-Stehli, Mrs. Maxmillian (Margaretha Emerentia Stehli)\", \"Larsson-Rondberg, Mr. Edvard A\", \"Conlon, Mr. Thomas Henry\", \"Bonnell, Miss. Caroline\", \"Gale, Mr. Harry\", \"Gibson, Miss. Dorothy Winifred\", \"Carrau, Mr. Jose Pedro\", \"Frauenthal, Mr. Isaac Gerald\", \"Nourney, Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \"Ware, Mr. William Jeffery\", \"Widener, Mr. George Dunton\", \"Riordan, Miss. Johanna Hannah\\\"\\\"\", \"Peacock, Miss. Treasteall\", \"Naughton, Miss. Hannah\", \"Minahan, Mrs. William Edward (Lillian E Thorpe)\", \"Henriksson, Miss. Jenny Lovisa\", \"Spector, Mr. Woolf\", \"Oliva y Ocana, Dona. Fermina\", \"Saether, Mr. Simon Sivertsen\", \"Ware, Mr. Frederick\", \"Peter, Master. Michael J\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Ticket_p\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('7fce9260-136e-4bf5-824b-0373080fe871');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 30,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 15,
                "o_idx": 0
            }
        },
        {
            "source": "drop = [\"SP\", \"SOP\", \"Fa\", \"SCOW\", \"PPP\", \"AS\", \"CASOTON\", \"SWPP\", \"SCAHBasle\", \"SCA3\", \"STONOQ\", \"AQ4\", \"A2\", \"LP\", \"AQ3\", \"\"]\ndf = df.replace(drop, 'N/A')",
            "mc_idx": 32,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    16,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 32,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 16,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt= dfplt[dfplt[\"Ticket_p\"] != \"N/A\"]\nfig = px.scatter(dfplt.astype(str), x=\"Ticket_p\", y=\"Name\", color= \"Survived\",\n                 color_discrete_sequence=cm, size_max=6,width=1200, height=500)\nfig.show()",
            "mc_idx": 33,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    17,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"ab8fe60e-d6d3-4297-a85f-406d236d04c8\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ab8fe60e-d6d3-4297-a85f-406d236d04c8\")) {                    Plotly.newPlot(                        \"ab8fe60e-d6d3-4297-a85f-406d236d04c8\",                        [{\"hovertemplate\": \"Survived=0.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"A5\", \"A5\", \"PC\", \"CA\", \"PC\", \"A5\", \"SCA4\", \"A4\", \"CA\", \"PC\", \"CA\", \"CA\", \"SOC\", \"WC\", \"SOTONOQ\", \"WEP\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"SOC\", \"A4\", \"SOTONOQ\", \"A5\", \"CA\", \"SCPARIS\", \"PC\", \"CA\", \"WC\", \"A5\", \"A5\", \"PC\", \"SOTONOQ\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"CA\", \"SCPARIS\", \"CA\", \"SOTONOQ\", \"A5\", \"WC\", \"PP\", \"A5\", \"CA\", \"WC\", \"WC\", \"STONO2\", \"A5\", \"CA\", \"PC\", \"SCParis\", \"PC\", \"A5\", \"FCC\", \"A5\", \"CA\", \"PC\", \"SCPARIS\", \"SOTONOQ\", \"C\", \"PC\", \"STONO2\", \"SOC\", \"CA\", \"STONO2\", \"A5\", \"A4\", \"STONO2\", \"WC\", \"CA\", \"CA\", \"A5\", \"SOTONOQ\", \"CA\", \"A5\", \"A5\", \"SOTONOQ\", \"PC\", \"A4\", \"CA\", \"PC\", \"C\", \"SOTONOQ\", \"PC\", \"PC\", \"PC\", \"SOTONOQ\", \"SOTONOQ\", \"A4\", \"A4\", \"A5\", \"STONO2\", \"A5\", \"SCAH\", \"SOTONOQ\", \"A5\", \"STONO2\", \"CA\", \"SOPP\", \"SOC\", \"SOC\", \"A5\", \"FC\", \"CA\", \"CA\", \"CA\", \"SCParis\", \"STONO2\", \"WC\", \"WEP\", \"CA\", \"SOTONO2\", \"SOPP\", \"WC\", \"SOTONOQ\", \"PC\", \"CA\", \"PC\", \"A4\", \"STONO2\", \"SCPARIS\", \"C\", \"SOTONO2\", \"SOPP\", \"CA\", \"CA\", \"CA\", \"PC\", \"SOTONOQ\", \"WC\"], \"xaxis\": \"x\", \"y\": [\"Braund, Mr. Owen Harris\", \"Saundercock, Mr. William Henry\", \"Uruchurtu, Don. Manuel E\", \"Wheadon, Mr. Edward H\", \"Meyer, Mr. Edgar Joseph\", \"Cann, Mr. Ernest Charles\", \"Rogers, Mr. William John\", \"Nosworthy, Mr. Richard Cater\", \"Goodwin, Master. William Frederick\", \"Stewart, Mr. Albert A\", \"Jenkin, Mr. Stephen Curnow\", \"Goodwin, Miss. Lillian Amy\", \"Hood, Mr. Ambrose Jr\", \"Ford, Mr. William Neal\", \"Slocovski, Mr. Selman Francis\", \"Chaffee, Mr. Herbert Fuller\", \"Dean, Mr. Bertram Frank\", \"Goldschmidt, Mr. George B\", \"Pekoniemi, Mr. Edvard\", \"Baxter, Mr. Quigg Edmond\", \"Hickman, Mr. Stanley George\", \"Moore, Mr. Leonard Charles\", \"Coelho, Mr. Domingos Fernandeo\", \"Robins, Mrs. Alexander A (Grace Charity Laury)\", \"Sobey, Mr. Samuel James Hayden\", \"Richard, Mr. Emile\", \"Giglio, Mr. Victor\", \"Nicholls, Mr. Joseph Charles\", \"Ford, Miss. Robina Maggie \\\"Ruby\\\"\", \"Meo, Mr. Alfonzo\", \"van Billiard, Mr. Austin Blyler\", \"Williams, Mr. Charles Duane\", \"Corn, Mr. Harry\", \"Sage, Master. Thomas Henry\", \"Baumann, Mr. John D\", \"Sivola, Mr. Antti Wilhelm\", \"Isham, Miss. Ann Elizabeth\", \"Sage, Miss. Constance Gladys\", \"Pernot, Mr. Rene\", \"Sage, Mr. Frederick\", \"Ali, Mr. Ahmed\", \"Perkin, Mr. John Henry\", \"Harris, Mr. Walter\", \"Berglund, Mr. Karl Ivar Sven\", \"Lovell, Mr. John Hall (\\\"Henry\\\")\", \"Leyson, Mr. Robert William Norman\", \"Harknett, Miss. Alice Phoebe\", \"Coleridge, Mr. Reginald Charles\", \"Maenpaa, Mr. Matti Alexanteri\", \"Lobb, Mr. William Arthur\", \"Reeves, Mr. David\", \"Natsch, Mr. Charles H\", \"Levy, Mr. Rene Jacques\", \"Lewy, Mr. Ervin G\", \"Williams, Mr. Howard Hugh \\\"Harry\\\"\", \"Hart, Mr. Benjamin\", \"Dennis, Mr. Samuel\", \"Sage, Mr. George John Jr\", \"Graham, Mr. George Edward\", \"del Carlo, Mr. Sebastiano\", \"Asim, Mr. Adola\", \"Adahl, Mr. Mauritz Nils Martin\", \"Ringhini, Mr. Sante\", \"Tikkanen, Mr. Juho\", \"Davies, Mr. Charles Henry\", \"Goodwin, Master. Sidney Leonard\", \"Hakkarainen, Mr. Pekka Pietari\", \"Charters, Mr. David\", \"Wiseman, Mr. Phillippe\", \"Kallio, Mr. Nikolai Erland\", \"Ford, Miss. Doolina Margaret \\\"Daisy\\\"\", \"Kvillner, Mr. Johan Henrik Johannesson\", \"West, Mr. Edwy Arthur\", \"Peduzzi, Mr. Joseph\", \"Goncalves, Mr. Manuel Estanslas\", \"Goodwin, Master. Harold Victor\", \"Rouse, Mr. Richard Henry\", \"Somerton, Mr. Francis William\", \"Windelov, Mr. Einar\", \"Artagaveytia, Mr. Ramon\", \"Stanley, Mr. Edward Roland\", \"Shellard, Mr. Frederick William\", \"Penasco y Castellana, Mr. Victor de Satode\", \"Olsen, Mr. Henry Margido\", \"Webber, Mr. James\", \"Farthing, Mr. John\", \"Douglas, Mr. Walter Donald\", \"Robbins, Mr. Victor\", \"Simmons, Mr. John\", \"Meanwell, Miss. (Marion Ogden)\", \"Davies, Mr. Alfred J\", \"Rush, Mr. Alfred George John\", \"Murdlin, Mr. Joseph\", \"Rintamaki, Mr. Matti\", \"Elsbury, Mr. William James\", \"Chapman, Mr. John Henry\", \"Jardin, Mr. Jose Neto\", \"Lobb, Mrs. William Arthur (Cordelia K Stanlick)\", \"Leinonen, Mr. Antti Gustaf\", \"Collyer, Mr. Harvey\", \"Willey, Mr. Edward\", \"Hickman, Mr. Leonard Mark\", \"Hickman, Mr. Lewis\", \"Cook, Mr. Jacob\", \"Davidson, Mr. Thornton\", \"Mitchell, Mr. Henry Michael\", \"Goodwin, Mrs. Frederick (Augusta Tyler)\", \"Goodwin, Mr. Charles Edward\", \"Laroche, Mr. Joseph Philippe Lemercier\", \"Ilmakangas, Miss. Pieta Sofia\", \"Ford, Mrs. Edward (Margaret Ann Watson)\", \"Crosby, Capt. Edward Gifford\", \"Abbott, Mr. Rossmore Edward\", \"Nirva, Mr. Iisakki Antino Aijo\", \"Mack, Mrs. (Mary)\", \"Johnston, Mr. Andrew G\", \"Ali, Mr. William\", \"Guggenheim, Mr. Benjamin\", \"Sage, Miss. Stella Anna\", \"Hoyt, Mr. William Fisher\", \"Lester, Mr. James\", \"Heininen, Miss. Wendla Maria\", \"Mallet, Mr. Albert\", \"Holm, Mr. John Fredrik Alexander\", \"Alhomaki, Mr. Ilmari Rudolf\", \"Mudd, Mr. Thomas Charles\", \"Abbing, Mr. Anthony\", \"Sage, Mr. Douglas Bullen\", \"Sage, Miss. Dorothy Edith \\\"Dolly\\\"\", \"Roebling, Mr. Washington Augustus II\", \"Sutehall, Mr. Henry Jr\", \"Johnston, Miss. Catherine Helen \\\"Carrie\\\"\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"PC\", \"STONO2\", \"PP\", \"PC\", \"SCParis\", \"PC\", \"CA\", \"CA\", \"CA\", \"SOC\", \"PC\", \"C\", \"STONO2\", \"CA\", \"PC\", \"PC\", \"A5\", \"FCC\", \"STONO2\", \"SOTONOQ\", \"CA\", \"PC\", \"PC\", \"PC\", \"PC\", \"CA\", \"A5\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"CA\", \"PC\", \"PC\", \"C\", \"PC\", \"SC\", \"PP\", \"STONO2\", \"STONO2\", \"SOTONOQ\", \"SCAH\", \"FCC\", \"FCC\", \"CA\", \"CA\", \"PC\", \"PC\", \"CA\", \"WC\", \"FCC\", \"PC\", \"WEP\", \"SCPARIS\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"SCParis\", \"PC\", \"PC\", \"PC\", \"CA\", \"PC\", \"STONO2\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"PC\", \"STONO2\", \"CA\", \"CA\", \"SCPARIS\", \"PC\", \"PC\", \"SCPARIS\"], \"xaxis\": \"x\", \"y\": [\"Cumings, Mrs. John Bradley (Florence Briggs Thayer)\", \"Heikkinen, Miss. Laina\", \"Sandstrom, Miss. Marguerite Rut\", \"Spencer, Mrs. William Augustus (Marie Eugenie)\", \"Laroche, Miss. Simonne Marie Anne Andree\", \"Harper, Mrs. Henry Sleeper (Myna Haxtun)\", \"Rugg, Miss. Emily\", \"West, Miss. Constance Mirium\", \"Nye, Mrs. (Elizabeth Ramell)\", \"Ilett, Miss. Bertha\", \"Greenfield, Mr. William Bertram\", \"Madsen, Mr. Fridtjof Arne\", \"Hakkarainen, Mrs. Pekka Pietari (Elin Matilda Dolck)\", \"Watt, Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \"Brown, Mrs. James Joseph (Margaret Tobin)\", \"Lurette, Miss. Elise\", \"Cohen, Mr. Gurshon \\\"Gus\\\"\", \"Cameron, Miss. Clear Annie\", \"Honkanen, Miss. Eliina\", \"Sunderland, Mr. Victor Francis\", \"Collyer, Miss. Marjorie \\\"Lottie\\\"\", \"Thorne, Mrs. Gertrude Maybelle\", \"Ward, Miss. Anna\", \"Graham, Mrs. William Thompson (Edith Junkins)\", \"Bissette, Miss. Amelia\", \"Abbott, Mrs. Stanton (Rosa Hunt)\", \"Dorking, Mr. Edward Arthur\", \"Baxter, Mrs. James (Helene DeLaudeniere Chaput)\", \"Penasco y Castellana, Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \"Francatelli, Miss. Laura Mabel\", \"Ryerson, Miss. Emily Borie\", \"Young, Miss. Marie Grice\", \"Frauenthal, Mrs. Henry William (Clara Heinsheimer)\", \"Coutts, Master. William Loch \\\"William\\\"\", \"Aubart, Mme. Leontine Pauline\", \"Meyer, Mrs. Edgar Joseph (Leila Saks)\", \"Landergren, Miss. Aurora Adelia\", \"Bidois, Miss. Rosalie\", \"Lehmann, Miss. Bertha\", \"Sandstrom, Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \"Niskanen, Mr. Juha\", \"Sundman, Mr. Johan Julian\", \"Pickard, Mr. Berk (Berk Trembisky)\", \"Louch, Mrs. Charles Alexander (Alice Adelaide Slow)\", \"Hart, Mrs. Benjamin (Esther Ada Bloomfield)\", \"Toomey, Miss. Ellen\", \"West, Mrs. Edwy Arthur (Ada Mary Worth)\", \"Coutts, Master. Eden Leslie \\\"Neville\\\"\", \"McGough, Mr. James Robert\", \"Rothschild, Mrs. Martin (Elizabeth L. Barrett)\", \"Lemore, Mrs. (Amelia Milley)\", \"Ridsdale, Miss. Lucy\", \"Hart, Miss. Eva Miriam\", \"LeRoy, Miss. Bertha\", \"Crosby, Miss. Harriet R\", \"Padro y Manent, Mr. Julian\", \"Davies, Master. John Morgan Jr\", \"Flynn, Mr. John Irwin (\\\"Irving\\\")\", \"Jussila, Mr. Eiriik\", \"Duff Gordon, Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \"Laroche, Mrs. Joseph (Juliette Marie Louise Lafargue)\", \"Shutes, Miss. Elizabeth W\", \"Sagesser, Mlle. Emma\", \"Harper, Mr. Henry Sleeper\", \"Stanley, Miss. Amy Zillah Elsie\", \"Frauenthal, Dr. Henry William\", \"Lindqvist, Mr. Eino William\", \"Cardeza, Mr. Thomas Drake Martinez\", \"Hassab, Mr. Hammad\", \"Astor, Mrs. John Jacob (Madeleine Talmadge Force)\", \"Silverthorne, Mr. Spencer Victor\", \"Calderhead, Mr. Edward Pennington\", \"Mayne, Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \"Endres, Miss. Caroline Louise\", \"Lesurer, Mr. Gustave J\", \"Ryerson, Miss. Susan Parker \\\"Suzette\\\"\", \"Stranden, Mr. Juho\", \"Dean, Master. Bertram Vere\", \"Collyer, Mrs. Harvey (Charlotte Annie Tate)\", \"Mallet, Master. Andre\", \"Compton, Miss. Sara Rebecca\", \"Lines, Miss. Mary Conover\", \"Duran y More, Miss. Asuncion\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Ticket_p=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"A4\", \"WEP\", \"SCPARIS\", \"STONO2\", \"PC\", \"C\", \"PC\", \"PC\", \"PC\", \"A5\", \"SCAH\", \"CA\", \"CA\", \"WC\", \"SOTONOQ\", \"STONO2\", \"PC\", \"CA\", \"SCPARIS\", \"PC\", \"PC\", \"FCC\", \"PC\", \"PC\", \"A4\", \"FC\", \"STONO2\", \"A5\", \"C\", \"PC\", \"PC\", \"PP\", \"SCAH\", \"CA\", \"SOTONOQ\", \"CA\", \"CA\", \"PC\", \"SCA4\", \"SOPP\", \"PC\", \"SOTONOQ\", \"PC\", \"WC\", \"SOPP\", \"CA\", \"PC\", \"PC\", \"PC\", \"SOPP\", \"A4\", \"CA\", \"A5\", \"CA\", \"PC\", \"CA\", \"FC\", \"PC\", \"C\", \"SOTONOQ\", \"SOC\", \"SCPARIS\", \"WC\", \"PC\", \"CA\", \"PC\", \"PC\", \"WC\", \"FCC\", \"CA\", \"SOTONO2\", \"CA\", \"CA\", \"CA\", \"SC\", \"CA\", \"WC\", \"SOTONOQ\", \"A5\", \"SOTONOQ\", \"A5\", \"PC\", \"SCParis\", \"SOPP\", \"PC\", \"PC\", \"CA\", \"SOTONOQ\", \"PC\", \"CA\", \"PC\", \"CA\", \"CA\", \"CA\", \"PC\", \"A5\", \"FCC\", \"PC\", \"FCC\", \"SOC\", \"CA\", \"CA\", \"SCPARIS\", \"CA\", \"CA\", \"SCPARIS\", \"PC\", \"SCPARIS\", \"PC\", \"CA\", \"CA\", \"SCPARIS\", \"SOTONOQ\", \"A5\", \"PC\", \"SOTONOQ\"], \"xaxis\": \"x\", \"y\": [\"Davies, Mr. John Samuel\", \"Chaffee, Mrs. Herbert Fuller (Carrie Constance Toogood)\", \"del Carlo, Mrs. Sebastiano (Argenia Genovesi)\", \"Ilmakangas, Miss. Ida Livija\", \"Rothschild, Mr. Martin\", \"Olsen, Master. Artur Karl\", \"Flegenheim, Mrs. Alfred (Antoinette)\", \"Williams, Mr. Richard Norris II\", \"Ryerson, Mrs. Arthur Larned (Emily Maria Borie)\", \"Robins, Mr. Alexander A\", \"Louch, Mr. Charles Alexander\", \"Jefferys, Mr. Clifford Thomas\", \"Dean, Mrs. Bertram (Eva Georgetta Light)\", \"Johnston, Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \"Goldsmith, Mr. Nathan\", \"Peltomaki, Mr. Nikolai Johannes\", \"Chevre, Mr. Paul Romaine\", \"Coutts, Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \"Pulbaum, Mr. Franz\", \"Chaudanson, Miss. Victorine\", \"Ryerson, Master. John Borie\", \"Corey, Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \"Ovies y Rodriguez, Mr. Servando\", \"Straus, Mr. Isidor\", \"Badman, Miss. Emily Louisa\", \"Davidson, Mrs. Thornton (Orian Hays)\", \"Makinen, Mr. Kalle Edvard\", \"Nancarrow, Mr. William Henry\", \"Holthen, Mr. Johan Martin\", \"Evans, Miss. Edith Corse\", \"Straus, Mrs. Isidor (Rosalie Ida Blun)\", \"Sandstrom, Miss. Beatrice Irene\", \"Chapman, Mrs. John Henry (Sara Elizabeth Lawry)\", \"Watt, Miss. Bertha J\", \"Drapkin, Miss. Jennie\", \"Goodwin, Mr. Charles Frederick\", \"Goodwin, Miss. Jessie Allis\", \"Ryerson, Mr. Arthur Larned\", \"Davies, Mr. Evan\", \"Duquemin, Mr. Joseph\", \"Bird, Miss. Ellen\", \"Peacock, Mrs. Benjamin (Edith Nile)\", \"Brandeis, Mr. Emil\", \"Ford, Mr. Edward Watson\", \"Lithman, Mr. Simon\", \"Sincock, Miss. Maude\", \"Compton, Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \"Compton, Mr. Alexander Taylor Jr\", \"Douglas, Mrs. Frederick Charles (Mary Helene Baxter)\", \"Phillips, Miss. Alice Frances Louisa\", \"Davies, Mr. Joseph\", \"Sage, Miss. Ada\", \"van Billiard, Master. Walter John\", \"Baimbrigge, Mr. Charles Robert\", \"Astor, Col. John Jacob\", \"Andrew, Mr. Frank Thomas\", \"Omont, Mr. Alfred Fernand\", \"Rosenbaum, Miss. Edith Louise\", \"Andersen, Mr. Albert Karvin\", \"Finoli, Mr. Luigi\", \"Deacon, Mr. Percy William\", \"Duran y More, Miss. Florentina\", \"Cook, Mrs. (Selena Rogers)\", \"Candee, Mrs. Edward (Helen Churchill Hungerford)\", \"Everett, Mr. Thomas James\", \"Cumings, Mr. John Bradley\", \"Douglas, Mrs. Walter Donald (Mahala Dutton)\", \"Johnston, Master. William Arthur Willie\\\"\\\"\", \"Karnes, Mrs. J Frank (Claire Bennett)\", \"West, Miss. Barbara J\", \"Abrahamsson, Mr. Abraham August Johannes\", \"MacKay, Mr. George William\", \"Portaluppi, Mr. Emilio Ilario Giuseppe\", \"Warren, Mr. Charles William\", \"Parker, Mr. Clifford Richard\", \"Ware, Mr. John James\", \"Oxenham, Mr. Percy Thomas\", \"Peacock, Master. Alfred Edward\", \"Dennis, Mr. William\", \"Franklin, Mr. Charles (Charles Fardon)\", \"Ford, Mr. Arthur\", \"Rheims, Mr. George Alexander Lucien\", \"Laroche, Miss. Louise\", \"Phillips, Mr. Escott Robert\", \"White, Mrs. John Stuart (Ella Holmes)\", \"Spencer, Mr. William Augustus\", \"Jefferys, Mr. Ernest Wilfred\", \"Assam, Mr. Ali\", \"Rosenshine, Mr. George (Mr George Thorne\\\")\\\"\", \"Davies, Mrs. John Morgan (Elizabeth Agnes Mary White) \", \"Dulles, Mr. William Crothers\", \"Denbury, Mr. Herbert\", \"Fillbrook, Mr. Joseph Charles\", \"Sage, Mr. John George\", \"Cardeza, Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \"van Billiard, Master. James William\", \"Walcroft, Miss. Nellie\", \"Greenfield, Mrs. Leo David (Blanche Strouse)\", \"Stokes, Mr. Philip Joseph\", \"Dibden, Mr. William\", \"Dean, Miss. Elizabeth Gladys Millvina\\\"\\\"\", \"Sage, Master. William Henry\", \"Mallet, Mrs. Albert (Antoinette Magnin)\", \"Ware, Mrs. John James (Florence Louise Long)\", \"Sage, Mrs. John (Annie Bullen)\", \"Pallas y Castello, Mr. Emilio\", \"Bowen, Miss. Grace Scott\", \"Wheeler, Mr. Edwin Frederick\\\"\\\"\", \"Lines, Mrs. Ernest H (Elizabeth Lindsey James)\", \"Abbott, Master. Eugene Joseph\", \"Gilbert, Mr. William\", \"Nourney, Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \"Peacock, Miss. Treasteall\", \"Spector, Mr. Woolf\", \"Oliva y Ocana, Dona. Fermina\", \"Saether, Mr. Simon Sivertsen\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Ticket_p\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ab8fe60e-d6d3-4297-a85f-406d236d04c8');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 33,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 17,
                "o_idx": 0
            }
        },
        {
            "source": "df[[\"Surname\",\"Name\"]] = [i.split(\",\") for i in df[\"Name\"].values]",
            "mc_idx": 36,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".split": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    18,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 36,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 18,
                "o_idx": 0
            }
        },
        {
            "source": "a = df.groupby(\"Surname\")[\"Surname\"].count()\nfam_list = a[a>1].index.values\ndf.loc[~df[\"Surname\"].isin(fam_list),\"Surname\"] = \"Other\"",
            "mc_idx": 38,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".groupby": 1
                },
                "Data_Transform": {
                    ".groupby(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    19,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 38,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 19,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 40,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    20,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"2f22e788-b9e7-428e-85df-e880d127c13c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"2f22e788-b9e7-428e-85df-e880d127c13c\")) {                    Plotly.newPlot(                        \"2f22e788-b9e7-428e-85df-e880d127c13c\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Braund\", \"Allen\", \"Moran\", \"McCarthy\", \"Palsson\", \"Andersson\", \"Rice\", \"Vander Planke\", \"Palsson\", \"Fortune\", \"Meyer\", \"Holverson\", \"Vander Planke\", \"Turpin\", \"Rogers\", \"Lennon\", \"Samaan\", \"Arnold-Franchi\", \"Panula\", \"Ostby\", \"Goodwin\", \"Harris\", \"Skoog\", \"Kink\", \"Goodwin\", \"Chronopoulos\", \"Carrau\", \"Ford\", \"Chaffee\", \"Dean\", \"Kantor\", \"Petroff\", \"White\", \"Johansson\", \"Gustafsson\", \"Zabour\", \"Jussila\", \"Attalah\", \"Turpin\", \"Baxter\", \"Andersson\", \"Hickman\", \"Moore\", \"Nasser\", \"White\", \"Robins\", \"Futrelle\", \"Boulos\", \"Andrew\", \"Ford\", \"Navratil\", \"van Billiard\", \"Olsen\", \"Williams\", \"Sage\", \"Cribb\", \"Calic\", \"Panula\", \"Skoog\", \"Rice\", \"Smith\", \"Klasen\", \"Lefebre\", \"Sage\", \"Asplund\", \"Bourke\", \"Olsen\", \"Sage\", \"Strom\", \"Backstrom\", \"Ali\", \"Kiernan\", \"Jacobsohn\", \"Harris\", \"Lefebre\", \"Larsson\", \"Hold\", \"Zabour\", \"Attalah\", \"Minahan\", \"Carter\", \"Strom\", \"Lobb\", \"Rosblom\", \"Smith\", \"Taussig\", \"Panula\", \"Rice\", \"Olsson\", \"Smith\", \"Allison\", \"Johnson\", \"Williams\", \"Abelson\", \"Lahtinen\", \"Hart\", \"Dennis\", \"Sage\", \"Graham\", \"Vander Planke\", \"Pears\", \"Fox\", \"Elias\", \"Arnold-Franchi\", \"Skoog\", \"del Carlo\", \"Barbara\", \"O'Brien\", \"Wiklund\", \"Palsson\", \"Widener\", \"Betros\", \"Gustafsson\", \"Davies\", \"Goodwin\", \"Gustafsson\", \"Johansson\", \"Olsson\", \"Jussila\", \"Hakkarainen\", \"Oreskovic\", \"Gale\", \"Lefebre\", \"Hart\", \"Van Impe\", \"Danbom\", \"Rosblom\", \"Flynn\", \"Silvey\", \"Ford\", \"Fortune\", \"West\", \"Hagland\", \"O'Connor\", \"Morley\", \"Cacic\", \"Renouf\", \"Braund\", \"Karlsson\", \"Goodwin\", \"Lefebre\", \"Hagland\", \"Stanley\", \"Allison\", \"Svensson\", \"Calic\", \"Canavan\", \"Penasco y Castellana\", \"Olsen\", \"Webber\", \"Coleff\", \"Ryan\", \"Hocking\", \"Elias\", \"Cacic\", \"Risien\", \"Andersson\", \"Andersson\", \"Douglas\", \"Goldsmith\", \"O'Brien\", \"Wright\", \"Davies\", \"Palsson\", \"Caram\", \"Bourke\", \"Chapman\", \"Van Impe\", \"Johnson\", \"Boulos\", \"Lindell\", \"Andersson\", \"Danbom\", \"Lobb\", \"Yasbeck\", \"Hansen\", \"Bowen\", \"Skoog\", \"Collyer\", \"Panula\", \"Thorneycroft\", \"Jensen\", \"Skoog\", \"Cor\", \"Hickman\", \"Bourke\", \"Newell\", \"Coleff\", \"Hickman\", \"Cook\", \"Davidson\", \"Goodwin\", \"Goodwin\", \"Brown\", \"Laroche\", \"Panula\", \"Saad\", \"Chapman\", \"Kelly\", \"Thayer\", \"Barbara\", \"Hansen\", \"Morley\", \"Larsson\", \"Johnson\", \"Jensen\", \"Oreskovic\", \"Bryhl\", \"Ilmakangas\", \"Williams\", \"Ford\", \"Cavendish\", \"McNamee\", \"Crosby\", \"Abbott\", \"Marvin\", \"Carlsson\", \"Moran\", \"Jensen\", \"Elias\", \"Johnston\", \"Ali\", \"Rice\", \"Keane\", \"Sage\", \"Hoyt\", \"Van Impe\", \"Johansson\", \"Andrews\", \"Meyer\", \"Andersson\", \"Mallet\", \"Skoog\", \"Panula\", \"Flynn\", \"Lam\", \"Saad\", \"Sage\", \"Harper\", \"Andersson\", \"Svensson\", \"Boulos\", \"Carter\", \"Hansen\", \"Giles\", \"Sage\", \"Carlsson\", \"Gustafsson\", \"Petroff\", \"Rice\", \"Johnston\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Cumings\", \"Futrelle\", \"Johnson\", \"Nasser\", \"Sandstrom\", \"Bonnell\", \"Williams\", \"McGowan\", \"Asplund\", \"Spencer\", \"Nicola-Yarred\", \"Laroche\", \"Harper\", \"Faunthorpe\", \"West\", \"Moubarek\", \"Andersson\", \"Caldwell\", \"Backstrom\", \"Fortune\", \"Greenfield\", \"Doling\", \"Moran\", \"Webber\", \"Nicola-Yarred\", \"Peter\", \"Weisz\", \"Hakkarainen\", \"Andersson\", \"Pears\", \"Watt\", \"Goldsmith\", \"Johnson\", \"Becker\", \"Kink-Heilmann\", \"O'Brien\", \"Navratil\", \"Brown\", \"Carr\", \"Newell\", \"Hoyt\", \"Harris\", \"Asplund\", \"Collyer\", \"Murphy\", \"Hamalainen\", \"Beckwith\", \"Touma\", \"Asplund\", \"Graham\", \"Mellinger\", \"Andrews\", \"Abbott\", \"Connolly\", \"Bishop\", \"Baxter\", \"Kelly\", \"McCoy\", \"Keane\", \"Allison\", \"Fleming\", \"Penasco y Castellana\", \"Hays\", \"Ryerson\", \"Nilsson\", \"Kantor\", \"Wick\", \"Spedden\", \"Caldwell\", \"Goldsmith\", \"Hippach\", \"McCoy\", \"Frauenthal\", \"Burns\", \"Navratil\", \"Fortune\", \"Brown\", \"Smith\", \"Davison\", \"Coutts\", \"Warren\", \"Harder\", \"Meyer\", \"Nakid\", \"Holverson\", \"Carter\", \"Newell\", \"Sandstrom\", \"Richards\", \"Minahan\", \"Drew\", \"Clarke\", \"Phillips\", \"Thorneycroft\", \"Louch\", \"Carter\", \"Richards\", \"Hart\", \"Dodge\", \"Mellinger\", \"Baclini\", \"Goldenberg\", \"Kenyon\", \"Baclini\", \"West\", \"Hirvonen\", \"Bishop\", \"Hoyt\", \"Coutts\", \"Quick\", \"Bradley\", \"Daly\", \"Rothschild\", \"Angle\", \"Hippach\", \"Quick\", \"Peter\", \"Hart\", \"Crosby\", \"Beane\", \"Beane\", \"Davies\", \"Thayer\", \"Duff Gordon\", \"Taussig\", \"de Messemaeker\", \"Jonsson\", \"Harris\", \"Flynn\", \"Kelly\", \"Silvey\", \"Jussila\", \"Christy\", \"Thayer\", \"Taussig\", \"Frolicher-Stehli\", \"Duff Gordon\", \"Jacobsohn\", \"Laroche\", \"Murphy\", \"Herman\", \"Becker\", \"Kimball\", \"Nakid\", \"Baclini\", \"Harper\", \"Stanley\", \"Doling\", \"Frauenthal\", \"Taylor\", \"Brown\", \"Cardeza\", \"Dick\", \"Karun\", \"Lam\", \"Astor\", \"Kelly\", \"Moubarek\", \"Taylor\", \"Harper\", \"Chambers\", \"Renouf\", \"Allen\", \"Ryerson\", \"Wells\", \"Moor\", \"Herman\", \"Hamalainen\", \"Carter\", \"Hocking\", \"Dick\", \"Dean\", \"Collyer\", \"Carter\", \"Thomas\", \"Chambers\", \"Hays\", \"Moor\", \"Mallet\", \"Yasbeck\", \"Richards\", \"Compton\", \"Goldenberg\", \"Lines\", \"Aks\", \"Wick\", \"Daly\", \"Baclini\", \"Duran y More\", \"Johnson\", \"Beckwith\", \"Abelson\", \"Graham\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Kelly\", \"Hirvonen\", \"Svensson\", \"Connolly\", \"Caldwell\", \"Davies\", \"Snyder\", \"Howard\", \"Chaffee\", \"del Carlo\", \"Keane\", \"Ilmakangas\", \"Rothschild\", \"Olsen\", \"Williams\", \"Ryerson\", \"Robins\", \"Ostby\", \"Samaan\", \"Louch\", \"Jefferys\", \"Dean\", \"Johnston\", \"Cacic\", \"Karun\", \"Franklin\", \"Goldsmith\", \"Kimball\", \"Coutts\", \"Smith\", \"Hocking\", \"Fortune\", \"Rice\", \"Cor\", \"Abelseth\", \"Davison\", \"Bradley\", \"Ryerson\", \"Burns\", \"Moore\", \"Fortune\", \"Boulos\", \"Straus\", \"Khalil\", \"Wells\", \"Dyker\", \"Davidson\", \"Cavendish\", \"Stengel\", \"Weisz\", \"Foley\", \"Thomas\", \"Buckley\", \"Ryan\", \"Buckley\", \"Straus\", \"Chronopoulos\", \"Thomas\", \"Sandstrom\", \"Chapman\", \"Watt\", \"Kiernan\", \"Cribb\", \"McCoy\", \"Lefebre\", \"Thomas\", \"Carlsson\", \"Zakarian\", \"Goodwin\", \"Goodwin\", \"Ryerson\", \"Vander Planke\", \"Davies\", \"Lahtinen\", \"Klasen\", \"Asplund\", \"Peacock\", \"Touma\", \"Wright\", \"Kink-Heilmann\", \"Ford\", \"Zakarian\", \"Dyker\", \"Asplund\", \"Brown\", \"Stengel\", \"Becker\", \"Compton\", \"Compton\", \"Marvin\", \"Douglas\", \"Phillips\", \"Davies\", \"Sage\", \"Angle\", \"van Billiard\", \"Drew\", \"Karlsson\", \"Spedden\", \"Nilsson\", \"Murphy\", \"Danbom\", \"Astor\", \"Quick\", \"Andrew\", \"McGowan\", \"Howard\", \"Andersson\", \"Mahon\", \"Wick\", \"Widener\", \"Duran y More\", \"Cook\", \"Karlsson\", \"Moubarek\", \"Asplund\", \"Hocking\", \"Wiklund\", \"Cumings\", \"Warren\", \"Douglas\", \"Christy\", \"Spedden\", \"Johnston\", \"Kenyon\", \"Drew\", \"Hold\", \"Khalil\", \"West\", \"Clark\", \"Mahon\", \"de Messemaeker\", \"Nilsson\", \"Wells\", \"Klasen\", \"Warren\", \"Howard\", \"Pokrnic\", \"Fox\", \"Clark\", \"Lennon\", \"Bryhl\", \"Faunthorpe\", \"Ware\", \"Oreskovic\", \"Peacock\", \"Fleming\", \"Touma\", \"Rosblom\", \"Dennis\", \"Franklin\", \"Snyder\", \"Ford\", \"Daly\", \"Dodge\", \"Laroche\", \"Samaan\", \"Johansson\", \"Olsson\", \"Phillips\", \"Pokrnic\", \"McCarthy\", \"Crosby\", \"Allison\", \"Aks\", \"Hays\", \"Hansen\", \"Cacic\", \"Carr\", \"White\", \"Spencer\", \"Rogers\", \"Jonsson\", \"Jefferys\", \"Andersson\", \"Becker\", \"Clarke\", \"Davies\", \"Thomas\", \"Nakid\", \"Cor\", \"Elias\", \"Betros\", \"Sage\", \"Cardeza\", \"van Billiard\", \"Abelseth\", \"Giles\", \"Greenfield\", \"Herman\", \"Dean\", \"Brown\", \"Lindell\", \"Sage\", \"Mallet\", \"Ware\", \"Harder\", \"Sage\", \"Caram\", \"Gibson\", \"Giles\", \"Dodge\", \"Bowen\", \"Kink\", \"Asplund\", \"O'Connor\", \"Foley\", \"Risien\", \"McNamee\", \"Herman\", \"Canavan\", \"Palsson\", \"Lines\", \"Abbott\", \"Kink-Heilmann\", \"Smith\", \"Frolicher-Stehli\", \"Bonnell\", \"Gale\", \"Gibson\", \"Carrau\", \"Frauenthal\", \"Ware\", \"Widener\", \"Peacock\", \"Minahan\", \"Ware\", \"Peter\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Surname\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('2f22e788-b9e7-428e-85df-e880d127c13c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 40,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 20,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Namesakes\"] = 1\ndf.loc[df[\"Surname\"]==\"Other\",\"Namesakes\"] = 0",
            "mc_idx": 42,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    21,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 42,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 21,
                "o_idx": 0
            }
        },
        {
            "source": "not_imp_s = [\"Braund\",\"Allen\",\"Moran\",\"Meyer\",\"Holverson\",\"Turpin\",\"Arnold-Franchi\",\"Panula\",\"Harris\",\"Skoog\",\"Kantor\",\"Petroff\",\"Gustafsson\",\"Zabour\",\n             \"Jussila\",\"Attalah\",\"Baxter\",\"Hickman\",\"Nasser\",\"Futrelle\",\"Navratil\",\"Calic\",\"Bourke\",\"Strom\",\"Backstrom\",\"Ali\",\"Jacobsohn\",\"Larsson\",\n             \"Carter\",\"Lobb\",\"Taussig\",\"Johnson\",\"Abelson\",\"Hart\",\"Graham\",\"Pears\",\"Barbara\",\"O'Brien\",\"Hakkarainen\",\"Van Impe\",\"Flynn\",\"Silvey\",\"Hagland\",\n             \"Morley\",\"Renouf\",\"Stanley\",\"Penasco y Castellana\",\"Webber\",\"Coleff\",\"Yasbeck\",\"Collyer\",\"Thorneycroft\",\"Jensen\",\"Newell\",\"Saad\",\"Thayer\",\"Hoyt\",\n             \"Andrews\",\"Lam\",\"Harper\",\"Nicola-Yarred\",\"Doling\",\"Hamalainen\",\"Beckwith\",\"Mellinger\",\"Bishop\",\"Hippach\",\"Richards\",\"Baclini\",\"Goldenberg\",\n             \"Beane\",\"Duff Gordon\",\"Tylor\",\"Dick\",\"Chambers\",\"Moor\",\"Snyder\", \"Howard\", \"Jefferys\", \"Franklin\",\"Abelseth\",\"Straus\",\"Khalil\",\"Dyker\",\"Stengel\",\n             \"Foley\",\"Buckley\",\"Zakarian\",\"Peacock\",\"Mahon\",\"Clark\",\"Pokrnic\",\"Ware\",\"Gibson\",\"Taylor\"]\ndf = df.replace(not_imp_s,'Other')",
            "mc_idx": 43,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    22,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 43,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 22,
                "o_idx": 0
            }
        },
        {
            "source": "df[(df[\"Surname\"]==\"Other\") & (df[\"Namesakes\"]==True)].head(10).style.background_gradient(cmap=\"Blues\")",
            "mc_idx": 44,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    23,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7f5589231f10>"
                    ]
                },
                "mc_idx": 44,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 23,
                "o_idx": 0
            }
        },
        {
            "source": "s = df[df[\"Namesakes\"]==0]\nprint(f'Have no Namesakes \\t {len(s[s[\"Survived\"]==1])/len(s)}')\ns = df[df[\"Namesakes\"]==1]\nprint(f'Have Namesakes \\t\\t {len(s[s[\"Survived\"]==1])/len(s)}')",
            "mc_idx": 45,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    24,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Have no Namesakes \t 0.23390894819466249\nHave Namesakes \t\t 0.28720238095238093\n"
                    ]
                },
                "mc_idx": 45,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 24,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\ndfplt = dfplt[dfplt[\"Surname\"]!=\"Other\"]\nfig = px.histogram(dfplt, x=\"Surname\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 46,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    25,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"ff6a16a5-ff38-4522-afbb-97ea5fe87b19\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ff6a16a5-ff38-4522-afbb-97ea5fe87b19\")) {                    Plotly.newPlot(                        \"ff6a16a5-ff38-4522-afbb-97ea5fe87b19\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Cumings\", \"Sandstrom\", \"Bonnell\", \"Williams\", \"McGowan\", \"Asplund\", \"Spencer\", \"Laroche\", \"Faunthorpe\", \"West\", \"Moubarek\", \"Andersson\", \"Caldwell\", \"Fortune\", \"Greenfield\", \"Peter\", \"Weisz\", \"Andersson\", \"Watt\", \"Goldsmith\", \"Becker\", \"Kink-Heilmann\", \"Brown\", \"Carr\", \"Asplund\", \"Murphy\", \"Touma\", \"Asplund\", \"Abbott\", \"Connolly\", \"Kelly\", \"McCoy\", \"Keane\", \"Allison\", \"Fleming\", \"Hays\", \"Ryerson\", \"Nilsson\", \"Wick\", \"Spedden\", \"Caldwell\", \"Goldsmith\", \"McCoy\", \"Frauenthal\", \"Burns\", \"Fortune\", \"Brown\", \"Smith\", \"Davison\", \"Coutts\", \"Warren\", \"Harder\", \"Nakid\", \"Sandstrom\", \"Minahan\", \"Drew\", \"Clarke\", \"Phillips\", \"Louch\", \"Dodge\", \"Kenyon\", \"West\", \"Hirvonen\", \"Coutts\", \"Quick\", \"Bradley\", \"Daly\", \"Rothschild\", \"Angle\", \"Quick\", \"Peter\", \"Crosby\", \"Davies\", \"de Messemaeker\", \"Jonsson\", \"Kelly\", \"Christy\", \"Frolicher-Stehli\", \"Laroche\", \"Murphy\", \"Herman\", \"Becker\", \"Kimball\", \"Nakid\", \"Frauenthal\", \"Brown\", \"Cardeza\", \"Karun\", \"Astor\", \"Kelly\", \"Moubarek\", \"Ryerson\", \"Wells\", \"Herman\", \"Hocking\", \"Dean\", \"Thomas\", \"Hays\", \"Mallet\", \"Compton\", \"Lines\", \"Aks\", \"Wick\", \"Daly\", \"Duran y More\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"McCarthy\", \"Palsson\", \"Andersson\", \"Rice\", \"Vander Planke\", \"Palsson\", \"Fortune\", \"Vander Planke\", \"Rogers\", \"Lennon\", \"Samaan\", \"Ostby\", \"Goodwin\", \"Kink\", \"Goodwin\", \"Chronopoulos\", \"Carrau\", \"Ford\", \"Chaffee\", \"Dean\", \"White\", \"Johansson\", \"Andersson\", \"Moore\", \"White\", \"Robins\", \"Boulos\", \"Andrew\", \"Ford\", \"van Billiard\", \"Olsen\", \"Williams\", \"Sage\", \"Cribb\", \"Rice\", \"Smith\", \"Klasen\", \"Lefebre\", \"Sage\", \"Asplund\", \"Olsen\", \"Sage\", \"Kiernan\", \"Lefebre\", \"Hold\", \"Minahan\", \"Rosblom\", \"Smith\", \"Rice\", \"Olsson\", \"Smith\", \"Allison\", \"Williams\", \"Lahtinen\", \"Dennis\", \"Sage\", \"Vander Planke\", \"Fox\", \"Elias\", \"del Carlo\", \"Wiklund\", \"Palsson\", \"Widener\", \"Betros\", \"Davies\", \"Goodwin\", \"Johansson\", \"Olsson\", \"Oreskovic\", \"Gale\", \"Lefebre\", \"Danbom\", \"Rosblom\", \"Ford\", \"Fortune\", \"West\", \"O'Connor\", \"Cacic\", \"Karlsson\", \"Goodwin\", \"Lefebre\", \"Allison\", \"Svensson\", \"Canavan\", \"Olsen\", \"Ryan\", \"Hocking\", \"Elias\", \"Cacic\", \"Risien\", \"Andersson\", \"Andersson\", \"Douglas\", \"Goldsmith\", \"Wright\", \"Davies\", \"Palsson\", \"Caram\", \"Chapman\", \"Boulos\", \"Lindell\", \"Andersson\", \"Danbom\", \"Hansen\", \"Bowen\", \"Cor\", \"Cook\", \"Davidson\", \"Goodwin\", \"Goodwin\", \"Brown\", \"Laroche\", \"Chapman\", \"Kelly\", \"Hansen\", \"Oreskovic\", \"Bryhl\", \"Ilmakangas\", \"Williams\", \"Ford\", \"Cavendish\", \"McNamee\", \"Crosby\", \"Abbott\", \"Marvin\", \"Carlsson\", \"Elias\", \"Johnston\", \"Rice\", \"Keane\", \"Sage\", \"Johansson\", \"Andersson\", \"Mallet\", \"Sage\", \"Andersson\", \"Svensson\", \"Boulos\", \"Hansen\", \"Giles\", \"Sage\", \"Carlsson\", \"Rice\", \"Johnston\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Surname=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Kelly\", \"Hirvonen\", \"Svensson\", \"Connolly\", \"Caldwell\", \"Davies\", \"Chaffee\", \"del Carlo\", \"Keane\", \"Ilmakangas\", \"Rothschild\", \"Olsen\", \"Williams\", \"Ryerson\", \"Robins\", \"Ostby\", \"Samaan\", \"Louch\", \"Dean\", \"Johnston\", \"Cacic\", \"Karun\", \"Goldsmith\", \"Kimball\", \"Coutts\", \"Smith\", \"Hocking\", \"Fortune\", \"Rice\", \"Cor\", \"Davison\", \"Bradley\", \"Ryerson\", \"Burns\", \"Moore\", \"Fortune\", \"Boulos\", \"Wells\", \"Davidson\", \"Cavendish\", \"Weisz\", \"Thomas\", \"Ryan\", \"Chronopoulos\", \"Thomas\", \"Sandstrom\", \"Chapman\", \"Watt\", \"Kiernan\", \"Cribb\", \"McCoy\", \"Lefebre\", \"Thomas\", \"Carlsson\", \"Goodwin\", \"Goodwin\", \"Ryerson\", \"Vander Planke\", \"Davies\", \"Lahtinen\", \"Klasen\", \"Asplund\", \"Touma\", \"Wright\", \"Kink-Heilmann\", \"Ford\", \"Asplund\", \"Brown\", \"Becker\", \"Compton\", \"Compton\", \"Marvin\", \"Douglas\", \"Phillips\", \"Davies\", \"Sage\", \"Angle\", \"van Billiard\", \"Drew\", \"Karlsson\", \"Spedden\", \"Nilsson\", \"Murphy\", \"Danbom\", \"Astor\", \"Quick\", \"Andrew\", \"McGowan\", \"Andersson\", \"Wick\", \"Widener\", \"Duran y More\", \"Cook\", \"Karlsson\", \"Moubarek\", \"Asplund\", \"Hocking\", \"Wiklund\", \"Cumings\", \"Warren\", \"Douglas\", \"Christy\", \"Spedden\", \"Johnston\", \"Kenyon\", \"Drew\", \"Hold\", \"West\", \"de Messemaeker\", \"Nilsson\", \"Wells\", \"Klasen\", \"Warren\", \"Fox\", \"Lennon\", \"Bryhl\", \"Faunthorpe\", \"Oreskovic\", \"Fleming\", \"Touma\", \"Rosblom\", \"Dennis\", \"Ford\", \"Daly\", \"Dodge\", \"Laroche\", \"Samaan\", \"Johansson\", \"Olsson\", \"Phillips\", \"McCarthy\", \"Crosby\", \"Allison\", \"Aks\", \"Hays\", \"Hansen\", \"Cacic\", \"Carr\", \"White\", \"Spencer\", \"Rogers\", \"Jonsson\", \"Andersson\", \"Becker\", \"Clarke\", \"Davies\", \"Thomas\", \"Nakid\", \"Cor\", \"Elias\", \"Betros\", \"Sage\", \"Cardeza\", \"van Billiard\", \"Giles\", \"Greenfield\", \"Herman\", \"Dean\", \"Brown\", \"Lindell\", \"Sage\", \"Mallet\", \"Harder\", \"Sage\", \"Caram\", \"Giles\", \"Dodge\", \"Bowen\", \"Kink\", \"Asplund\", \"O'Connor\", \"Risien\", \"McNamee\", \"Herman\", \"Canavan\", \"Palsson\", \"Lines\", \"Abbott\", \"Kink-Heilmann\", \"Smith\", \"Frolicher-Stehli\", \"Bonnell\", \"Gale\", \"Carrau\", \"Frauenthal\", \"Widener\", \"Minahan\", \"Peter\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Surname\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ff6a16a5-ff38-4522-afbb-97ea5fe87b19');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 46,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 25,
                "o_idx": 0
            }
        },
        {
            "source": "drop = [\"Abbott\",\"Keane\",\"Minahan\",\"Crosby\",\"Hocking\",\"Dean\",\"Mallet\",\"\"]\ndf = df.replace(drop,'Other')",
            "mc_idx": 48,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    26,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 48,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 26,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Title\"] = pd.DataFrame(df[\"Name\"].str.strip().str.split(\".\").tolist()).set_index(df.index).iloc[:,0]\ndf[\"Title\"] = df[\"Title\"].fillna(\"Others\")",
            "mc_idx": 50,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".fillna(": 1,
                    ".split": 1,
                    ".fillna": 1,
                    ".set_index": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    27,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 50,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 27,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 51,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    28,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"e5941ec9-3af4-4a7d-83da-c3a068ad4125\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e5941ec9-3af4-4a7d-83da-c3a068ad4125\")) {                    Plotly.newPlot(                        \"e5941ec9-3af4-4a7d-83da-c3a068ad4125\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Don\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Rev\", \"Rev\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Dr\", \"Miss\", \"Rev\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Dr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Dr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Major\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Rev\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Col\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Capt\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Dr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Jonkheer\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Rev\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Rev\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Master\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mme\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Ms\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Major\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Lady\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Sir\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Dr\", \"Miss\", \"Mlle\", \"Mr\", \"Miss\", \"Mr\", \"Col\", \"Miss\", \"Miss\", \"Miss\", \"Dr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Mlle\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Master\", \"the Countess\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Master\", \"Dr\", \"Mrs\", \"Mrs\", \"Master\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Ms\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Col\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Rev\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mr\", \"Rev\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Col\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Dr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Dona\", \"Mr\", \"Mr\", \"Master\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Title\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('e5941ec9-3af4-4a7d-83da-c3a068ad4125');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 51,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 28,
                "o_idx": 0
            }
        },
        {
            "source": "rename = {\"Miss\":\"Ms\",\n          \"Mrs\": \"Mme\",\n          \"Others\": [\"Don\",\"Rev\",\"Dr\",\"Lady\",\"Sir\",\"Mlle\",\"Col\",\"the Countess\",\"Mme\",\"Major\",\"Capt\",\"Jonkheer\",\"Dona\"]}\nfor k in rename:\n    df[\"Title\"] = df[\"Title\"].replace(rename[k],k)",
            "mc_idx": 52,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".replace(": 1,
                    ".replace": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    29,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 52,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 29,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.histogram(dfplt, x=\"Title\",color=\"Survived\",color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 54,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".histogram(": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    30,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e\")) {                    Plotly.newPlot(                        \"158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e\",                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=0.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\"}, \"name\": \"0.0\", \"offsetgroup\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Miss\", \"Others\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Others\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Others\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Others\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=1.0<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\"}, \"name\": \"1.0\", \"offsetgroup\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Master\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Miss\", \"Others\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Miss\", \"Others\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Miss\", \"Others\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Miss\", \"Miss\", \"Miss\", \"Others\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Others\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Master\", \"Others\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Miss\", \"Master\", \"Others\", \"Mrs\", \"Mrs\", \"Master\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mrs\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mrs\", \"Miss\", \"Master\", \"Mrs\", \"Mrs\", \"Miss\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hovertemplate\": \"Survived=nan<br>Title=%{x}<br>count=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\"}, \"name\": \"nan\", \"offsetgroup\": \"nan\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"histogram\", \"x\": [\"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Master\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Miss\", \"Mr\", \"Others\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Mr\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Miss\", \"Master\", \"Others\", \"Miss\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mrs\", \"Mrs\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Master\", \"Miss\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Mrs\", \"Master\", \"Mrs\", \"Mrs\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mrs\", \"Miss\", \"Miss\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mrs\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Master\", \"Mr\", \"Mrs\", \"Master\", \"Mr\", \"Mr\", \"Mrs\", \"Mr\", \"Mrs\", \"Mr\", \"Mr\", \"Miss\", \"Mr\", \"Miss\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Mr\", \"Miss\", \"Miss\", \"Miss\", \"Mrs\", \"Miss\", \"Mr\", \"Others\", \"Mr\", \"Mr\", \"Master\"], \"xaxis\": \"x\", \"yaxis\": \"y\"}],                        {\"barmode\": \"relative\", \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Title\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('158ab94d-e2f9-4db2-b78a-f5a8d9fc7f8e');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 54,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 30,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt = dfplt[~dfplt[\"Survived\"].isna()]\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Parch\", color = \"Survived\", size_max=6\n                 ,color_discrete_sequence=cm,width=1200, height=500)\nfig.show()",
            "mc_idx": 56,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.3333333333333333,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.3333333333333333,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.3333333333333333,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1,
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    31,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5\")) {                    Plotly.newPlot(                        \"c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5\",                        [{\"hovertemplate\": \"Survived=0.0<br>Age=%{x}<br>Parch=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [22.0, 35.0, null, 54.0, 2.0, 20.0, 39.0, 14.0, 2.0, 31.0, 35.0, 8.0, null, 19.0, null, 40.0, 66.0, 28.0, 42.0, 21.0, 18.0, 40.0, 27.0, null, null, null, null, 18.0, 7.0, 21.0, 65.0, 28.5, 11.0, 22.0, 45.0, 4.0, null, 19.0, 26.0, 32.0, 16.0, 21.0, 26.0, 25.0, null, null, 22.0, 28.0, 16.0, null, 24.0, 29.0, 20.0, 46.0, 26.0, 59.0, null, 71.0, 34.0, 28.0, null, 21.0, 33.0, 37.0, 28.0, 38.0, 47.0, 14.5, 22.0, 20.0, 17.0, 21.0, 70.5, 29.0, 24.0, 2.0, 21.0, null, 32.5, 54.0, null, 45.0, 33.0, 20.0, 47.0, 25.0, 23.0, 37.0, 16.0, 24.0, null, 19.0, 18.0, 19.0, 9.0, 36.5, 42.0, 51.0, 55.5, 40.5, null, 51.0, 30.0, null, null, 44.0, 26.0, 17.0, 1.0, 45.0, null, 28.0, 61.0, 4.0, 21.0, 56.0, 18.0, null, 50.0, 30.0, 36.0, null, null, 9.0, null, 40.0, 36.0, 19.0, null, 42.0, 24.0, 28.0, null, 34.0, 45.5, 2.0, 32.0, 24.0, 22.0, 30.0, null, 42.0, 30.0, 27.0, 51.0, null, 22.0, 20.5, 18.0, null, 29.0, 59.0, 24.0, null, 44.0, 19.0, 33.0, null, 29.0, 22.0, 30.0, 44.0, 25.0, 54.0, null, 29.0, 62.0, 30.0, 41.0, null, 52.0, 40.0, null, 36.0, 16.0, null, 37.0, 45.0, null, 7.0, 65.0, 28.0, 16.0, null, 33.0, 22.0, 36.0, 24.0, 24.0, null, 23.5, 2.0, 19.0, null, 30.0, 26.0, 28.0, 43.0, 54.0, 22.0, 27.0, null, 61.0, 45.5, 38.0, 16.0, null, 29.0, 45.0, 28.0, 25.0, 36.0, 42.0, 23.0, null, 15.0, 25.0, null, 28.0, 38.0, 40.0, 29.0, 45.0, 35.0, null, 30.0, 18.0, 19.0, 22.0, 3.0, 27.0, 20.0, 19.0, 32.0, null, 18.0, 1.0, null, 28.0, 22.0, 31.0, 46.0, 23.0, 26.0, 21.0, 28.0, 20.0, 34.0, 51.0, 21.0, null, null, null, null, null, 30.0, 10.0, null, 21.0, 29.0, 28.0, 18.0, null, null, 17.0, 50.0, 21.0, 64.0, 31.0, 20.0, 25.0, 36.0, null, 30.0, null, 65.0, null, 34.0, 47.0, 48.0, null, 38.0, null, 56.0, null, null, 38.0, 22.0, null, 34.0, 29.0, 22.0, 9.0, null, 50.0, null, 58.0, 30.0, null, 21.0, 55.0, 71.0, 21.0, null, null, 25.0, 24.0, 17.0, 21.0, null, 37.0, 18.0, 28.0, null, 24.0, 47.0, null, 32.0, 22.0, null, null, 40.5, null, 39.0, 23.0, null, 17.0, 30.0, 45.0, null, 9.0, 11.0, 50.0, 64.0, 33.0, 27.0, null, 62.0, null, null, 40.0, 28.0, null, null, 24.0, 19.0, 29.0, null, 16.0, 19.0, null, 54.0, 36.0, null, 47.0, 22.0, null, 35.0, 47.0, null, 37.0, 36.0, 49.0, null, null, null, 44.0, 36.0, 30.0, 39.0, null, null, 35.0, 34.0, 26.0, 26.0, 27.0, 21.0, 21.0, 61.0, 57.0, 26.0, null, 51.0, null, 9.0, 32.0, 31.0, 41.0, null, 20.0, 2.0, 19.0, null, null, 21.0, 18.0, 24.0, null, 32.0, 23.0, 58.0, 40.0, 47.0, 36.0, 32.0, 25.0, null, 43.0, 31.0, 70.0, null, 18.0, 24.5, 43.0, null, 20.0, 14.0, 60.0, 25.0, 14.0, 19.0, 18.0, 25.0, 60.0, 52.0, 44.0, 49.0, 42.0, 18.0, 25.0, 26.0, 39.0, null, 29.0, 52.0, 19.0, null, 33.0, 17.0, 34.0, 50.0, 20.0, 25.0, 25.0, 11.0, null, 23.0, 23.0, 28.5, 48.0, null, null, 36.0, 24.0, 70.0, 16.0, 19.0, 31.0, 33.0, 23.0, 28.0, 18.0, 34.0, null, 41.0, 16.0, null, 30.5, null, 32.0, 24.0, 48.0, 57.0, null, 18.0, null, null, 29.0, null, 25.0, 25.0, 8.0, 46.0, null, 16.0, null, null, 25.0, 39.0, 30.0, 30.0, 34.0, 31.0, 39.0, 18.0, 39.0, 26.0, 39.0, 35.0, 6.0, 30.5, null, 23.0, 31.0, 43.0, 10.0, 38.0, 2.0, null, null, null, 23.0, 18.0, 21.0, null, 20.0, 16.0, 34.5, 17.0, 42.0, null, 35.0, 28.0, 4.0, 74.0, 9.0, 44.0, null, 41.0, 21.0, null, 24.0, 31.0, null, 26.0, 33.0, 47.0, 20.0, 19.0, null, 33.0, 22.0, 28.0, 25.0, 39.0, 27.0, null, 32.0], \"xaxis\": \"x\", \"y\": [0, 0, 0, 0, 1, 0, 5, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 2, 2, 0, 0, 0, 2, 0, 1, 0, 0, 2, 1, 0, 0, 1, 4, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 2, 0, 2, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 2, 0], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Age=%{x}<br>Parch=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"orientation\": \"v\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [38.0, 26.0, 35.0, 27.0, 14.0, 4.0, 58.0, 55.0, null, null, 34.0, 15.0, 28.0, 38.0, null, null, null, null, 14.0, 3.0, 19.0, null, 49.0, 29.0, null, 21.0, 5.0, 38.0, null, 29.0, 17.0, 32.0, 0.83, 30.0, 29.0, null, 17.0, 33.0, 23.0, 23.0, 34.0, 21.0, null, null, 32.5, 12.0, 24.0, null, 29.0, 19.0, 22.0, 24.0, 27.0, 22.0, 16.0, 40.0, 9.0, null, 1.0, 1.0, 4.0, null, 45.0, 32.0, 19.0, 3.0, 44.0, 58.0, null, 18.0, 26.0, 16.0, 40.0, 35.0, 31.0, 27.0, 32.0, 16.0, 38.0, 19.0, 35.0, 5.0, 8.0, null, 24.0, 37.0, 29.0, null, 30.0, 35.0, 50.0, 3.0, 25.0, 58.0, 35.0, 25.0, 41.0, null, 63.0, 35.0, 19.0, 30.0, 42.0, 22.0, 26.0, 19.0, null, 50.0, null, null, null, 0.92, null, 17.0, 30.0, 24.0, 18.0, 26.0, 24.0, 31.0, 40.0, 30.0, 22.0, 36.0, 36.0, 31.0, 16.0, null, null, 41.0, 45.0, 2.0, 24.0, 24.0, 40.0, null, 3.0, 22.0, null, null, 60.0, null, null, 24.0, 25.0, null, 22.0, 42.0, 1.0, 35.0, 36.0, 17.0, 36.0, 21.0, 23.0, 24.0, 28.0, 39.0, 3.0, 33.0, 44.0, 34.0, 18.0, 28.0, 19.0, 32.0, 28.0, null, 42.0, 14.0, 24.0, 45.0, 28.0, null, 4.0, 13.0, 34.0, 5.0, 52.0, 49.0, 29.0, null, 50.0, 48.0, 0.75, 33.0, 23.0, 2.0, 63.0, 25.0, 35.0, 9.0, 54.0, 16.0, 33.0, null, 26.0, 29.0, 36.0, 54.0, 34.0, 36.0, 30.0, 44.0, 50.0, 2.0, null, 7.0, 30.0, 22.0, 36.0, 32.0, 19.0, null, 8.0, 17.0, 22.0, 22.0, 48.0, 39.0, 36.0, 32.0, 62.0, 53.0, 36.0, null, 34.0, 39.0, 32.0, 25.0, 39.0, 18.0, 60.0, 52.0, null, 49.0, 24.0, 35.0, 27.0, 22.0, 40.0, null, 24.0, 4.0, 42.0, 20.0, 21.0, 80.0, 32.0, 28.0, 24.0, null, 0.75, 48.0, 56.0, 23.0, 18.0, null, 50.0, 20.0, null, 40.0, 31.0, 18.0, 36.0, 27.0, 15.0, 31.0, 4.0, null, null, 18.0, 35.0, 45.0, 42.0, 22.0, null, 24.0, 48.0, 38.0, 27.0, 6.0, 27.0, 30.0, null, 29.0, 35.0, null, 21.0, 31.0, 30.0, 4.0, 6.0, 48.0, 0.67, 33.0, 20.0, 36.0, 51.0, 54.0, 5.0, 43.0, 13.0, 17.0, 18.0, 1.0, 49.0, 31.0, 31.0, 11.0, 0.42, 27.0, 33.0, 52.0, 27.0, 27.0, 1.0, null, 62.0, 15.0, 0.83, 39.0, 32.0, null, 30.0, null, 16.0, 18.0, 45.0, 51.0, 24.0, 48.0, 42.0, 27.0, 4.0, 47.0, 28.0, 15.0, 56.0, 25.0, 19.0, 26.0], \"xaxis\": \"x\", \"y\": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 0, 0, 1, 2, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 2, 3, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 0, 2, 2, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 2, 1, 0, 0, 2, 0, 3, 0, 1, 0, 0, 0, 2, 0, 0, 1, 2, 1, 0, 0, 1, 0, 1, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Age\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Parch\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('c7e883ad-c4ec-41f5-a07e-6dd10aff9cd5');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 56,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 31,
                "o_idx": 0
            }
        },
        {
            "source": "df[(df[\"Age\"]==5) & (df[\"Parch\"]==0)]\n# 5 y.o child traveling by hereself?",
            "mc_idx": 57,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    "ravel": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    32,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Survived  Pclass                   Name     Sex  Age  SibSp  Parch  Ticket    Fare  Cabin Embarked Deck  Side Ticket_p Surname  Namesakes Title\nPassengerId                                                                                                                                                 \n778               1.0       3   Miss. Virginia Ethel  female  5.0      0      0  364516  12.475     -1        S  N/A   0.0      N/A   Other          0  Miss"
                    ]
                },
                "mc_idx": 57,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 32,
                "o_idx": 0
            }
        },
        {
            "source": "#df.loc[df[\"Name\"]==\"Emanuel, Miss. Virginia Ethel\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Dowdell, Miss. Elizabeth\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]==\"Albimona, Mr. Nassef Cassem\",\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Hassan, Mr. Houssein G N\",\"Parch\"]=1\n\n#df.loc[df[\"Name\"]=='Watt, Mrs. James (Elizabeth \"Bessie\" Inglis Milne)',\"Parch\"]=1\n#df.loc[df[\"Name\"]==\"Watt, Miss. Bertha J\",\"Parch\"]=1",
            "mc_idx": 59,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    33,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 59,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 33,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Kid\"]=0\ndf.loc[(df[\"Age\"]<18),\"Kid\"]=1\nprint(f'Kids survived koeff:\\t{len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Kid\"]==0) & (df[\"Survived\"]==1)])}')",
            "mc_idx": 61,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    34,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Kids survived koeff:\t0.8524590163934426\nOthers survived koeff:\t1.7686832740213523\n"
                    ]
                },
                "mc_idx": 61,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 34,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Old\"]=0\ndf.loc[(df[\"Age\"]>60),\"Old\"]=1\nprint(f'Elder survived koeff:\\t{len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Others survived koeff:\\t{len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Old\"]==0) & (df[\"Survived\"]==1)])}')",
            "mc_idx": 62,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    35,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Elder survived koeff:\t3.4\nOthers survived koeff:\t1.5786350148367954\n"
                    ]
                },
                "mc_idx": 62,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 35,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Alone\"] = 0\ndf.loc[(df[\"Parch\"]==0) & (df[\"SibSp\"]==0),\"Alone\"]=1\nprint(f'Alone survived koeff:\\t\\t{len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==1) & (df[\"Survived\"]==1)])}')\nprint(f'Not Alone survived koeff:\\t{len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==0)])/len(df[(df[\"Alone\"]==0) & (df[\"Survived\"]==1)])}')",
            "mc_idx": 63,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    36,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Alone survived koeff:\t\t2.294478527607362\nNot Alone survived koeff:\t0.9776536312849162\n"
                    ]
                },
                "mc_idx": 63,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 36,
                "o_idx": 0
            }
        },
        {
            "source": "msno.bar(df, figsize=(30,2), color=gradient)",
            "mc_idx": 65,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".bar(": 1,
                    "size": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".bar(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c037_o001_image_3.png",
                    37,
                    1,
                    3
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<AxesSubplot:>",
                        "<Figure size 2160x144 with 3 Axes>"
                    ]
                },
                "mc_idx": 65,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 37,
                "o_idx": 1
            }
        },
        {
            "source": "print(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==1) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==2) & (df[\"Sex\"]==\"male\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"female\")][\"Age\"].median())\nprint(df[(df[\"Pclass\"]==3) & (df[\"Sex\"]==\"male\")][\"Age\"].median())",
            "mc_idx": 67,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".median": 12
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    38,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "36.0\n42.0\n28.0\n29.5\n22.0\n25.0\n"
                    ]
                },
                "mc_idx": 67,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 38,
                "o_idx": 0
            }
        },
        {
            "source": "from itertools import *\nl1, l2 = [1,2,3], [\"female\",\"male\"]\nfor c,s in product(l1,l2):\n    msk = (df[\"Pclass\"]==c) & (df[\"Sex\"]==s)\n    df.loc[msk,\"Age\"] = df[msk][\"Age\"].fillna(df[msk][\"Age\"].median())",
            "mc_idx": 68,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Environment",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 1.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.2,
                "Data_Transform": 0.2,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    "import ": 10
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".median": 2
                },
                "Data_Transform": {
                    ".fillna(": 1,
                    ".fillna": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    39,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 68,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 39,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Age\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 69,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    40,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"4230dfd3-4148-4343-bdb2-23ab4eb1200a\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4230dfd3-4148-4343-bdb2-23ab4eb1200a\")) {                    Plotly.newPlot(                        \"4230dfd3-4148-4343-bdb2-23ab4eb1200a\",                        [{\"hovertemplate\": \"Survived=0.0<br>Age=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [22.0, 35.0, 25.0, 54.0, 2.0, 20.0, 39.0, 14.0, 2.0, 31.0, 35.0, 8.0, 25.0, 19.0, 25.0, 40.0, 66.0, 28.0, 42.0, 21.0, 18.0, 40.0, 27.0, 25.0, 25.0, 25.0, 25.0, 18.0, 7.0, 21.0, 65.0, 28.5, 11.0, 22.0, 45.0, 4.0, 42.0, 19.0, 26.0, 32.0, 16.0, 21.0, 26.0, 25.0, 25.0, 25.0, 22.0, 28.0, 16.0, 25.0, 24.0, 29.0, 20.0, 46.0, 26.0, 59.0, 25.0, 71.0, 34.0, 28.0, 25.0, 21.0, 33.0, 37.0, 28.0, 38.0, 47.0, 14.5, 22.0, 20.0, 17.0, 21.0, 70.5, 29.0, 24.0, 2.0, 21.0, 25.0, 32.5, 54.0, 25.0, 45.0, 33.0, 20.0, 47.0, 25.0, 23.0, 37.0, 16.0, 24.0, 22.0, 19.0, 18.0, 19.0, 9.0, 36.5, 42.0, 51.0, 55.5, 40.5, 25.0, 51.0, 30.0, 25.0, 25.0, 44.0, 26.0, 17.0, 1.0, 45.0, 42.0, 28.0, 61.0, 4.0, 21.0, 56.0, 18.0, 25.0, 50.0, 30.0, 36.0, 22.0, 29.5, 9.0, 42.0, 40.0, 36.0, 19.0, 25.0, 42.0, 24.0, 28.0, 25.0, 34.0, 45.5, 2.0, 32.0, 24.0, 22.0, 30.0, 25.0, 42.0, 30.0, 27.0, 51.0, 25.0, 22.0, 20.5, 18.0, 22.0, 29.0, 59.0, 24.0, 22.0, 44.0, 19.0, 33.0, 22.0, 29.0, 22.0, 30.0, 44.0, 25.0, 54.0, 25.0, 29.0, 62.0, 30.0, 41.0, 25.0, 52.0, 40.0, 22.0, 36.0, 16.0, 42.0, 37.0, 45.0, 29.5, 7.0, 65.0, 28.0, 16.0, 42.0, 33.0, 22.0, 36.0, 24.0, 24.0, 42.0, 23.5, 2.0, 19.0, 25.0, 30.0, 26.0, 28.0, 43.0, 54.0, 22.0, 27.0, 25.0, 61.0, 45.5, 38.0, 16.0, 25.0, 29.0, 45.0, 28.0, 25.0, 36.0, 42.0, 23.0, 42.0, 15.0, 25.0, 25.0, 28.0, 38.0, 40.0, 29.0, 45.0, 35.0, 25.0, 30.0, 18.0, 19.0, 22.0, 3.0, 27.0, 20.0, 19.0, 32.0, 25.0, 18.0, 1.0, 25.0, 28.0, 22.0, 31.0, 46.0, 23.0, 26.0, 21.0, 28.0, 20.0, 34.0, 51.0, 21.0, 22.0, 25.0, 25.0, 29.5, 22.0, 30.0, 10.0, 25.0, 21.0, 29.0, 28.0, 18.0, 25.0, 25.0, 17.0, 50.0, 21.0, 64.0, 31.0, 20.0, 25.0, 36.0, 25.0, 30.0, 25.0, 65.0, 25.0, 34.0, 47.0, 48.0, 25.0, 38.0, 29.5, 56.0, 25.0, 25.0, 38.0, 22.0, 42.0, 34.0, 29.0, 22.0, 9.0, 29.5, 50.0, 22.0, 58.0, 30.0, 25.0, 21.0, 55.0, 71.0, 21.0, 25.0, 25.0, 25.0, 24.0, 17.0, 21.0, 22.0, 37.0, 18.0, 28.0, 25.0, 24.0, 47.0, 25.0, 32.0, 22.0, 25.0, 25.0, 40.5, 42.0, 39.0, 23.0, 25.0, 17.0, 30.0, 45.0, 25.0, 9.0, 11.0, 50.0, 64.0, 33.0, 27.0, 25.0, 62.0, 42.0, 25.0, 40.0, 28.0, 25.0, 22.0, 24.0, 19.0, 29.0, 25.0, 16.0, 19.0, 22.0, 54.0, 36.0, 25.0, 47.0, 22.0, 25.0, 35.0, 47.0, 22.0, 37.0, 36.0, 49.0, 25.0, 25.0, 42.0, 44.0, 36.0, 30.0, 39.0, 25.0, 25.0, 35.0, 34.0, 26.0, 26.0, 27.0, 21.0, 21.0, 61.0, 57.0, 26.0, 25.0, 51.0, 42.0, 9.0, 32.0, 31.0, 41.0, 25.0, 20.0, 2.0, 19.0, 25.0, 25.0, 21.0, 18.0, 24.0, 25.0, 32.0, 23.0, 58.0, 40.0, 47.0, 36.0, 32.0, 25.0, 25.0, 43.0, 31.0, 70.0, 29.5, 18.0, 24.5, 43.0, 22.0, 20.0, 14.0, 60.0, 25.0, 14.0, 19.0, 18.0, 25.0, 60.0, 52.0, 44.0, 49.0, 42.0, 18.0, 25.0, 26.0, 39.0, 42.0, 29.0, 52.0, 19.0, 25.0, 33.0, 17.0, 34.0, 50.0, 20.0, 25.0, 25.0, 11.0, 29.5, 23.0, 23.0, 28.5, 48.0, 25.0, 25.0, 36.0, 24.0, 70.0, 16.0, 19.0, 31.0, 33.0, 23.0, 28.0, 18.0, 34.0, 25.0, 41.0, 16.0, 42.0, 30.5, 25.0, 32.0, 24.0, 48.0, 57.0, 25.0, 18.0, 25.0, 25.0, 29.0, 25.0, 25.0, 25.0, 8.0, 46.0, 25.0, 16.0, 22.0, 42.0, 25.0, 39.0, 30.0, 30.0, 34.0, 31.0, 39.0, 18.0, 39.0, 26.0, 39.0, 35.0, 6.0, 30.5, 42.0, 23.0, 31.0, 43.0, 10.0, 38.0, 2.0, 25.0, 25.0, 25.0, 23.0, 18.0, 21.0, 25.0, 20.0, 16.0, 34.5, 17.0, 42.0, 25.0, 35.0, 28.0, 4.0, 74.0, 9.0, 44.0, 25.0, 41.0, 21.0, 22.0, 24.0, 31.0, 25.0, 26.0, 33.0, 47.0, 20.0, 19.0, 25.0, 33.0, 22.0, 28.0, 25.0, 39.0, 27.0, 22.0, 32.0], \"xaxis\": \"x\", \"y\": [\" Mr. Owen Harris\", \" Mr. William Henry\", \" Mr. James\", \" Mr. Timothy J\", \" Master. Gosta Leonard\", \" Mr. William Henry\", \" Mr. Anders Johan\", \" Miss. Hulda Amanda Adolfina\", \" Master. Eugene\", \" Mrs. Julius (Emelia Maria Vandemoortele)\", \" Mr. Joseph J\", \" Miss. Torborg Danira\", \" Mr. Farred Chehab\", \" Mr. Charles Alexander\", \" Mr. Lalio\", \" Don. Manuel E\", \" Mr. Edward H\", \" Mr. Edgar Joseph\", \" Mr. Alexander Oskar\", \" Mr. Ernest Charles\", \" Miss. Augusta Maria\", \" Mrs. Johan (Johanna Persdotter Larsson)\", \" Mrs. William John Robert (Dorothy Ann Wonnacott)\", \" Mr. Theodor\", \" Mr. William John\", \" Mr. Denis\", \" Mr. Youssef\", \" Mrs. Josef (Josefine Franchi)\", \" Master. Juha Niilo\", \" Mr. Richard Cater\", \" Mr. Engelhart Cornelius\", \" Mr. Mansouer\", \" Master. William Frederick\", \" Mr. Orsen\", \" Mr. Henry Birkhardt\", \" Master. Harald\", \" Mr. Albert A\", \" Mr. Ernest James\", \" Mr. Vincenz\", \" Mr. Stephen Curnow\", \" Miss. Lillian Amy\", \" Mr. Ambrose Jr\", \" Mr. Apostolos\", \" Mr. Sigurd Hansen\", \" Mr. Ivan\", \" Mr. Rahamin Haim\", \" Mr. Achille\", \" Mr. Francisco M\", \" Mr. William Neal\", \" Mr. Selman Francis\", \" Mr. Francesco\", \" Mr. Emil\", \" Mr. Paul Edvin\", \" Mr. Herbert Fuller\", \" Mr. Bertram Frank\", \" Mr. Daniel\", \" Mr. Charles Joseph\", \" Mr. George B\", \" Mr. Sinai\", \" Miss. Matilda\", \" Mr. Pastcho (\\\"Pentcho\\\")\", \" Mr. Richard Frasar\", \" Mr. Gustaf Joel\", \" Mr. Anders Vilhelm\", \" Mr. Stoytcho\", \" Mr. Tido\", \" Mr. Walter Chamberlain\", \" Miss. Hileni\", \" Mr. David John\", \" Miss. Katriina\", \" Miss. Malake\", \" Mr. Edvard\", \" Mr. Patrick\", \" Mr. William John Robert\", \" Mr. Quigg Edmond\", \" Miss. Ellis Anna Maria\", \" Mr. Stanley George\", \" Mr. Leonard Charles\", \" Mr. Nicholas\", \" Mr. Percival Wayland\", \" Mr. Martin\", \" Mr. Johan\", \" Mr. Jozef\", \" Mr. Domingos Fernandeo\", \" Mrs. Alexander A (Grace Charity Laury)\", \" Mr. Samuel James Hayden\", \" Mr. Emile\", \" Mr. Jacques Heath\", \" Mr. Olaf Elon\", \" Mr. Victor\", \" Mrs. Joseph (Sultana)\", \" Mr. Jeremiah\", \" Mr. Edgardo Samuel\", \" Mr. Joseph Charles\", \" Miss. Robina Maggie \\\"Ruby\\\"\", \" Mr. Michel (\\\"Louis M Hoffman\\\")\", \" Rev. Thomas Roussel Davids\", \" Rev. Robert James\", \" Mr. Alfonzo\", \" Mr. Austin Blyler\", \" Mr. Ole Martin\", \" Mr. Charles Duane\", \" Mr. Harry\", \" Mr. Mile\", \" Master. Thomas Henry\", \" Mr. John Hatfield\", \" Mr. John Viktor\", \" Mr. Jovo\", \" Master. Eino Viljami\", \" Mrs. William (Anna Bernhardina Karlsson)\", \" Mr. John D\", \" Mr. Lee\", \" Mr. Wyckoff\", \" Master. Arthur\", \" Mr. Antti Wilhelm\", \" Mr. James Clinch\", \" Mr. Klas Albin\", \" Master. Henry Forbes\", \" Miss. Ann Elizabeth\", \" Mr. Reginald\", \" Mr. Lionel\", \" Miss. Constance Gladys\", \" Mr. Rene\", \" Master. Clarence Gustaf Hugo\", \" Mr. Hugh Roscoe\", \" Mr. John\", \" Mr. Stjepan\", \" Mr. William\", \" Mr. Robert\", \" Mr. Karl Siegwart Andreas\", \" Miss. Henriette (\\\"Mrs Harbeck\\\")\", \" Mr. Nestor Cyriel\", \" Mr. Frederick\", \" Mr. Jakob Alfred\", \" Mr. Gerious\", \" Miss. Telma Matilda\", \" Mr. Karl Alfred\", \" Mr. Ahmed\", \" Mr. John Henry\", \" Mr. Hans Kristensen\", \" Mr. Philip\", \" Mr. Sidney Samuel\", \" Mr. Walter\", \" Mr. James H\", \" Mr. George Henry\", \" Mr. Christo\", \" Mr. Karl Ivar Sven\", \" Mr. John Hall (\\\"Henry\\\")\", \" Mr. Arne Jonas\", \" Miss. Mathilde\", \" Mr. Bengt Edvin\", \" Mr. Ernst Adolf\", \" Mr. Robert William Norman\", \" Miss. Alice Phoebe\", \" Mr. Stephen\", \" Mr. Frederick William\", \" Mr. George Henry\", \" Miss. Thamine\", \" Mr. Reginald Charles\", \" Mr. Matti Alexanteri\", \" Mr. Sleiman\", \" Dr. William Edward\", \" Miss. Agda Thorilda Viktoria\", \" Rev. Ernest Courtenay\", \" Mr. James George\", \" Mrs. Wilhelm (Elna Matilda Persson)\", \" Mr. William Thomas\", \" Mr. William Arthur\", \" Mrs. Viktor (Helena Wilhelmina)\", \" Mr. Thomas\", \" Mr. Emil\", \" Mr. William\", \" Miss. Delia\", \" Mr. David\", \" Mr. Ernesti Arvid\", \" Mr. Alexander\", \" Mr. Charles H\", \" Miss. Augusta Charlotta\", \" Mr. Francis \\\"Frank\\\"\", \" Master. Eric\", \" Mr. Frank\", \" Mr. Nils Johan Goransson\", \" Mr. Alfons\", \" Mr. Richard William\", \" Mr. Ivan\", \" Mr. Penko\", \" Mr. Rene Jacques\", \" Miss. Aloisia\", \" Mr. Ivan\", \" Mr. Ervin G\", \" Mr. Mansour\", \" Miss. Helen Loraine\", \" Mr. William Cahoone Jr\", \" Mr. Howard Hugh \\\"Harry\\\"\", \" Mr. Samuel\", \" Mrs. William (Anna Sylfven)\", \" Mr. Ignjac\", \" Mr. Benjamin\", \" Dr. Ernest\", \" Mr. Samuel\", \" Mr. Yoto\", \" Mr. George John Jr\", \" Mr. Johan Hansen\", \" Mr. Austen\", \" Mr. George Edward\", \" Mr. Leo Edmondus\", \" Mr. Mitto\", \" Mr. Thomas Clinton\", \" Mr. Stephen Weart\", \" Mr. Erik Gustaf\", \" Mr. Charles Frederick Waddington\", \" Mr. Stanley Hubert\", \" Mr. Jovan\", \" Mr. Nils Martin\", \" Mr. Fletcher Fellows\", \" Mr. Tannous\", \" Mr. Josef\", \" Mr. Wazli\", \" Mr. Leo Peter\", \" Miss. Annie Clemmer\", \" Mr. Wilhelm\", \" Mr. Sebastiano\", \" Mrs. (Catherine David)\", \" Mr. Adola\", \" Mr. Thomas\", \" Mr. Mauritz Nils Martin\", \" Mr. Jakob Alfred\", \" Mr. William Thomas\", \" Mr. Sante\", \" Miss. Stina Viola\", \" Mr. Harry Elkins\", \" Mr. Tannous\", \" Mr. Karl Gideon\", \" Mr. Juho\", \" Mr. Vasil\", \" Mr. Charles Henry\", \" Master. Sidney Leonard\", \" Mr. Matthew\", \" Mr. Johan Birger\", \" Mr. Erik\", \" Miss. Elina\", \" Mr. Peter David\", \" Dr. Alfred\", \" Mr. John\", \" Miss. Mari Aina\", \" Mr. Pekka Pietari\", \" Miss. Marija\", \" Mr. Shadrach\", \" Mr. Carl/Charles Peter\", \" Mr. Hans Martin Monsen\", \" Miss. Ida\", \" Mr. Todor\", \" Mr. Henry\", \" Mr. Alfred Fleming\", \" Mrs. Thomas (Annie Louise Rowley)\", \" Mr. William John\", \" Miss. Catharina\", \" Mr. Stanio\", \" Mr. David\", \" Mr. Leo\", \" Mrs. Ernst Gilbert (Anna Sigrid Maria Brogren)\", \" Mr. Viktor Richard\", \" Mr. Phillippe\", \" Mr. James\", \" Mr. Nikolai Erland\", \" Mr. William Baird\", \" Miss. Doolina Margaret \\\"Daisy\\\"\", \" Mr. Mark\", \" Mr. Johan Henrik Johannesson\", \" Mr. Leon\", \" Mr. Johan Emil\", \" Mr. Edwy Arthur\", \" Mr. Ingvald Olai Olsen\", \" Mr. Benjamin Laventall\", \" Mr. Joseph\", \" Mr. Francis Davis\", \" Mr. Maurice\", \" Mr. William\", \" Mr. Arthur H\", \" Mr. Jacob Christian\", \" Mr. Simon\", \" Mr. Manuel Estanslas\", \" Mr. William\", \" Mr. John Montgomery\", \" Mr. James\", \" Mr. Arthur\", \" Mr. Luka\", \" Miss. Ida Sofia\", \" Mr. George Quincy\", \" Mr. Peter Henry\", \" Mr. Lewis Richard\", \" Mr. Nils August\", \" Master. Harold Victor\", \" Mr. Anthony Wood \\\"Archie\\\"\", \" Mr. Richard Henry\", \" Miss. Jeannie\", \" Mr. Edward Austin\", \" Mr. Francis William\", \" Mr. Konrad Mathias Reiersen\", \" Mr. Einar\", \" Mr. Harry Markland\", \" Mr. Ramon\", \" Mr. Edward Roland\", \" Mr. Gerious\", \" Mr. Frederick William\", \" Mrs. Hudson J C (Bessie Waldo Daniels)\", \" Mr. Olof\", \" Mr. Petar\", \" Miss. Mary\", \" Miss. Bridget Mary\", \" Miss. Kristina Sofia\", \" Mr. Victor de Satode\", \" Mr. Henry Margido\", \" Mr. James\", \" Mr. Satio\", \" Mr. William Anderson\", \" Mr. Patrick\", \" Mr. Stefo\", \" Mr. Janko\", \" Mr. Sarkis\", \" Mr. Fared\", \" Mr. James\", \" Mr. John\", \" Mr. Johan Werner\", \" Mr. Richard George\", \" Mr. Nakli\", \" Mr. Joseph Jr\", \" Miss. Marija\", \" Major. Archibald Willingham\", \" Mr. Samuel Beard\", \" Miss. Ingeborg Constanzia\", \" Miss. Sigrid Elisabeth\", \" Mr. Walter Donald\", \" Mr. Arthur Ernest\", \" Mr. Frank John\", \" Mr. Percival James R\", \" Mr. Timothy\", \" Mr. George\", \" Mr. Victor\", \" Mr. Thomas Rowan\", \" Mr. Husein\", \" Mr. Robert Douglas\", \" Mr. John\", \" Miss. (Marion Ogden)\", \" Mr. Alfred J\", \" Mr. Ilia\", \" Mrs. Nils (Alma Cornelia Berglund)\", \" Mr. Tannous\", \" Mr. Alfred George John\", \" Mr. George\", \" Mrs. Joseph (Maria Elias)\", \" Mr. William James\", \" Mr. John Hugo\", \" Mr. Uscher\", \" Mr. John Denzil\", \" Mr. Eliezer\", \" Mr. Joseph\", \" Mr. Matti\", \" Mr. William James\", \" Miss. Mary\", \" Mr. John Henry\", \" Mr. Jean Baptiste\", \" Mr. Alfred\", \" Mr. Hanna\", \" Mr. Petco\", \" Mr. Charles H\", \" Mr. Ernst William\", \" Mr. Edvard Bengtsson\", \" Mr. Milan\", \" Mrs. Anders Johan (Alfrida Konstantia Brogren)\", \" Mr. Jose Neto\", \" Mr. John\", \" Mr. William Alfred\", \" Mr. Ernst Gilbert\", \" Mrs. William Arthur (Cordelia K Stanlick)\", \" Mr. Lawrence\", \" Mr. Antoni\", \" Mr. Henry Damsgaard\", \" Mr. David John \\\"Dai\\\"\", \" Mr. Frederick\", \" Rev. Charles Leonard\", \" Mr. Guentcho\", \" Mr. Patrick D\", \" Mr. Johan Svensson\", \" Mr. William Henry Marsh\", \" Miss. Mabel\", \" Mr. Antti Gustaf\", \" Mr. Harvey\", \" Mrs. Juha (Maria Emilia Ojala)\", \" Mr. Percival\", \" Mr. Hans Peder\", \" Miss. Margit Elizabeth\", \" Mr. Liudevit\", \" Mr. Edward\", \" Mr. Mito\", \" Mr. Johannes Halvorsen\", \" Miss. Hanora \\\"Nora\\\"\", \" Mr. Leonard Mark\", \" Mr. Alexander\", \" Mrs. John (Catherine)\", \" Mr. George Floyd\", \" Mr. Arthur Webster\", \" Mr. Mohamed\", \" Mr. Edward Pomeroy\", \" Mr. Peju\", \" Mr. Lewis\", \" Mr. Reginald Fenton\", \" Mr. Knud Paust\", \" Mr. Jacob\", \" Mr. Thornton\", \" Mr. Henry Michael\", \" Mr. Ennis Hastings\", \" Mr. Gustaf Hjalmar\", \" Mr. Frederick Charles\", \" Mrs. Frederick (Augusta Tyler)\", \" Miss. Katie\", \" Mr. Thor Anderson\", \" Mr. Charles Edward\", \" Mr. Thomas William Solomon\", \" Mr. Joseph Philippe Lemercier\", \" Mr. Jaako Arnold\", \" Mr. Branko\", \" Mr. Eberhard Thelander\", \" Mr. Khalil\", \" Col. John\", \" Mr. Charles Henry\", \" Mr. James\", \" Mr. John Borland\", \" Mr. Adolf Mathias Nicolai Olsen\", \" Miss. Saiide\", \" Mr. Martin\", \" Mr. Henrik Juul\", \" Mr. Henry Samuel (\\\"Mr Henry Marshall\\\")\", \" Mr. Herman\", \" Mr. August Viktor\", \" Mr. Samuel\", \" Mr. Peter Andreas Lauritz Andersen\", \" Mr. Michael\", \" Mr. Malkolm Joackim\", \" Mr. Svend Lauritz\", \" Mr. William Henry\", \" Mr. Henry Price\", \" Mr. Luka\", \" Mr. Kurt Arnold Gottfrid\", \" Miss. Pieta Sofia\", \" Mr. Houssein G N\", \" Mr. Robert J\", \" Mr. William John\", \" Mr. Moses Aaron\", \" Mr. Leslie\", \" Mrs. Edward (Margaret Ann Watson)\", \" Mr. Kanio\", \" Mr. Minko\", \" Mr. Tyrell William\", \" Mr. Neal\", \" Capt. Edward Gifford\", \" Mr. Rossmore Edward\", \" Mr. Daniel Warner\", \" Mr. Michael\", \" Mr. Johannes Joseph\", \" Mr. Lalio\", \" Mr. August Sigfrid\", \" Mr. Percy Andrew\", \" Mr. Thomas Leonard\", \" Mr. John\", \" Mr. Iisakki Antino Aijo\", \" Mr. Hans Linus\", \" Dr. Arthur Jackson\", \" Miss. Mary\", \" Mr. Daniel J\", \" Mr. Daniel Danielsen\", \" Mr. Rene Aime\", \" Mr. Niels Peder\", \" Mrs. (Mary)\", \" Mr. Dibo\", \" Mr. Pehr Fabian Oliver Malkolm\", \" Mr. Roger\", \" Mr. Thomas J\", \" Mr. Milton Clyde\", \" Mr. Andrew G\", \" Mr. William\", \" Mr. Abraham (David Lishin)\", \" Master. George Hugh\", \" Mr. Benjamin\", \" Mr. Andrew \\\"Andy\\\"\", \" Mr. Alfred\", \" Miss. Stella Anna\", \" Mr. William Fisher\", \" Mr. Ristiu\", \" Mr. Richard\", \" Mr. Yousseff\", \" Mrs. Jean Baptiste (Rosalie Paula Govaert)\", \" Mr. Martin\", \" Mr. Karl Johan\", \" Mr. Thomas Jr\", \" Miss. Ellen Natalia\", \" Mr. August\", \" Mr. William\", \" Mr. James\", \" Mr. Richard James\", \" Miss. Ebba Iris Alfrida\", \" Mr. Ernest Portage\", \" Mr. Richard\", \" Miss. Wendla Maria\", \" Mr. Albert\", \" Mr. John Fredrik Alexander\", \" Master. Karl Thorsten\", \" Jonkheer. John George\", \" Master. Urho Abraham\", \" Mr. John\", \" Mr. Len\", \" Mr. Amin\", \" Mr. Albert\", \" Mr. Owen George\", \" Mr. Jakob\", \" Mr. Maurice\", \" Mr. Ilmari Rudolf\", \" Mr. Thomas Charles\", \" Mr. Peter L\", \" Mr. Jeso\", \" Mr. Anthony\", \" Mr. Douglas Bullen\", \" Mr. Marin\", \" Rev. John\", \" Master. Sigvard Harald Elias\", \" Mr. Johan\", \" Miss. Nourelain\", \" Mrs. Ernest Courtenay (Lilian Hughes)\", \" Mr. Raihed\", \" Mr. Claus Peter\", \" Mr. Frederick Edward\", \" Miss. Dorothy Edith \\\"Dolly\\\"\", \" Mr. John William\", \" Mr. Washington Augustus II\", \" Mr. Philemon\", \" Mr. Cerin\", \" Mr. Frans Olof\", \" Mr. Victor\", \" Mr. Alfred Ossian\", \" Mr. Nedelio\", \" Mr. Kristo\", \" Mr. Johann\", \" Miss. Gerda Ulrika\", \" Mr. Frederick James\", \" Mr. Henry Jr\", \" Mrs. William (Margaret Norton)\", \" Rev. Juozas\", \" Miss. Catherine Helen \\\"Carrie\\\"\", \" Mr. Patrick\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Age=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [38.0, 26.0, 35.0, 27.0, 14.0, 4.0, 58.0, 55.0, 29.5, 22.0, 34.0, 15.0, 28.0, 38.0, 22.0, 36.0, 22.0, 25.0, 14.0, 3.0, 19.0, 22.0, 49.0, 29.0, 42.0, 21.0, 5.0, 38.0, 25.0, 29.0, 17.0, 32.0, 0.83, 30.0, 29.0, 22.0, 17.0, 33.0, 23.0, 23.0, 34.0, 21.0, 25.0, 22.0, 32.5, 12.0, 24.0, 22.0, 29.0, 19.0, 22.0, 24.0, 27.0, 22.0, 16.0, 40.0, 9.0, 36.0, 1.0, 1.0, 4.0, 22.0, 45.0, 32.0, 19.0, 3.0, 44.0, 58.0, 22.0, 18.0, 26.0, 16.0, 40.0, 35.0, 31.0, 27.0, 32.0, 16.0, 38.0, 19.0, 35.0, 5.0, 8.0, 22.0, 24.0, 37.0, 29.0, 36.0, 30.0, 35.0, 50.0, 3.0, 25.0, 58.0, 35.0, 25.0, 41.0, 22.0, 63.0, 35.0, 19.0, 30.0, 42.0, 22.0, 26.0, 19.0, 42.0, 50.0, 22.0, 25.0, 28.0, 0.92, 36.0, 17.0, 30.0, 24.0, 18.0, 26.0, 24.0, 31.0, 40.0, 30.0, 22.0, 36.0, 36.0, 31.0, 16.0, 22.0, 36.0, 41.0, 45.0, 2.0, 24.0, 24.0, 40.0, 22.0, 3.0, 22.0, 22.0, 22.0, 60.0, 22.0, 22.0, 24.0, 25.0, 36.0, 22.0, 42.0, 1.0, 35.0, 36.0, 17.0, 36.0, 21.0, 23.0, 24.0, 28.0, 39.0, 3.0, 33.0, 44.0, 34.0, 18.0, 28.0, 19.0, 32.0, 28.0, 22.0, 42.0, 14.0, 24.0, 45.0, 28.0, 25.0, 4.0, 13.0, 34.0, 5.0, 52.0, 49.0, 29.0, 36.0, 50.0, 48.0, 0.75, 33.0, 23.0, 2.0, 63.0, 25.0, 35.0, 9.0, 54.0, 16.0, 33.0, 42.0, 26.0, 29.0, 36.0, 54.0, 34.0, 36.0, 30.0, 44.0, 50.0, 2.0, 22.0, 7.0, 30.0, 22.0, 36.0, 32.0, 19.0, 29.5, 8.0, 17.0, 22.0, 22.0, 48.0, 39.0, 36.0, 32.0, 62.0, 53.0, 36.0, 22.0, 34.0, 39.0, 32.0, 25.0, 39.0, 18.0, 60.0, 52.0, 28.0, 49.0, 24.0, 35.0, 27.0, 22.0, 40.0, 22.0, 24.0, 4.0, 42.0, 20.0, 21.0, 80.0, 32.0, 28.0, 24.0, 25.0, 0.75, 48.0, 56.0, 23.0, 18.0, 22.0, 50.0, 20.0, 36.0, 40.0, 31.0, 18.0, 36.0, 27.0, 15.0, 31.0, 4.0, 25.0, 22.0, 18.0, 35.0, 45.0, 42.0, 22.0, 25.0, 24.0, 48.0, 38.0, 27.0, 6.0, 27.0, 30.0, 22.0, 29.0, 35.0, 42.0, 21.0, 31.0, 30.0, 4.0, 6.0, 48.0, 0.67, 33.0, 20.0, 36.0, 51.0, 54.0, 5.0, 43.0, 13.0, 17.0, 18.0, 1.0, 49.0, 31.0, 31.0, 11.0, 0.42, 27.0, 33.0, 52.0, 27.0, 27.0, 1.0, 25.0, 62.0, 15.0, 0.83, 39.0, 32.0, 42.0, 30.0, 36.0, 16.0, 18.0, 45.0, 51.0, 24.0, 48.0, 42.0, 27.0, 4.0, 47.0, 28.0, 15.0, 56.0, 25.0, 19.0, 26.0], \"xaxis\": \"x\", \"y\": [\" Mrs. John Bradley (Florence Briggs Thayer)\", \" Miss. Laina\", \" Mrs. Jacques Heath (Lily May Peel)\", \" Mrs. Oscar W (Elisabeth Vilhelmina Berg)\", \" Mrs. Nicholas (Adele Achem)\", \" Miss. Marguerite Rut\", \" Miss. Elizabeth\", \" Mrs. (Mary D Kingcome) \", \" Mr. Charles Eugene\", \" Mrs. Fatima\", \" Mr. Lawrence\", \" Miss. Anna \\\"Annie\\\"\", \" Mr. William Thompson\", \" Mrs. Carl Oscar (Selma Augusta Emilia Johansson)\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. William Augustus (Marie Eugenie)\", \" Miss. Mary Agatha\", \" Mr. Hanna\", \" Miss. Jamila\", \" Miss. Simonne Marie Anne Andree\", \" Miss. Margaret Delia\", \" Miss. Bridget\", \" Mrs. Henry Sleeper (Myna Haxtun)\", \" Mrs. Lizzie (Elizabeth Anne Wilkinson)\", \" Mr. Hugh\", \" Miss. Emily\", \" Miss. Constance Mirium\", \" Miss. Amelie\", \" Master. Gerios\", \" Mrs. (Elizabeth Ramell)\", \" Miss. Erna Alexandra\", \" Mr. Lee\", \" Master. Alden Gates\", \" Miss. Elizabeth\", \" Mr. Jan Baptist\", \" Miss. Brigdet Delia\", \" Miss. Bertha\", \" Mrs. Karl Alfred (Maria Mathilda Gustafsson)\", \" Miss. Mabel Helen\", \" Mr. William Bertram\", \" Mrs. John T (Ada Julia Bone)\", \" Miss. Anna Kristine\", \" Mr. Albert Johan\", \" Miss. Bertha\", \" Miss. Susan\", \" Master. Elias\", \" Mr. Fridtjof Arne\", \" Miss. Anna\", \" Mrs. Leopold (Mathilde Francoise Pede)\", \" Miss. Helen Monypeny\", \" Miss. Anna Sofia\", \" Mrs. Pekka Pietari (Elin Matilda Dolck)\", \" Mr. August Edvard (\\\"Wennerstrom\\\")\", \" Mrs. Thomas (Edith Wearne)\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \" Master. Frank John William \\\"Frankie\\\"\", \" Mrs. (Edith Martha Bowerman)\", \" Miss. Eleanor Ileen\", \" Master. Richard F\", \" Miss. Luise Gretchen\", \" Mrs. Thomas (Johanna \\\"Hannah\\\" Godfrey)\", \" Mr. Charles Hallace (\\\"Mr C Rolmane\\\")\", \" Mrs. (Rosa)\", \" Miss. Carla Christine Nielsine\", \" Master. Michel M\", \" Mrs. James Joseph (Margaret Tobin)\", \" Miss. Elise\", \" Miss. Margaret \\\"Maggie\\\"\", \" Mr. Gurshon \\\"Gus\\\"\", \" Mr. Nassef Cassem\", \" Miss. Helen \\\"Ellen\\\"\", \" Mr. Henry\", \" Miss. Clear Annie\", \" Miss. Madeleine\", \" Miss. Eliina\", \" Miss. Albina\", \" Mr. Victor Francis\", \" Mr. Frederick Maxfield\", \" Mr. William John\", \" Mrs. Henry Birkhardt (Irene Wallach)\", \" Miss. Lillian Gertrud\", \" Miss. Marjorie \\\"Lottie\\\"\", \" Miss. Katherine \\\"Kate\\\"\", \" Mrs. William (Anna)\", \" Mr. Richard Leonard\", \" Mrs. Darwis (Hanne Youssef Razi)\", \" Mrs. Gertrude Maybelle\", \" Miss. Gladys\", \" Miss. Anna\", \" Mrs. (Lutie Davis)\", \" Master. Edvin Rojj Felix\", \" Mr. Ernst Ulrik\", \" Mrs. William Thompson (Edith Junkins)\", \" Miss. Amelia\", \" Mr. William Henry\", \" Mrs. (Elizabeth Anne Maidment)\", \" Miss. Hanora \\\"Nora\\\"\", \" Miss. Kornelia Theodosia\", \" Mrs. Stanton (Rosa Hunt)\", \" Mr. Edward Arthur\", \" Mr. Theodore\", \" Mr. Masabumi\", \" Miss. Kate\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. Dickinson H (Helen Walton)\", \" Mr. Adolphe\", \" Mrs. James (Helene DeLaudeniere Chaput)\", \" Miss. Anna Katherine \\\"Annie Kate\\\"\", \" Mr. Bernard\", \" Miss. Nora A\", \" Master. Hudson Trevor\", \" Miss. Margaret\", \" Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \" Miss. Laura Mabel\", \" Miss. Margaret Bechstein\", \" Miss. Emily Borie\", \" Miss. Helmina Josefina\", \" Mrs. Sinai (Miriam Sternin)\", \" Miss. Mary Natalie\", \" Mrs. Frederic Oakley (Margaretta Corning Stone)\", \" Miss. Hilda Mary\", \" Mrs. Albert Francis (Sylvia Mae Harbaugh)\", \" Miss. Marie Grice\", \" Mrs. (Ada E Hall)\", \" Mrs. Frank John (Emily Alice Brown)\", \" Miss. Jean Gertrude\", \" Miss. Agnes\", \" Mrs. Henry William (Clara Heinsheimer)\", \" Miss. Elizabeth Margaret\", \" Mr. Karl Edwart\", \" Master. Edmond Roger\", \" Miss. Alice Elizabeth\", \" Miss. Amelia \\\"Mildred\\\"\", \" Miss. Marion Elsie\", \" Mrs. Thomas Henry (Mary E Finck)\", \" Master. William Loch \\\"William\\\"\", \" Miss. Elsie Edith\", \" Miss. Mary\", \" Miss. Helen Mary \\\"Ellie\\\"\", \" Mrs. Frank Manley (Anna Sophia Atkinson)\", \" Mrs. (Mantoura Boulos)\", \" Miss. Annie\", \" Mme. Leontine Pauline\", \" Mr. George Achilles\", \" Mrs. Edgar Joseph (Leila Saks)\", \" Miss. Aurora Adelia\", \" Miss. Rosalie\", \" Miss. Maria (\\\"Mary\\\")\", \" Mrs. Alexander Oskar (Mary Aline Towner)\", \" Miss. Kate\", \" Miss. Bertha\", \" Mr. William Ernest\", \" Mr. Carl Olof\", \" Miss. Marjorie\", \" Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \" Mrs. William H (Jessie L)\", \" Mr. Juha\", \" Master. William Rowe\", \" Miss. Daisy E\", \" Mr. Johan Julian\", \" Mrs. James Vivian (Lulu Thorne Christian)\", \" Miss. Lyyli Karoliina\", \" Mrs. Charles V (Ada Maria Winfield)\", \" Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\", \" Mr. Berk (Berk Trembisky)\", \" Mr. Mauritz Hakan\", \" Mrs. Percival (Florence Kate White)\", \" Mrs. Charles Alexander (Alice Adelaide Slow)\", \" Miss. Lucile Polk\", \" Mrs. Sidney (Emily Hocking)\", \" Mrs. Benjamin (Esther Ada Bloomfield)\", \" Ms. Encarnacion\", \" Mr. Bernt\", \" Master. Washington\", \" Miss. Madeleine Violet\", \" Mr. Frederic Kimber\", \" Miss. Marie Catherine\", \" Major. Arthur Godfrey\", \" Mr. Samuel L\", \" Mr. Ivan\", \" Mrs. Frederick R (Marion)\", \" Miss. Ellen\", \" Mr. Harry\", \" Miss. Helene Barbara\", \" Mrs. Edwy Arthur (Ada Mary Worth)\", \" Mrs. Amin S (Marie Marthe Thuillard)\", \" Miss. Hildur E\", \" Mrs. (Hedwig)\", \" Mr. Dickinson H\", \" Mrs. Frederick Maxfield (Jane Anne Forby)\", \" Master. Eden Leslie \\\"Neville\\\"\", \" Miss. Elizabeth Mussey\", \" Miss. Roberta\", \" Mrs. Frederick Charles (Jane Richards)\", \" Mr. George (\\\"George Arthur Brayton\\\")\", \" Mr. Fang\", \" Mr. Eugene Patrick\", \" Mr. James Robert\", \" Mrs. Martin (Elizabeth L. Barrett)\", \" Mrs. (Amelia Milley)\", \" Mrs. William A (Florence \\\"Mary\\\" Agnes Hughes)\", \" Miss. Anne\", \" Mrs. Louis Albert (Ida Sophia Fischer)\", \" Miss. Lucy\", \" Miss. Phyllis May\", \" Mrs. Catherine (Catherine Rizk)\", \" Miss. Eva Miriam\", \" Miss. Bertha\", \" Miss. Hedwig Margaritha\", \" Miss. Harriet R\", \" Mr. Edward\", \" Mrs. Edward (Ethel Clarke)\", \" Mr. Julian\", \" Master. John Morgan Jr\", \" Mr. John Borland Jr\", \" Mr. Fahim (\\\"Philip Zenni\\\")\", \" Miss. Velin\", \" Lady. (Lucille Christiana Sutherland) (\\\"Mrs Morgan\\\")\", \" Mrs. Emil (Tillie Mandelbaum)\", \" Mrs. Guillaume Joseph (Emma)\", \" Mr. Carl\", \" Mr. George\", \" Mrs. Edward Dale (Charlotte Lamson)\", \" Mr. John Irwin (\\\"Irving\\\")\", \" Miss. Mary\", \" Miss. Ethel\", \" Mrs. William Baird (Alice Munger)\", \" Mr. Eiriik\", \" Miss. Julie Rachel\", \" Mrs. John Borland (Marian Longstreth Morris)\", \" Miss. Ruth\", \" Mr. Maxmillian\", \" Mrs. Walter Bertram (Martha Eustis)\", \" Miss. Jessie Wills\", \" Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \" Mrs. Sidney Samuel (Amy Frances Christy)\", \" Mr. Harry (\\\"Mr E Haven\\\")\", \" Mr. Robert Williams\", \" Mrs. Joseph (Juliette Marie Louise Lafargue)\", \" Miss. Elizabeth W\", \" Miss. Margaret Jane\", \" Miss. Alice\", \" Miss. Marion Louise\", \" Mr. Edwin Nelson Jr\", \" Mr. Sahid\", \" Miss. Gretchen Fiske\", \" Mr. Algernon Henry Wilson\", \" Dr. Max\", \" Miss. Mary\", \" Mlle. Emma\", \" Mr. Choong\", \" Miss. Eugenie\", \" Mr. Henry Sleeper\", \" Col. Oberst Alfons\", \" Miss. Amy Zillah Elsie\", \" Miss. Elsie\", \" Miss. Hanora \\\"Norah\\\"\", \" Dr. Henry William\", \" Mr. Eino William\", \" Mrs. Elmer Zebley (Juliet Cummins Wright)\", \" Mrs. Thomas William Solomon (Elizabeth Catherine Ford)\", \" Mr. Charles\", \" Miss. Anna Sofia\", \" Mr. Thomas Drake Martinez\", \" Mr. Hammad\", \" Miss. Georgette Alexandra\", \" Mr. Albert Adrian\", \" Miss. Manca\", \" Mr. Ali\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. John Jacob (Madeleine Talmadge Force)\", \" Mr. Spencer Victor\", \" Mrs. Florence \\\"Fannie\\\"\", \" Mr. Edward Pennington\", \" Miss. Alice\", \" Master. Halim Gonios (\\\"William George\\\")\", \" Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \" Mr. Elmer Zebley\", \" Miss. Caroline Louise\", \" Miss. Edwina Celia \\\"Winnie\\\"\", \" Miss. Annie Jessie \\\"Nina\\\"\", \" Mr. Norman Campbell\", \" Mrs. Peter Henry (Lillian Jefferys)\", \" Miss. Margareth\", \" Miss. Elisabeth Walton\", \" Mr. Gustave J\", \" Mr. Walter James\", \" Miss. Susan Parker \\\"Suzette\\\"\", \" Mr. Juho\", \" Miss. Anna\", \" Miss. Joan\", \" Master. Meier\", \" Mrs. Samuel (Jane Laver)\", \" Master. Viljo\", \" the Countess. of (Lucy Noel Martha Dyer-Edwards)\", \" Mr. Hanna Assi\", \" Mrs. William Ernest (Lucile Polk)\", \" Mrs. John C (Anna Andrews)\", \" Mrs. Elizabeth (Eliza Needs)\", \" Miss. Virginia Ethel\", \" Mrs. Edward Scott (Elisabeth Walton McMillan)\", \" Miss. Banoura\", \" Mrs. Albert Adrian (Vera Gillespie)\", \" Miss. Anna Sofia\", \" Master. Bertram Vere\", \" Dr. Alice (Farnham)\", \" Mrs. Mara\", \" Mrs. Harvey (Charlotte Annie Tate)\", \" Master. William Thornton II\", \" Master. Assad Alexander\", \" Mr. Oskar Arvid\", \" Mrs. Norman Campbell (Bertha Griggs)\", \" Mrs. Charles Melville (Clara Jennings Gregg)\", \" Mr. Nikola\", \" Mrs. (Beila)\", \" Master. Andre\", \" Mr. Thomas Joseph\", \" Mrs. George Nelson (Martha Evelyn)\", \" Mrs. Antoni (Selini Alexander)\", \" Master. George Sibley\", \" Miss. Sara Rebecca\", \" Mr. Chang\", \" Mr. Pierre\", \" Miss. Augusta\", \" Mrs. Samuel L (Edwiga Grabowska)\", \" Miss. Mary Conover\", \" Mrs. Sam (Leah Rosen)\", \" Mrs. George Dennick (Mary Hitchcock)\", \" Mr. Peter Denis \", \" Mrs. Solomon (Latifa Qurban)\", \" Mrs. Frederick Joel (Margaret Welles Barron)\", \" Mrs. (Karolina)\", \" Miss. Asuncion\", \" Master. Harold Theodor\", \" Mrs. Richard Leonard (Sallie Monypeny)\", \" Mrs. Samuel (Hannah Wizosky)\", \" Miss. Adele Kiamie \\\"Jane\\\"\", \" Mrs. Thomas Jr (Lily Alexenia Wilson)\", \" Mrs. William (Imanita Parrish Hall)\", \" Miss. Margaret Edith\", \" Mr. Karl Howell\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Age=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0, 25.0, 46.0, 23.0, 63.0, 47.0, 24.0, 35.0, 21.0, 27.0, 45.0, 55.0, 9.0, 36.0, 21.0, 48.0, 50.0, 22.0, 22.5, 41.0, 25.0, 50.0, 24.0, 33.0, 22.0, 30.0, 18.5, 22.0, 21.0, 25.0, 25.0, 39.0, 42.0, 41.0, 30.0, 45.0, 25.0, 45.0, 25.0, 60.0, 36.0, 24.0, 27.0, 20.0, 28.0, 29.5, 10.0, 35.0, 25.0, 25.0, 36.0, 17.0, 32.0, 18.0, 22.0, 13.0, 28.0, 18.0, 47.0, 31.0, 60.0, 24.0, 21.0, 29.0, 28.5, 35.0, 32.5, 25.0, 55.0, 30.0, 24.0, 6.0, 67.0, 49.0, 25.0, 29.5, 25.0, 27.0, 18.0, 22.0, 2.0, 22.0, 25.0, 27.0, 25.0, 25.0, 25.0, 76.0, 29.0, 20.0, 33.0, 43.0, 27.0, 25.0, 26.0, 16.0, 28.0, 21.0, 25.0, 25.0, 18.5, 41.0, 22.0, 36.0, 18.5, 63.0, 18.0, 25.0, 1.0, 36.0, 29.0, 12.0, 25.0, 35.0, 28.0, 25.0, 17.0, 22.0, 22.0, 42.0, 24.0, 32.0, 53.0, 22.0, 25.0, 43.0, 24.0, 26.5, 26.0, 23.0, 40.0, 10.0, 33.0, 61.0, 28.0, 42.0, 31.0, 42.0, 22.0, 42.0, 30.0, 23.0, 25.0, 60.5, 36.0, 13.0, 24.0, 29.0, 23.0, 42.0, 26.0, 22.0, 7.0, 26.0, 25.0, 41.0, 26.0, 48.0, 18.0, 36.0, 22.0, 25.0, 27.0, 23.0, 25.0, 40.0, 15.0, 20.0, 54.0, 36.0, 64.0, 30.0, 37.0, 18.0, 25.0, 27.0, 40.0, 21.0, 17.0, 22.0, 40.0, 34.0, 42.0, 11.5, 61.0, 8.0, 33.0, 6.0, 18.0, 23.0, 22.0, 22.0, 0.33, 47.0, 8.0, 25.0, 42.0, 35.0, 24.0, 33.0, 25.0, 32.0, 25.0, 17.0, 60.0, 38.0, 42.0, 22.0, 57.0, 50.0, 25.0, 30.0, 21.0, 22.0, 21.0, 53.0, 22.0, 23.0, 22.0, 40.5, 36.0, 14.0, 21.0, 21.0, 25.0, 39.0, 20.0, 64.0, 20.0, 18.0, 48.0, 55.0, 45.0, 45.0, 25.0, 25.0, 41.0, 22.0, 42.0, 29.0, 22.0, 0.92, 20.0, 27.0, 24.0, 32.5, 25.0, 25.0, 28.0, 19.0, 21.0, 36.5, 21.0, 29.0, 1.0, 30.0, 25.0, 42.0, 25.0, 22.0, 17.0, 46.0, 25.0, 26.0, 22.0, 25.0, 20.0, 28.0, 40.0, 30.0, 22.0, 23.0, 0.75, 22.0, 9.0, 2.0, 36.0, 25.0, 24.0, 25.0, 25.0, 42.0, 30.0, 25.0, 53.0, 36.0, 26.0, 1.0, 25.0, 30.0, 29.0, 32.0, 29.5, 43.0, 24.0, 22.0, 64.0, 30.0, 0.83, 55.0, 45.0, 18.0, 22.0, 25.0, 37.0, 55.0, 17.0, 57.0, 19.0, 27.0, 22.0, 26.0, 25.0, 26.0, 33.0, 39.0, 23.0, 12.0, 46.0, 29.0, 21.0, 48.0, 39.0, 25.0, 19.0, 27.0, 30.0, 32.0, 39.0, 25.0, 25.0, 18.0, 32.0, 25.0, 58.0, 25.0, 16.0, 26.0, 38.0, 24.0, 31.0, 45.0, 25.0, 18.0, 49.0, 0.17, 50.0, 59.0, 25.0, 25.0, 30.0, 14.5, 24.0, 31.0, 27.0, 25.0, 22.0, 25.0, 22.0, 45.0, 29.0, 21.0, 31.0, 49.0, 44.0, 54.0, 45.0, 22.0, 21.0, 55.0, 5.0, 25.0, 26.0, 22.0, 19.0, 29.5, 24.0, 24.0, 57.0, 21.0, 6.0, 23.0, 51.0, 13.0, 47.0, 29.0, 18.0, 24.0, 48.0, 22.0, 31.0, 30.0, 38.0, 22.0, 17.0, 43.0, 20.0, 23.0, 50.0, 22.0, 3.0, 22.0, 37.0, 28.0, 25.0, 39.0, 38.5, 25.0, 25.0], \"xaxis\": \"x\", \"y\": [\" Mr. James\", \" Mrs. James (Ellen Needs)\", \" Mr. Thomas Francis\", \" Mr. Albert\", \" Mrs. Alexander (Helga E Lindqvist)\", \" Mr. Johan Cervin\", \" Miss. Kate\", \" Mr. Albert Francis\", \" Mrs. Joseph (Sophie Halaut Easu)\", \" Mr. John Samuel\", \" Mr. Ylio\", \" Mr. Charles Cresson\", \" Mrs. John Pillsbury (Nelle Stevenson)\", \" Mr. Benjamin\", \" Mrs. Herbert Fuller (Carrie Constance Toogood)\", \" Mrs. Sebastiano (Argenia Genovesi)\", \" Mr. Daniel\", \" Mr. Gerios\", \" Miss. Ida Livija\", \" Mrs. Mariana (Miriam\\\")\\\"\", \" Mr. Martin\", \" Master. Artur Karl\", \" Mrs. Alfred (Antoinette)\", \" Mr. Richard Norris II\", \" Mrs. Arthur Larned (Emily Maria Borie)\", \" Mr. Alexander A\", \" Miss. Helene Ragnhild\", \" Mr. Shedid\", \" Mr. John Bertram\", \" Mr. Elias\", \" Mr. Charles Alexander\", \" Mr. Clifford Thomas\", \" Mrs. Bertram (Eva Georgetta Light)\", \" Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \" Mr. Philipp Edmund\", \" Mr. Vassilios (Catavelas Vassilios\\\")\\\"\", \" Miss. Sarah A\", \" Miss. Manda\", \" Mr. Julius\", \" Mr. Ling\", \" Mr. Franz\", \" Mr. Thomas Parham\", \" Mr. Nathan\", \" Mrs. Walter H (Irene Colvin)\", \" Mrs. Edwin Nelson Jr (Gertrude Parsons)\", \" Mr. Nikolai Johannes\", \" Mr. Paul Romaine\", \" Mr. Patrick\", \" Mrs. William Robert (Emma Eliza Ward)\", \" Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \" Mr. Lucien Philip\", \" Mr. Franz\", \" Miss. Ellen Nellie\\\"\\\"\", \" Miss. Ethel Flora\", \" Mr. Serafino Emilio\", \" Master. Albert\", \" Mr. Bartol\", \" Mr. Olaus Jorgensen\", \" Mr. Thomas Henry\", \" Miss. Victorine\", \" Mr. Mirko\", \" Mr. Arthur Gordon\", \" Mr. Ernst Herbert\", \" Miss. Bridget Delia\", \" Master. John Borie\", \" Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \" Miss. Mary Delia\", \" Mr. Clarence Bloomfield\", \" Mr. Gilbert Milligan Jr\", \" Mrs. Mark (Mary McDougald)\", \" Miss. Bertha E\", \" Mr. Lazar\", \" Miss. Manta Josefina\", \" Mr. Servando\", \" Miss. Amalie\", \" Mr. Edwin\", \" Mr. Frank\", \" Mrs. Robert Clifford (Malvina Helen Lamson)\", \" Mr. Charles Augustus\", \" Miss. Elizabeth\", \" Master. Akar\", \" Mr. Isidor\", \" Mr. Howard Brown\", \" Mr. Marinko\", \" Mr. John Joseph\", \" Mr. Betros\", \" Miss. Julia\", \" Miss. Emily Louisa\", \" Ms. Bridget\", \" Master. Ralph Lester\", \" Mrs. Adolf Fredrik (Anna Elisabeth Judith Andersson)\", \" Mr. Olaf\", \" Mrs. Thornton (Orian Hays)\", \" Mr. Robert\", \" Mr. Jakob\", \" Mr. Gunnar Isidor\", \" Mrs. Tyrell William (Julia Florence Siegel)\", \" Mr. Kalle Edvard\", \" Miss. Elin Ester Maria\", \" Mr. William Henry\", \" Mrs. Charles Emil Henry (Annie May Morris)\", \" Mr. Leopold\", \" Mr. William\", \" Mr. Oskar Leander\", \" Mrs. Alexander (Thamine Thelma\\\")\\\"\", \" Mr. Johan Martin\", \" Mr. Daniel\", \" Mr. Edward\", \" Mr. Aaron (Abi Weller\\\")\\\"\", \" Mr. George\", \" Mr. Samuel Ward\", \" Miss. Ellen Natalia\", \" Miss. Edith Corse\", \" Miss. Katherine\", \" Mrs. Isidor (Rosalie Ida Blun)\", \" Mr. Demetrios\", \" Mr. John\", \" Miss. Beatrice Irene\", \" Mr. Thomson\", \" Mrs. John Henry (Sara Elizabeth Lawry)\", \" Miss. Bertha J\", \" Mr. John\", \" Mrs. Paul (Emma Mock)\", \" Mr. Alfred John\", \" Mr. John\", \" Miss. Laura Alice\", \" Mr. Karl Rudolf\", \" Miss. Alicia\", \" Mr. Solomon\", \" Mr. Marius\", \" Mr. Henry John\", \" Col. Archibald IV\", \" Mrs. Frank (Frances)\", \" Mr. Charles P\", \" Mr. Valtcho\", \" Mr. Carl Robert\", \" Mr. Mapriededer\", \" Mr. August\", \" Miss. Jennie\", \" Mr. Charles Frederick\", \" Miss. Jessie Allis\", \" Miss. Sarah\", \" Mr. Arthur Larned\", \" Mr. Henry James\", \" Mr. Erik Gustaf (Mr Edward Lingrey\\\")\\\"\", \" Mr. Julius\", \" Mr. Herbert Henry\", \" Mr. Evan\", \" Mr. John Bertram\", \" Rev. William\", \" Mrs. Boulton (Olive Potter)\", \" Mr. Nicola\", \" Mr. Thomas\", \" Mrs. (Hulda Kristina Eugenia Lofqvist)\", \" Master. Filip Oscar\", \" Mr. Joseph\", \" Miss. Ellen\", \" Miss. Olga Elida\", \" Mr. John James\", \" Mrs. Benjamin (Edith Nile)\", \" Miss. Julia\", \" Master. Georges Youssef\", \" Miss. Marion\", \" Mr. Ernest\", \" Rev. Joseph Maria\", \" Mrs. Anton (Luise Heilmann)\", \" Mr. Emil\", \" Mr. Edward Watson\", \" Mrs. Henry Arthur Jr (Eleanor Genevieve Fosdick)\", \" Miss. Hilda Maria\", \" Mr. Simon\", \" Mr. Ortin\", \" Mr. Adolf Fredrik\", \" Mr. Assad\", \" Mr. Carl Oscar Vilhelm Gustafsson\", \" Miss. Edith Eileen\", \" Miss. Maude\", \" Mr. Charles Emil Henry\", \" Mrs. Allen Oliver (Nellie E Baumgardner)\", \" Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \" Mr. James Matthew\", \" Mr. Alexander Taylor Jr\", \" Mrs. Daniel Warner (Mary Graham Carmichael Farquarson)\", \" Mr. Patrick\", \" Mrs. Frederick Charles (Mary Helene Baxter)\", \" Mr. Frank Hubert\", \" Miss. Alice Frances Louisa\", \" Mr. Joseph\", \" Miss. Ada\", \" Mr. James\", \" Mr. William A\", \" Mr. Abraham L\", \" Master. Walter John\", \" Mr. John\", \" Master. Marshall Brines\", \" Mr. Julius Konrad Eugen\", \" Master. Robert Douglas\", \" Miss. Berta Olivia\", \" Mr. Charles Robert\", \" Mrs. (Lena Jacobsen Solvang)\", \" Miss. Nora\", \" Master. Gilbert Sigvard Emanuel\", \" Col. John Jacob\", \" Miss. Winifred Vera\", \" Mr. Frank Thomas\", \" Mr. Alfred Fernand\", \" Miss. Katherine\", \" Mr. Sidney C Stuart\", \" Miss. Edith Louise\", \" Mr. Redjo\", \" Mr. Albert Karvin\", \" Mr. Luigi\", \" Mr. Percy William\", \" Mrs. Benjamin (Ellen Truelove Arman)\", \" Miss. Ida Augusta Margareta\", \" Mr. Christopher\", \" Miss. Bridget Delia\", \" Mr. George Dennick\", \" Mrs. George Dunton (Eleanor Elkins)\", \" Mr. Alexander Morrison\", \" Miss. Florentina\", \" Mr. Harold J\", \" Mrs. (Selena Rogers)\", \" Mr. Einar Gervasius\", \" Mrs. Edward (Helen Churchill Hungerford)\", \" Mrs. George (Omine Amenia\\\" Alexander)\\\"\", \" Mr. Johan Charles\", \" Miss. Bridget\", \" Mr. Thomas James\", \" Mr. Samuel James Metcalfe\", \" Mr. George Frederick\", \" Miss. Constance\", \" Mr. Karl Johan\", \" Mr. Michael\", \" Mr. John Bradley\", \" Mr. Olof Edvin\", \" Mr. Frank Manley\", \" Mr. Raffull\", \" Miss. Marta\", \" Mrs. Walter Donald (Mahala Dutton)\", \" Mrs. Carl Johan (Sigrid Posse)\", \" Mrs. (Alice Frances)\", \" Mr. Frederic Oakley\", \" Mr. Abraham\", \" Master. William Arthur Willie\\\"\\\"\", \" Mr. Frederick R\", \" Mrs. J Frank (Claire Bennett)\", \" Mr. James Vivian\", \" Mrs. Stephen (Annie Margaret Hill)\", \" Mrs. Betros (Zahie Maria\\\" Elias)\\\"\", \" Miss. Barbara J\", \" Mr. Abraham August Johannes\", \" Mr. Walter Miller\", \" Mr. Karl Johan\", \" Mr. Linhart\", \" Mr. George William\", \" Mr. John\", \" Mr. Samuel\", \" Miss. Lilian W\", \" Mr. Karl Albert\", \" Mr. Guillaume Joseph\", \" Mr. August Ferdinand\", \" Mrs. Arthur Henry (Addie\\\" Dart Trevaskis)\\\"\", \" Miss. Gertrud Emilia\", \" Mr. Emilio Ilario Giuseppe\", \" Mr. Stanko\", \" Mr. Roderick Robert Crispin\", \" Mr. Charles William\", \" Miss. May Elizabeth\", \" Mr. Mate\", \" Mr. Thomas Francis\", \" Mr. Patrick\", \" Mrs. Walter Miller (Virginia McDowell)\", \" Miss. Mary\", \" Mr. Jean Nassr\", \" Miss. Dagmar Jenny Ingeborg \", \" Mr. Clifford Richard\", \" Mr. Harry\", \" Mr. John James\", \" Mr. Percy Thomas\", \" Miss. Jelka\", \" Master. Alfred Edward\", \" Miss. Honora\", \" Miss. Maria Youssef\", \" Miss. Salli Helena\", \" Mr. William\", \" Mr. Charles (Charles Fardon)\", \" Mr. John Pillsbury\", \" Mr. Sarkis\", \" Mr. Arthur\", \" Mr. George Alexander Lucien\", \" Miss. Margaret Marcella Maggie\\\"\\\"\", \" Mr. Mustafa\", \" Dr. Washington\", \" Mr. Camille\", \" Mr. Minko\", \" Miss. Louise\", \" Mr. Hanna\", \" Mr. Joseph Holland\", \" Mr. Nils\", \" Mr. Oscar Wilhelm\", \" Mr. Noel\", \" Mr. Escott Robert\", \" Mr. Tome\", \" Miss. Catherine Katie\\\"\\\"\", \" Mrs. Edward Gifford (Catherine Elizabeth Halstead)\", \" Mr. Hudson Joshua Creighton\", \" Master. Philip Frank\", \" Mr. Charles Melville\", \" Mrs. Claus Peter (Jennie L Howard)\", \" Mr. Jego Grga\", \" Mr. David\", \" Mr. Harry\", \" Miss. Jeannie\", \" Mrs. John Stuart (Ella Holmes)\", \" Miss. Kate\", \" Mr. William Augustus\", \" Mr. Reginald Harry\", \" Mr. Nils Hilding\", \" Mr. Ernest Wilfred\", \" Mr. Johan Samuel\", \" Mr. Neshan\", \" Mr. Israel\", \" Mr. Alfred G\", \" Miss. Emilie\", \" Mr. Ali\", \" Miss. Ruth Elizabeth\", \" Mr. George (Mr George Thorne\\\")\\\"\", \" Mr. Charles Valentine\", \" Mr. Ingvar\", \" Mrs. John Morgan (Elizabeth Agnes Mary White) \", \" Mr. William Crothers\", \" Mr. Tannous\", \" Mrs. Said (Waika Mary\\\" Mowad)\\\"\", \" Mr. Ivan\", \" Mr. John Edward\", \" Mr. Jose Joaquim\", \" Mr. Joseph\", \" Mr. Herbert\", \" Master. Seman\", \" Mr. Joseph Charles\", \" Mr. Thure Edvin\", \" Mr. John George\", \" Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \" Master. James William\", \" Miss. Karen Marie\", \" Mr. William Hull\", \" Mrs. George Joseph (Shawneene Abi-Saab)\", \" Mr. Ralph\", \" Miss. Nellie\", \" Mrs. Leo David (Blanche Strouse)\", \" Mr. Philip Joseph\", \" Mr. William\", \" Mr. Samuel\", \" Miss. Elizabeth Gladys Millvina\\\"\\\"\", \" Mr. Henry Forbes\", \" Mrs. John Murray (Caroline Lane Lamson)\", \" Mr. Edward\", \" Mr. Patrick\", \" Mrs. Edvard Bengtsson (Elin Gerda Persson)\", \" Master. William Henry\", \" Mrs. Albert (Antoinette Magnin)\", \" Mrs. John James (Florence Louise Long)\", \" Mr. Ivan\", \" Mrs. George Achilles (Dorothy Annan)\", \" Mrs. John (Annie Bullen)\", \" Mr. Joseph\", \" Miss. Susanna Juhantytar Sanni\\\"\\\"\", \" Mrs. Leonard (Pauline C Boeson)\", \" Mr. Emilio\", \" Mr. Edgar\", \" Miss. Helen Alice\", \" Mr. Joseph Bruce\", \" Mr. William H\", \" Mrs. Washington (Ruth Vidaver)\", \" Miss. Grace Scott\", \" Miss. Maria\", \" Mr. Henry Harry\\\"\\\"\", \" Mr. William Edward\", \" Master. Carl Edgar\", \" Mr. Patrick\", \" Mr. Joseph\", \" Mrs. Samuel (Emma)\", \" Mrs. Neal (Eileen O'Leary)\", \" Mr. Edwin Frederick\\\"\\\"\", \" Miss. Kate\", \" Mr. Ernst Axel Algot\", \" Mr. John\", \" Mr. Patrick\", \" Master. Paul Folke\", \" Mr. Vivian Ponsonby\", \" Mrs. Ernest H (Elizabeth Lindsey James)\", \" Master. Eugene Joseph\", \" Mr. William\", \" Mr. Anton\", \" Mrs. Lucien Philip (Mary Eloise Hughes)\", \" Mr. Patrick\", \" Mrs. Maxmillian (Margaretha Emerentia Stehli)\", \" Mr. Edvard A\", \" Mr. Thomas Henry\", \" Miss. Caroline\", \" Mr. Harry\", \" Miss. Dorothy Winifred\", \" Mr. Jose Pedro\", \" Mr. Isaac Gerald\", \" Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \" Mr. William Jeffery\", \" Mr. George Dunton\", \" Miss. Johanna Hannah\\\"\\\"\", \" Miss. Treasteall\", \" Miss. Hannah\", \" Mrs. William Edward (Lillian E Thorpe)\", \" Miss. Jenny Lovisa\", \" Mr. Woolf\", \" Dona. Fermina\", \" Mr. Simon Sivertsen\", \" Mr. Frederick\", \" Master. Michael J\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Age\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('4230dfd3-4148-4343-bdb2-23ab4eb1200a');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 69,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 40,
                "o_idx": 0
            }
        },
        {
            "source": "print(df.loc[1044])\ndf.loc[1044,\"Fare\"] = df[df[\"Pclass\"]==3][\"Fare\"].mean()",
            "mc_idx": 71,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".mean(": 1,
                    ".mean": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    41,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Survived             NaN\nPclass                 3\nName          Mr. Thomas\nSex                 male\nAge                 60.5\nSibSp                  0\nParch                  0\nTicket              3701\nFare                 NaN\nCabin                 -1\nEmbarked               S\nDeck                 N/A\nSide                 0.0\nTicket_p             N/A\nSurname            Other\nNamesakes              0\nTitle                 Mr\nKid                    0\nOld                    1\nAlone                  1\nName: 1044, dtype: object\n"
                    ]
                },
                "mc_idx": 71,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 41,
                "o_idx": 0
            }
        },
        {
            "source": "df[\"Fare\"] = df[\"Fare\"].rank(method='max')",
            "mc_idx": 72,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    42,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 72,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 42,
                "o_idx": 0
            }
        },
        {
            "source": "dfplt = df.copy(deep=True)\ndfplt[\"Survived\"] = dfplt[\"Survived\"].astype(str)\nfig = px.scatter(dfplt, x=\"Fare\", y=\"Name\", color = \"Survived\", size_max=6,\n                 width=1200, height=500,color_discrete_sequence=cm)\nfig.show()",
            "mc_idx": 73,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.5,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.5,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.5,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".scatter(": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    ".scatter(": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    43,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<div>                            <div id=\"db69a983-64de-4184-bd76-be8f3ac30abf\" class=\"plotly-graph-div\" style=\"height:500px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"db69a983-64de-4184-bd76-be8f3ac30abf\")) {                    Plotly.newPlot(                        \"db69a983-64de-4184-bd76-be8f3ac30abf\",                        [{\"hovertemplate\": \"Survived=0.0<br>Fare=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"0.0\", \"marker\": {\"color\": \"#273176\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"0.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [117.0, 421.0, 430.0, 1077.0, 785.0, 421.0, 986.0, 275.0, 954.0, 740.0, 883.0, 785.0, 75.0, 1305.0, 337.0, 930.0, 529.0, 1199.0, 1085.0, 421.0, 740.0, 470.0, 780.0, 337.0, 421.0, 700.0, 788.0, 736.0, 1045.0, 249.0, 1131.0, 99.0, 1062.0, 99.0, 1209.0, 941.0, 930.0, 425.0, 454.0, 529.0, 1062.0, 1164.0, 658.0, 141.0, 337.0, 421.0, 461.0, 1064.0, 1012.0, 421.0, 421.0, 421.0, 275.0, 1127.0, 766.0, 117.0, 421.0, 1013.0, 883.0, 337.0, 337.0, 1175.0, 433.0, 360.0, 337.0, 337.0, 1085.0, 658.0, 421.0, 488.0, 662.0, 360.0, 210.0, 780.0, 1292.0, 986.0, 1164.0, 421.0, 968.0, 1175.0, 210.0, 35.0, 337.0, 47.0, 673.0, 621.0, 678.0, 1095.0, 462.0, 1189.0, 690.0, 30.0, 542.0, 1022.0, 1012.0, 883.0, 621.0, 558.0, 421.0, 673.0, 119.0, 1129.0, 421.0, 454.0, 1153.0, 729.0, 236.0, 454.0, 1045.0, 941.0, 831.0, 1111.0, 1006.0, 954.0, 360.0, 976.0, 275.0, 827.0, 945.0, 621.0, 17.0, 1153.0, 679.0, 993.0, 1069.0, 700.0, 337.0, 621.0, 210.0, 428.0, 621.0, 483.0, 1153.0, 28.0, 75.0, 494.0, 712.0, 47.0, 117.0, 621.0, 210.0, 918.0, 529.0, 621.0, 421.0, 337.0, 469.0, 117.0, 621.0, 827.0, 236.0, 631.0, 529.0, 131.0, 883.0, 529.0, 546.0, 658.0, 529.0, 53.0, 75.0, 1219.0, 236.0, 883.0, 117.0, 494.0, 916.0, 729.0, 756.0, 210.0, 1192.0, 17.0, 210.0, 529.0, 1045.0, 979.0, 959.0, 210.0, 17.0, 954.0, 210.0, 275.0, 483.0, 883.0, 454.0, 337.0, 562.0, 458.0, 337.0, 930.0, 99.0, 1264.0, 17.0, 421.0, 813.0, 883.0, 337.0, 889.0, 643.0, 117.0, 337.0, 1153.0, 21.0, 943.0, 1267.0, 740.0, 337.0, 1140.0, 1018.0, 621.0, 621.0, 621.0, 454.0, 465.0, 1014.0, 99.0, 736.0, 75.0, 483.0, 621.0, 941.0, 930.0, 658.0, 47.0, 700.0, 117.0, 28.0, 421.0, 1253.0, 785.0, 1280.0, 19.0, 236.0, 360.0, 337.0, 1164.0, 1062.0, 145.0, 360.0, 248.0, 275.0, 883.0, 529.0, 421.0, 488.0, 712.0, 454.0, 780.0, 210.0, 236.0, 827.0, 337.0, 31.0, 17.0, 421.0, 621.0, 822.0, 337.0, 152.0, 276.0, 648.0, 756.0, 117.0, 210.0, 53.0, 1103.0, 1012.0, 1305.0, 529.0, 483.0, 236.0, 935.0, 753.0, 935.0, 421.0, 916.0, 210.0, 421.0, 1026.0, 621.0, 421.0, 47.0, 17.0, 916.0, 144.0, 117.0, 454.0, 489.0, 1085.0, 780.0, 38.0, 123.0, 1062.0, 17.0, 421.0, 827.0, 959.0, 421.0, 753.0, 117.0, 974.0, 1067.0, 421.0, 662.0, 681.0, 1264.0, 248.0, 454.0, 210.0, 135.0, 485.0, 1231.0, 797.0, 421.0, 122.0, 1007.0, 822.0, 337.0, 337.0, 75.0, 99.0, 210.0, 1284.0, 360.0, 542.0, 99.0, 99.0, 454.0, 916.0, 673.0, 986.0, 986.0, 1228.0, 883.0, 762.0, 883.0, 253.0, 916.0, 1289.0, 210.0, 337.0, 631.0, 421.0, 421.0, 822.0, 337.0, 785.0, 99.0, 421.0, 673.0, 662.0, 883.0, 1046.0, 457.0, 674.0, 421.0, 421.0, 53.0, 117.0, 210.0, 883.0, 822.0, 17.0, 75.0, 337.0, 1052.0, 421.0, 702.0, 337.0, 986.0, 47.0, 210.0, 421.0, 648.0, 729.0, 529.0, 658.0, 275.0, 729.0, 999.0, 553.0, 337.0, 152.0, 49.0, 17.0, 941.0, 360.0, 889.0, 1045.0, 729.0, 275.0, 941.0, 337.0, 131.0, 337.0, 429.0, 30.0, 1164.0, 337.0, 700.0, 621.0, 1238.0, 75.0, 828.0, 122.0, 1164.0, 621.0, 236.0, 421.0, 1085.0, 529.0, 17.0, 236.0, 421.0, 1062.0, 424.0, 465.0, 1062.0, 1033.0, 1050.0, 1045.0, 492.0, 248.0, 75.0, 916.0, 631.0, 421.0, 1235.0, 141.0, 658.0, 155.0, 275.0, 883.0, 916.0, 471.0, 621.0, 141.0, 700.0, 236.0, 49.0, 621.0, 621.0, 454.0, 883.0, 360.0, 745.0, 17.0, 621.0, 621.0, 729.0, 1012.0, 337.0, 337.0, 1183.0, 729.0, 1155.0, 759.0, 1095.0, 210.0, 483.0, 337.0, 248.0, 542.0, 421.0, 673.0, 53.0, 236.0, 1038.0, 210.0, 822.0, 427.0, 483.0, 275.0, 529.0, 75.0, 210.0, 210.0, 154.0, 966.0, 811.0, 47.0, 117.0, 954.0, 1189.0, 210.0, 883.0, 1153.0, 976.0, 337.0, 621.0, 99.0, 822.0, 621.0, 236.0, 17.0, 236.0, 621.0, 288.0, 822.0, 529.0, 986.0, 421.0, 17.0, 360.0, 1025.0, 25.0, 941.0, 17.0, 1045.0, 33.0, 1111.0, 99.0, 275.0, 426.0, 454.0, 421.0, 360.0, 529.0, 24.0, 454.0, 131.0, 1153.0, 337.0, 1005.0, 986.0, 236.0, 690.0, 883.0, 99.0, 645.0, 542.0, 1153.0, 621.0, 1071.0, 483.0, 337.0, 20.0, 461.0, 491.0, 337.0, 337.0, 337.0, 530.0, 529.0, 47.0, 954.0, 621.0, 811.0, 210.0], \"xaxis\": \"x\", \"y\": [\" Mr. Owen Harris\", \" Mr. William Henry\", \" Mr. James\", \" Mr. Timothy J\", \" Master. Gosta Leonard\", \" Mr. William Henry\", \" Mr. Anders Johan\", \" Miss. Hulda Amanda Adolfina\", \" Master. Eugene\", \" Mrs. Julius (Emelia Maria Vandemoortele)\", \" Mr. Joseph J\", \" Miss. Torborg Danira\", \" Mr. Farred Chehab\", \" Mr. Charles Alexander\", \" Mr. Lalio\", \" Don. Manuel E\", \" Mr. Edward H\", \" Mr. Edgar Joseph\", \" Mr. Alexander Oskar\", \" Mr. Ernest Charles\", \" Miss. Augusta Maria\", \" Mrs. Johan (Johanna Persdotter Larsson)\", \" Mrs. William John Robert (Dorothy Ann Wonnacott)\", \" Mr. Theodor\", \" Mr. William John\", \" Mr. Denis\", \" Mr. Youssef\", \" Mrs. Josef (Josefine Franchi)\", \" Master. Juha Niilo\", \" Mr. Richard Cater\", \" Mr. Engelhart Cornelius\", \" Mr. Mansouer\", \" Master. William Frederick\", \" Mr. Orsen\", \" Mr. Henry Birkhardt\", \" Master. Harald\", \" Mr. Albert A\", \" Mr. Ernest James\", \" Mr. Vincenz\", \" Mr. Stephen Curnow\", \" Miss. Lillian Amy\", \" Mr. Ambrose Jr\", \" Mr. Apostolos\", \" Mr. Sigurd Hansen\", \" Mr. Ivan\", \" Mr. Rahamin Haim\", \" Mr. Achille\", \" Mr. Francisco M\", \" Mr. William Neal\", \" Mr. Selman Francis\", \" Mr. Francesco\", \" Mr. Emil\", \" Mr. Paul Edvin\", \" Mr. Herbert Fuller\", \" Mr. Bertram Frank\", \" Mr. Daniel\", \" Mr. Charles Joseph\", \" Mr. George B\", \" Mr. Sinai\", \" Miss. Matilda\", \" Mr. Pastcho (\\\"Pentcho\\\")\", \" Mr. Richard Frasar\", \" Mr. Gustaf Joel\", \" Mr. Anders Vilhelm\", \" Mr. Stoytcho\", \" Mr. Tido\", \" Mr. Walter Chamberlain\", \" Miss. Hileni\", \" Mr. David John\", \" Miss. Katriina\", \" Miss. Malake\", \" Mr. Edvard\", \" Mr. Patrick\", \" Mr. William John Robert\", \" Mr. Quigg Edmond\", \" Miss. Ellis Anna Maria\", \" Mr. Stanley George\", \" Mr. Leonard Charles\", \" Mr. Nicholas\", \" Mr. Percival Wayland\", \" Mr. Martin\", \" Mr. Johan\", \" Mr. Jozef\", \" Mr. Domingos Fernandeo\", \" Mrs. Alexander A (Grace Charity Laury)\", \" Mr. Samuel James Hayden\", \" Mr. Emile\", \" Mr. Jacques Heath\", \" Mr. Olaf Elon\", \" Mr. Victor\", \" Mrs. Joseph (Sultana)\", \" Mr. Jeremiah\", \" Mr. Edgardo Samuel\", \" Mr. Joseph Charles\", \" Miss. Robina Maggie \\\"Ruby\\\"\", \" Mr. Michel (\\\"Louis M Hoffman\\\")\", \" Rev. Thomas Roussel Davids\", \" Rev. Robert James\", \" Mr. Alfonzo\", \" Mr. Austin Blyler\", \" Mr. Ole Martin\", \" Mr. Charles Duane\", \" Mr. Harry\", \" Mr. Mile\", \" Master. Thomas Henry\", \" Mr. John Hatfield\", \" Mr. John Viktor\", \" Mr. Jovo\", \" Master. Eino Viljami\", \" Mrs. William (Anna Bernhardina Karlsson)\", \" Mr. John D\", \" Mr. Lee\", \" Mr. Wyckoff\", \" Master. Arthur\", \" Mr. Antti Wilhelm\", \" Mr. James Clinch\", \" Mr. Klas Albin\", \" Master. Henry Forbes\", \" Miss. Ann Elizabeth\", \" Mr. Reginald\", \" Mr. Lionel\", \" Miss. Constance Gladys\", \" Mr. Rene\", \" Master. Clarence Gustaf Hugo\", \" Mr. Hugh Roscoe\", \" Mr. John\", \" Mr. Stjepan\", \" Mr. William\", \" Mr. Robert\", \" Mr. Karl Siegwart Andreas\", \" Miss. Henriette (\\\"Mrs Harbeck\\\")\", \" Mr. Nestor Cyriel\", \" Mr. Frederick\", \" Mr. Jakob Alfred\", \" Mr. Gerious\", \" Miss. Telma Matilda\", \" Mr. Karl Alfred\", \" Mr. Ahmed\", \" Mr. John Henry\", \" Mr. Hans Kristensen\", \" Mr. Philip\", \" Mr. Sidney Samuel\", \" Mr. Walter\", \" Mr. James H\", \" Mr. George Henry\", \" Mr. Christo\", \" Mr. Karl Ivar Sven\", \" Mr. John Hall (\\\"Henry\\\")\", \" Mr. Arne Jonas\", \" Miss. Mathilde\", \" Mr. Bengt Edvin\", \" Mr. Ernst Adolf\", \" Mr. Robert William Norman\", \" Miss. Alice Phoebe\", \" Mr. Stephen\", \" Mr. Frederick William\", \" Mr. George Henry\", \" Miss. Thamine\", \" Mr. Reginald Charles\", \" Mr. Matti Alexanteri\", \" Mr. Sleiman\", \" Dr. William Edward\", \" Miss. Agda Thorilda Viktoria\", \" Rev. Ernest Courtenay\", \" Mr. James George\", \" Mrs. Wilhelm (Elna Matilda Persson)\", \" Mr. William Thomas\", \" Mr. William Arthur\", \" Mrs. Viktor (Helena Wilhelmina)\", \" Mr. Thomas\", \" Mr. Emil\", \" Mr. William\", \" Miss. Delia\", \" Mr. David\", \" Mr. Ernesti Arvid\", \" Mr. Alexander\", \" Mr. Charles H\", \" Miss. Augusta Charlotta\", \" Mr. Francis \\\"Frank\\\"\", \" Master. Eric\", \" Mr. Frank\", \" Mr. Nils Johan Goransson\", \" Mr. Alfons\", \" Mr. Richard William\", \" Mr. Ivan\", \" Mr. Penko\", \" Mr. Rene Jacques\", \" Miss. Aloisia\", \" Mr. Ivan\", \" Mr. Ervin G\", \" Mr. Mansour\", \" Miss. Helen Loraine\", \" Mr. William Cahoone Jr\", \" Mr. Howard Hugh \\\"Harry\\\"\", \" Mr. Samuel\", \" Mrs. William (Anna Sylfven)\", \" Mr. Ignjac\", \" Mr. Benjamin\", \" Dr. Ernest\", \" Mr. Samuel\", \" Mr. Yoto\", \" Mr. George John Jr\", \" Mr. Johan Hansen\", \" Mr. Austen\", \" Mr. George Edward\", \" Mr. Leo Edmondus\", \" Mr. Mitto\", \" Mr. Thomas Clinton\", \" Mr. Stephen Weart\", \" Mr. Erik Gustaf\", \" Mr. Charles Frederick Waddington\", \" Mr. Stanley Hubert\", \" Mr. Jovan\", \" Mr. Nils Martin\", \" Mr. Fletcher Fellows\", \" Mr. Tannous\", \" Mr. Josef\", \" Mr. Wazli\", \" Mr. Leo Peter\", \" Miss. Annie Clemmer\", \" Mr. Wilhelm\", \" Mr. Sebastiano\", \" Mrs. (Catherine David)\", \" Mr. Adola\", \" Mr. Thomas\", \" Mr. Mauritz Nils Martin\", \" Mr. Jakob Alfred\", \" Mr. William Thomas\", \" Mr. Sante\", \" Miss. Stina Viola\", \" Mr. Harry Elkins\", \" Mr. Tannous\", \" Mr. Karl Gideon\", \" Mr. Juho\", \" Mr. Vasil\", \" Mr. Charles Henry\", \" Master. Sidney Leonard\", \" Mr. Matthew\", \" Mr. Johan Birger\", \" Mr. Erik\", \" Miss. Elina\", \" Mr. Peter David\", \" Dr. Alfred\", \" Mr. John\", \" Miss. Mari Aina\", \" Mr. Pekka Pietari\", \" Miss. Marija\", \" Mr. Shadrach\", \" Mr. Carl/Charles Peter\", \" Mr. Hans Martin Monsen\", \" Miss. Ida\", \" Mr. Todor\", \" Mr. Henry\", \" Mr. Alfred Fleming\", \" Mrs. Thomas (Annie Louise Rowley)\", \" Mr. William John\", \" Miss. Catharina\", \" Mr. Stanio\", \" Mr. David\", \" Mr. Leo\", \" Mrs. Ernst Gilbert (Anna Sigrid Maria Brogren)\", \" Mr. Viktor Richard\", \" Mr. Phillippe\", \" Mr. James\", \" Mr. Nikolai Erland\", \" Mr. William Baird\", \" Miss. Doolina Margaret \\\"Daisy\\\"\", \" Mr. Mark\", \" Mr. Johan Henrik Johannesson\", \" Mr. Leon\", \" Mr. Johan Emil\", \" Mr. Edwy Arthur\", \" Mr. Ingvald Olai Olsen\", \" Mr. Benjamin Laventall\", \" Mr. Joseph\", \" Mr. Francis Davis\", \" Mr. Maurice\", \" Mr. William\", \" Mr. Arthur H\", \" Mr. Jacob Christian\", \" Mr. Simon\", \" Mr. Manuel Estanslas\", \" Mr. William\", \" Mr. John Montgomery\", \" Mr. James\", \" Mr. Arthur\", \" Mr. Luka\", \" Miss. Ida Sofia\", \" Mr. George Quincy\", \" Mr. Peter Henry\", \" Mr. Lewis Richard\", \" Mr. Nils August\", \" Master. Harold Victor\", \" Mr. Anthony Wood \\\"Archie\\\"\", \" Mr. Richard Henry\", \" Miss. Jeannie\", \" Mr. Edward Austin\", \" Mr. Francis William\", \" Mr. Konrad Mathias Reiersen\", \" Mr. Einar\", \" Mr. Harry Markland\", \" Mr. Ramon\", \" Mr. Edward Roland\", \" Mr. Gerious\", \" Mr. Frederick William\", \" Mrs. Hudson J C (Bessie Waldo Daniels)\", \" Mr. Olof\", \" Mr. Petar\", \" Miss. Mary\", \" Miss. Bridget Mary\", \" Miss. Kristina Sofia\", \" Mr. Victor de Satode\", \" Mr. Henry Margido\", \" Mr. James\", \" Mr. Satio\", \" Mr. William Anderson\", \" Mr. Patrick\", \" Mr. Stefo\", \" Mr. Janko\", \" Mr. Sarkis\", \" Mr. Fared\", \" Mr. James\", \" Mr. John\", \" Mr. Johan Werner\", \" Mr. Richard George\", \" Mr. Nakli\", \" Mr. Joseph Jr\", \" Miss. Marija\", \" Major. Archibald Willingham\", \" Mr. Samuel Beard\", \" Miss. Ingeborg Constanzia\", \" Miss. Sigrid Elisabeth\", \" Mr. Walter Donald\", \" Mr. Arthur Ernest\", \" Mr. Frank John\", \" Mr. Percival James R\", \" Mr. Timothy\", \" Mr. George\", \" Mr. Victor\", \" Mr. Thomas Rowan\", \" Mr. Husein\", \" Mr. Robert Douglas\", \" Mr. John\", \" Miss. (Marion Ogden)\", \" Mr. Alfred J\", \" Mr. Ilia\", \" Mrs. Nils (Alma Cornelia Berglund)\", \" Mr. Tannous\", \" Mr. Alfred George John\", \" Mr. George\", \" Mrs. Joseph (Maria Elias)\", \" Mr. William James\", \" Mr. John Hugo\", \" Mr. Uscher\", \" Mr. John Denzil\", \" Mr. Eliezer\", \" Mr. Joseph\", \" Mr. Matti\", \" Mr. William James\", \" Miss. Mary\", \" Mr. John Henry\", \" Mr. Jean Baptiste\", \" Mr. Alfred\", \" Mr. Hanna\", \" Mr. Petco\", \" Mr. Charles H\", \" Mr. Ernst William\", \" Mr. Edvard Bengtsson\", \" Mr. Milan\", \" Mrs. Anders Johan (Alfrida Konstantia Brogren)\", \" Mr. Jose Neto\", \" Mr. John\", \" Mr. William Alfred\", \" Mr. Ernst Gilbert\", \" Mrs. William Arthur (Cordelia K Stanlick)\", \" Mr. Lawrence\", \" Mr. Antoni\", \" Mr. Henry Damsgaard\", \" Mr. David John \\\"Dai\\\"\", \" Mr. Frederick\", \" Rev. Charles Leonard\", \" Mr. Guentcho\", \" Mr. Patrick D\", \" Mr. Johan Svensson\", \" Mr. William Henry Marsh\", \" Miss. Mabel\", \" Mr. Antti Gustaf\", \" Mr. Harvey\", \" Mrs. Juha (Maria Emilia Ojala)\", \" Mr. Percival\", \" Mr. Hans Peder\", \" Miss. Margit Elizabeth\", \" Mr. Liudevit\", \" Mr. Edward\", \" Mr. Mito\", \" Mr. Johannes Halvorsen\", \" Miss. Hanora \\\"Nora\\\"\", \" Mr. Leonard Mark\", \" Mr. Alexander\", \" Mrs. John (Catherine)\", \" Mr. George Floyd\", \" Mr. Arthur Webster\", \" Mr. Mohamed\", \" Mr. Edward Pomeroy\", \" Mr. Peju\", \" Mr. Lewis\", \" Mr. Reginald Fenton\", \" Mr. Knud Paust\", \" Mr. Jacob\", \" Mr. Thornton\", \" Mr. Henry Michael\", \" Mr. Ennis Hastings\", \" Mr. Gustaf Hjalmar\", \" Mr. Frederick Charles\", \" Mrs. Frederick (Augusta Tyler)\", \" Miss. Katie\", \" Mr. Thor Anderson\", \" Mr. Charles Edward\", \" Mr. Thomas William Solomon\", \" Mr. Joseph Philippe Lemercier\", \" Mr. Jaako Arnold\", \" Mr. Branko\", \" Mr. Eberhard Thelander\", \" Mr. Khalil\", \" Col. John\", \" Mr. Charles Henry\", \" Mr. James\", \" Mr. John Borland\", \" Mr. Adolf Mathias Nicolai Olsen\", \" Miss. Saiide\", \" Mr. Martin\", \" Mr. Henrik Juul\", \" Mr. Henry Samuel (\\\"Mr Henry Marshall\\\")\", \" Mr. Herman\", \" Mr. August Viktor\", \" Mr. Samuel\", \" Mr. Peter Andreas Lauritz Andersen\", \" Mr. Michael\", \" Mr. Malkolm Joackim\", \" Mr. Svend Lauritz\", \" Mr. William Henry\", \" Mr. Henry Price\", \" Mr. Luka\", \" Mr. Kurt Arnold Gottfrid\", \" Miss. Pieta Sofia\", \" Mr. Houssein G N\", \" Mr. Robert J\", \" Mr. William John\", \" Mr. Moses Aaron\", \" Mr. Leslie\", \" Mrs. Edward (Margaret Ann Watson)\", \" Mr. Kanio\", \" Mr. Minko\", \" Mr. Tyrell William\", \" Mr. Neal\", \" Capt. Edward Gifford\", \" Mr. Rossmore Edward\", \" Mr. Daniel Warner\", \" Mr. Michael\", \" Mr. Johannes Joseph\", \" Mr. Lalio\", \" Mr. August Sigfrid\", \" Mr. Percy Andrew\", \" Mr. Thomas Leonard\", \" Mr. John\", \" Mr. Iisakki Antino Aijo\", \" Mr. Hans Linus\", \" Dr. Arthur Jackson\", \" Miss. Mary\", \" Mr. Daniel J\", \" Mr. Daniel Danielsen\", \" Mr. Rene Aime\", \" Mr. Niels Peder\", \" Mrs. (Mary)\", \" Mr. Dibo\", \" Mr. Pehr Fabian Oliver Malkolm\", \" Mr. Roger\", \" Mr. Thomas J\", \" Mr. Milton Clyde\", \" Mr. Andrew G\", \" Mr. William\", \" Mr. Abraham (David Lishin)\", \" Master. George Hugh\", \" Mr. Benjamin\", \" Mr. Andrew \\\"Andy\\\"\", \" Mr. Alfred\", \" Miss. Stella Anna\", \" Mr. William Fisher\", \" Mr. Ristiu\", \" Mr. Richard\", \" Mr. Yousseff\", \" Mrs. Jean Baptiste (Rosalie Paula Govaert)\", \" Mr. Martin\", \" Mr. Karl Johan\", \" Mr. Thomas Jr\", \" Miss. Ellen Natalia\", \" Mr. August\", \" Mr. William\", \" Mr. James\", \" Mr. Richard James\", \" Miss. Ebba Iris Alfrida\", \" Mr. Ernest Portage\", \" Mr. Richard\", \" Miss. Wendla Maria\", \" Mr. Albert\", \" Mr. John Fredrik Alexander\", \" Master. Karl Thorsten\", \" Jonkheer. John George\", \" Master. Urho Abraham\", \" Mr. John\", \" Mr. Len\", \" Mr. Amin\", \" Mr. Albert\", \" Mr. Owen George\", \" Mr. Jakob\", \" Mr. Maurice\", \" Mr. Ilmari Rudolf\", \" Mr. Thomas Charles\", \" Mr. Peter L\", \" Mr. Jeso\", \" Mr. Anthony\", \" Mr. Douglas Bullen\", \" Mr. Marin\", \" Rev. John\", \" Master. Sigvard Harald Elias\", \" Mr. Johan\", \" Miss. Nourelain\", \" Mrs. Ernest Courtenay (Lilian Hughes)\", \" Mr. Raihed\", \" Mr. Claus Peter\", \" Mr. Frederick Edward\", \" Miss. Dorothy Edith \\\"Dolly\\\"\", \" Mr. John William\", \" Mr. Washington Augustus II\", \" Mr. Philemon\", \" Mr. Cerin\", \" Mr. Frans Olof\", \" Mr. Victor\", \" Mr. Alfred Ossian\", \" Mr. Nedelio\", \" Mr. Kristo\", \" Mr. Johann\", \" Miss. Gerda Ulrika\", \" Mr. Frederick James\", \" Mr. Henry Jr\", \" Mrs. William (Margaret Norton)\", \" Rev. Juozas\", \" Miss. Catherine Helen \\\"Carrie\\\"\", \" Mr. Patrick\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=1.0<br>Fare=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"1.0\", \"marker\": {\"color\": \"#3B61A3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"1.0\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [1157.0, 360.0, 1095.0, 534.0, 968.0, 732.0, 916.0, 717.0, 621.0, 75.0, 621.0, 361.0, 1018.0, 993.0, 286.0, 1258.0, 210.0, 99.0, 536.0, 1050.0, 286.0, 210.0, 1173.0, 883.0, 1018.0, 529.0, 935.0, 1194.0, 690.0, 529.0, 360.0, 1111.0, 948.0, 557.0, 483.0, 238.0, 529.0, 712.0, 1305.0, 1133.0, 804.0, 141.0, 236.0, 822.0, 621.0, 536.0, 54.0, 794.0, 883.0, 890.0, 210.0, 712.0, 248.0, 1140.0, 152.0, 708.0, 762.0, 1097.0, 534.0, 1033.0, 791.0, 700.0, 916.0, 621.0, 275.0, 883.0, 930.0, 1258.0, 210.0, 421.0, 745.0, 210.0, 979.0, 780.0, 1238.0, 360.0, 1170.0, 421.0, 1219.0, 529.0, 1209.0, 993.0, 889.0, 700.0, 673.0, 1089.0, 690.0, 1189.0, 1212.0, 1309.0, 883.0, 993.0, 236.0, 1267.0, 1253.0, 17.0, 751.0, 210.0, 1178.0, 759.0, 421.0, 483.0, 621.0, 210.0, 1183.0, 1221.0, 974.0, 1292.0, 210.0, 807.0, 553.0, 1264.0, 1235.0, 1231.0, 1113.0, 1207.0, 1299.0, 275.0, 883.0, 1271.0, 1249.0, 553.0, 948.0, 1253.0, 621.0, 762.0, 1119.0, 807.0, 1244.0, 1249.0, 421.0, 883.0, 1305.0, 621.0, 621.0, 729.0, 715.0, 1097.0, 286.0, 286.0, 1168.0, 99.0, 210.0, 1142.0, 1101.0, 1199.0, 117.0, 1289.0, 706.0, 1085.0, 621.0, 543.0, 1242.0, 248.0, 1238.0, 732.0, 559.0, 360.0, 743.0, 1219.0, 360.0, 1002.0, 621.0, 883.0, 883.0, 421.0, 916.0, 729.0, 883.0, 1242.0, 743.0, 889.0, 621.0, 423.0, 1197.0, 751.0, 916.0, 749.0, 974.0, 1214.0, 337.0, 1077.0, 529.0, 916.0, 749.0, 935.0, 635.0, 548.0, 485.0, 1221.0, 1219.0, 715.0, 1180.0, 1212.0, 883.0, 916.0, 1111.0, 210.0, 893.0, 1123.0, 529.0, 883.0, 1225.0, 1119.0, 529.0, 883.0, 794.0, 889.0, 1228.0, 1065.0, 1155.0, 883.0, 883.0, 640.0, 1022.0, 1235.0, 75.0, 236.0, 1038.0, 1192.0, 734.0, 275.0, 529.0, 1073.0, 894.0, 210.0, 621.0, 1103.0, 360.0, 966.0, 1235.0, 1192.0, 1189.0, 1180.0, 1005.0, 1113.0, 918.0, 916.0, 974.0, 1050.0, 1267.0, 700.0, 1138.0, 1033.0, 1089.0, 706.0, 1178.0, 966.0, 974.0, 621.0, 1142.0, 1111.0, 749.0, 1173.0, 1018.0, 131.0, 804.0, 253.0, 1244.0, 360.0, 1085.0, 1033.0, 621.0, 490.0, 1309.0, 1173.0, 1275.0, 1115.0, 624.0, 1111.0, 152.0, 1289.0, 893.0, 631.0, 893.0, 1264.0, 690.0, 1067.0, 1085.0, 1289.0, 529.0, 1005.0, 1095.0, 780.0, 154.0, 1275.0, 1309.0, 966.0, 1299.0, 360.0, 621.0, 804.0, 557.0, 1138.0, 673.0, 1212.0, 99.0, 1242.0, 1178.0, 804.0, 557.0, 1275.0, 99.0, 1115.0, 122.0, 766.0, 833.0, 455.0, 889.0, 1242.0, 432.0, 35.0, 1095.0, 1225.0, 454.0, 557.0, 1025.0, 210.0, 1194.0, 658.0, 743.0, 1207.0, 1111.0, 959.0, 979.0, 1214.0, 1035.0, 469.0, 1271.0, 916.0, 749.0, 833.0, 621.0, 638.0, 534.0, 1089.0, 813.0, 75.0, 1207.0, 883.0, 966.0, 966.0], \"xaxis\": \"x\", \"y\": [\" Mrs. John Bradley (Florence Briggs Thayer)\", \" Miss. Laina\", \" Mrs. Jacques Heath (Lily May Peel)\", \" Mrs. Oscar W (Elisabeth Vilhelmina Berg)\", \" Mrs. Nicholas (Adele Achem)\", \" Miss. Marguerite Rut\", \" Miss. Elizabeth\", \" Mrs. (Mary D Kingcome) \", \" Mr. Charles Eugene\", \" Mrs. Fatima\", \" Mr. Lawrence\", \" Miss. Anna \\\"Annie\\\"\", \" Mr. William Thompson\", \" Mrs. Carl Oscar (Selma Augusta Emilia Johansson)\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. William Augustus (Marie Eugenie)\", \" Miss. Mary Agatha\", \" Mr. Hanna\", \" Miss. Jamila\", \" Miss. Simonne Marie Anne Andree\", \" Miss. Margaret Delia\", \" Miss. Bridget\", \" Mrs. Henry Sleeper (Myna Haxtun)\", \" Mrs. Lizzie (Elizabeth Anne Wilkinson)\", \" Mr. Hugh\", \" Miss. Emily\", \" Miss. Constance Mirium\", \" Miss. Amelie\", \" Master. Gerios\", \" Mrs. (Elizabeth Ramell)\", \" Miss. Erna Alexandra\", \" Mr. Lee\", \" Master. Alden Gates\", \" Miss. Elizabeth\", \" Mr. Jan Baptist\", \" Miss. Brigdet Delia\", \" Miss. Bertha\", \" Mrs. Karl Alfred (Maria Mathilda Gustafsson)\", \" Miss. Mabel Helen\", \" Mr. William Bertram\", \" Mrs. John T (Ada Julia Bone)\", \" Miss. Anna Kristine\", \" Mr. Albert Johan\", \" Miss. Bertha\", \" Miss. Susan\", \" Master. Elias\", \" Mr. Fridtjof Arne\", \" Miss. Anna\", \" Mrs. Leopold (Mathilde Francoise Pede)\", \" Miss. Helen Monypeny\", \" Miss. Anna Sofia\", \" Mrs. Pekka Pietari (Elin Matilda Dolck)\", \" Mr. August Edvard (\\\"Wennerstrom\\\")\", \" Mrs. Thomas (Edith Wearne)\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. James (Elizabeth \\\"Bessie\\\" Inglis Milne)\", \" Master. Frank John William \\\"Frankie\\\"\", \" Mrs. (Edith Martha Bowerman)\", \" Miss. Eleanor Ileen\", \" Master. Richard F\", \" Miss. Luise Gretchen\", \" Mrs. Thomas (Johanna \\\"Hannah\\\" Godfrey)\", \" Mr. Charles Hallace (\\\"Mr C Rolmane\\\")\", \" Mrs. (Rosa)\", \" Miss. Carla Christine Nielsine\", \" Master. Michel M\", \" Mrs. James Joseph (Margaret Tobin)\", \" Miss. Elise\", \" Miss. Margaret \\\"Maggie\\\"\", \" Mr. Gurshon \\\"Gus\\\"\", \" Mr. Nassef Cassem\", \" Miss. Helen \\\"Ellen\\\"\", \" Mr. Henry\", \" Miss. Clear Annie\", \" Miss. Madeleine\", \" Miss. Eliina\", \" Miss. Albina\", \" Mr. Victor Francis\", \" Mr. Frederick Maxfield\", \" Mr. William John\", \" Mrs. Henry Birkhardt (Irene Wallach)\", \" Miss. Lillian Gertrud\", \" Miss. Marjorie \\\"Lottie\\\"\", \" Miss. Katherine \\\"Kate\\\"\", \" Mrs. William (Anna)\", \" Mr. Richard Leonard\", \" Mrs. Darwis (Hanne Youssef Razi)\", \" Mrs. Gertrude Maybelle\", \" Miss. Gladys\", \" Miss. Anna\", \" Mrs. (Lutie Davis)\", \" Master. Edvin Rojj Felix\", \" Mr. Ernst Ulrik\", \" Mrs. William Thompson (Edith Junkins)\", \" Miss. Amelia\", \" Mr. William Henry\", \" Mrs. (Elizabeth Anne Maidment)\", \" Miss. Hanora \\\"Nora\\\"\", \" Miss. Kornelia Theodosia\", \" Mrs. Stanton (Rosa Hunt)\", \" Mr. Edward Arthur\", \" Mr. Theodore\", \" Mr. Masabumi\", \" Miss. Kate\", \" Miss. Ellen \\\"Nellie\\\"\", \" Mrs. Dickinson H (Helen Walton)\", \" Mr. Adolphe\", \" Mrs. James (Helene DeLaudeniere Chaput)\", \" Miss. Anna Katherine \\\"Annie Kate\\\"\", \" Mr. Bernard\", \" Miss. Nora A\", \" Master. Hudson Trevor\", \" Miss. Margaret\", \" Mrs. Victor de Satode (Maria Josefa Perez de Soto y Vallejo)\", \" Miss. Laura Mabel\", \" Miss. Margaret Bechstein\", \" Miss. Emily Borie\", \" Miss. Helmina Josefina\", \" Mrs. Sinai (Miriam Sternin)\", \" Miss. Mary Natalie\", \" Mrs. Frederic Oakley (Margaretta Corning Stone)\", \" Miss. Hilda Mary\", \" Mrs. Albert Francis (Sylvia Mae Harbaugh)\", \" Miss. Marie Grice\", \" Mrs. (Ada E Hall)\", \" Mrs. Frank John (Emily Alice Brown)\", \" Miss. Jean Gertrude\", \" Miss. Agnes\", \" Mrs. Henry William (Clara Heinsheimer)\", \" Miss. Elizabeth Margaret\", \" Mr. Karl Edwart\", \" Master. Edmond Roger\", \" Miss. Alice Elizabeth\", \" Miss. Amelia \\\"Mildred\\\"\", \" Miss. Marion Elsie\", \" Mrs. Thomas Henry (Mary E Finck)\", \" Master. William Loch \\\"William\\\"\", \" Miss. Elsie Edith\", \" Miss. Mary\", \" Miss. Helen Mary \\\"Ellie\\\"\", \" Mrs. Frank Manley (Anna Sophia Atkinson)\", \" Mrs. (Mantoura Boulos)\", \" Miss. Annie\", \" Mme. Leontine Pauline\", \" Mr. George Achilles\", \" Mrs. Edgar Joseph (Leila Saks)\", \" Miss. Aurora Adelia\", \" Miss. Rosalie\", \" Miss. Maria (\\\"Mary\\\")\", \" Mrs. Alexander Oskar (Mary Aline Towner)\", \" Miss. Kate\", \" Miss. Bertha\", \" Mr. William Ernest\", \" Mr. Carl Olof\", \" Miss. Marjorie\", \" Mrs. Hjalmar (Agnes Charlotta Bengtsson)\", \" Mrs. William H (Jessie L)\", \" Mr. Juha\", \" Master. William Rowe\", \" Miss. Daisy E\", \" Mr. Johan Julian\", \" Mrs. James Vivian (Lulu Thorne Christian)\", \" Miss. Lyyli Karoliina\", \" Mrs. Charles V (Ada Maria Winfield)\", \" Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\", \" Mr. Berk (Berk Trembisky)\", \" Mr. Mauritz Hakan\", \" Mrs. Percival (Florence Kate White)\", \" Mrs. Charles Alexander (Alice Adelaide Slow)\", \" Miss. Lucile Polk\", \" Mrs. Sidney (Emily Hocking)\", \" Mrs. Benjamin (Esther Ada Bloomfield)\", \" Ms. Encarnacion\", \" Mr. Bernt\", \" Master. Washington\", \" Miss. Madeleine Violet\", \" Mr. Frederic Kimber\", \" Miss. Marie Catherine\", \" Major. Arthur Godfrey\", \" Mr. Samuel L\", \" Mr. Ivan\", \" Mrs. Frederick R (Marion)\", \" Miss. Ellen\", \" Mr. Harry\", \" Miss. Helene Barbara\", \" Mrs. Edwy Arthur (Ada Mary Worth)\", \" Mrs. Amin S (Marie Marthe Thuillard)\", \" Miss. Hildur E\", \" Mrs. (Hedwig)\", \" Mr. Dickinson H\", \" Mrs. Frederick Maxfield (Jane Anne Forby)\", \" Master. Eden Leslie \\\"Neville\\\"\", \" Miss. Elizabeth Mussey\", \" Miss. Roberta\", \" Mrs. Frederick Charles (Jane Richards)\", \" Mr. George (\\\"George Arthur Brayton\\\")\", \" Mr. Fang\", \" Mr. Eugene Patrick\", \" Mr. James Robert\", \" Mrs. Martin (Elizabeth L. Barrett)\", \" Mrs. (Amelia Milley)\", \" Mrs. William A (Florence \\\"Mary\\\" Agnes Hughes)\", \" Miss. Anne\", \" Mrs. Louis Albert (Ida Sophia Fischer)\", \" Miss. Lucy\", \" Miss. Phyllis May\", \" Mrs. Catherine (Catherine Rizk)\", \" Miss. Eva Miriam\", \" Miss. Bertha\", \" Miss. Hedwig Margaritha\", \" Miss. Harriet R\", \" Mr. Edward\", \" Mrs. Edward (Ethel Clarke)\", \" Mr. Julian\", \" Master. John Morgan Jr\", \" Mr. John Borland Jr\", \" Mr. Fahim (\\\"Philip Zenni\\\")\", \" Miss. Velin\", \" Lady. (Lucille Christiana Sutherland) (\\\"Mrs Morgan\\\")\", \" Mrs. Emil (Tillie Mandelbaum)\", \" Mrs. Guillaume Joseph (Emma)\", \" Mr. Carl\", \" Mr. George\", \" Mrs. Edward Dale (Charlotte Lamson)\", \" Mr. John Irwin (\\\"Irving\\\")\", \" Miss. Mary\", \" Miss. Ethel\", \" Mrs. William Baird (Alice Munger)\", \" Mr. Eiriik\", \" Miss. Julie Rachel\", \" Mrs. John Borland (Marian Longstreth Morris)\", \" Miss. Ruth\", \" Mr. Maxmillian\", \" Mrs. Walter Bertram (Martha Eustis)\", \" Miss. Jessie Wills\", \" Sir. Cosmo Edmund (\\\"Mr Morgan\\\")\", \" Mrs. Sidney Samuel (Amy Frances Christy)\", \" Mr. Harry (\\\"Mr E Haven\\\")\", \" Mr. Robert Williams\", \" Mrs. Joseph (Juliette Marie Louise Lafargue)\", \" Miss. Elizabeth W\", \" Miss. Margaret Jane\", \" Miss. Alice\", \" Miss. Marion Louise\", \" Mr. Edwin Nelson Jr\", \" Mr. Sahid\", \" Miss. Gretchen Fiske\", \" Mr. Algernon Henry Wilson\", \" Dr. Max\", \" Miss. Mary\", \" Mlle. Emma\", \" Mr. Choong\", \" Miss. Eugenie\", \" Mr. Henry Sleeper\", \" Col. Oberst Alfons\", \" Miss. Amy Zillah Elsie\", \" Miss. Elsie\", \" Miss. Hanora \\\"Norah\\\"\", \" Dr. Henry William\", \" Mr. Eino William\", \" Mrs. Elmer Zebley (Juliet Cummins Wright)\", \" Mrs. Thomas William Solomon (Elizabeth Catherine Ford)\", \" Mr. Charles\", \" Miss. Anna Sofia\", \" Mr. Thomas Drake Martinez\", \" Mr. Hammad\", \" Miss. Georgette Alexandra\", \" Mr. Albert Adrian\", \" Miss. Manca\", \" Mr. Ali\", \" Miss. Katherine \\\"Katie\\\"\", \" Mrs. John Jacob (Madeleine Talmadge Force)\", \" Mr. Spencer Victor\", \" Mrs. Florence \\\"Fannie\\\"\", \" Mr. Edward Pennington\", \" Miss. Alice\", \" Master. Halim Gonios (\\\"William George\\\")\", \" Mlle. Berthe Antonine (\\\"Mrs de Villiers\\\")\", \" Mr. Elmer Zebley\", \" Miss. Caroline Louise\", \" Miss. Edwina Celia \\\"Winnie\\\"\", \" Miss. Annie Jessie \\\"Nina\\\"\", \" Mr. Norman Campbell\", \" Mrs. Peter Henry (Lillian Jefferys)\", \" Miss. Margareth\", \" Miss. Elisabeth Walton\", \" Mr. Gustave J\", \" Mr. Walter James\", \" Miss. Susan Parker \\\"Suzette\\\"\", \" Mr. Juho\", \" Miss. Anna\", \" Miss. Joan\", \" Master. Meier\", \" Mrs. Samuel (Jane Laver)\", \" Master. Viljo\", \" the Countess. of (Lucy Noel Martha Dyer-Edwards)\", \" Mr. Hanna Assi\", \" Mrs. William Ernest (Lucile Polk)\", \" Mrs. John C (Anna Andrews)\", \" Mrs. Elizabeth (Eliza Needs)\", \" Miss. Virginia Ethel\", \" Mrs. Edward Scott (Elisabeth Walton McMillan)\", \" Miss. Banoura\", \" Mrs. Albert Adrian (Vera Gillespie)\", \" Miss. Anna Sofia\", \" Master. Bertram Vere\", \" Dr. Alice (Farnham)\", \" Mrs. Mara\", \" Mrs. Harvey (Charlotte Annie Tate)\", \" Master. William Thornton II\", \" Master. Assad Alexander\", \" Mr. Oskar Arvid\", \" Mrs. Norman Campbell (Bertha Griggs)\", \" Mrs. Charles Melville (Clara Jennings Gregg)\", \" Mr. Nikola\", \" Mrs. (Beila)\", \" Master. Andre\", \" Mr. Thomas Joseph\", \" Mrs. George Nelson (Martha Evelyn)\", \" Mrs. Antoni (Selini Alexander)\", \" Master. George Sibley\", \" Miss. Sara Rebecca\", \" Mr. Chang\", \" Mr. Pierre\", \" Miss. Augusta\", \" Mrs. Samuel L (Edwiga Grabowska)\", \" Miss. Mary Conover\", \" Mrs. Sam (Leah Rosen)\", \" Mrs. George Dennick (Mary Hitchcock)\", \" Mr. Peter Denis \", \" Mrs. Solomon (Latifa Qurban)\", \" Mrs. Frederick Joel (Margaret Welles Barron)\", \" Mrs. (Karolina)\", \" Miss. Asuncion\", \" Master. Harold Theodor\", \" Mrs. Richard Leonard (Sallie Monypeny)\", \" Mrs. Samuel (Hannah Wizosky)\", \" Miss. Adele Kiamie \\\"Jane\\\"\", \" Mrs. Thomas Jr (Lily Alexenia Wilson)\", \" Mrs. William (Imanita Parrish Hall)\", \" Miss. Margaret Edith\", \" Mr. Karl Howell\"], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Survived=nan<br>Fare=%{x}<br>Name=%{y}<extra></extra>\", \"legendgroup\": \"nan\", \"marker\": {\"color\": \"#76A4AC\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"nan\", \"showlegend\": true, \"type\": \"scattergl\", \"x\": [253.0, 37.0, 486.0, 454.0, 548.0, 465.0, 135.0, 948.0, 99.0, 822.0, 337.0, 883.0, 1201.0, 883.0, 1127.0, 930.0, 553.0, 75.0, 360.0, 75.0, 1123.0, 18.0, 998.0, 1129.0, 1299.0, 673.0, 1131.0, 75.0, 974.0, 788.0, 883.0, 996.0, 766.0, 811.0, 1117.0, 99.0, 421.0, 454.0, 483.0, 1111.0, 624.0, 916.0, 254.0, 621.0, 1089.0, 360.0, 959.0, 210.0, 1170.0, 715.0, 1125.0, 675.0, 804.0, 1305.0, 703.0, 954.0, 337.0, 141.0, 729.0, 1299.0, 337.0, 631.0, 210.0, 144.0, 1299.0, 780.0, 286.0, 1052.0, 944.0, 1305.0, 210.0, 337.0, 360.0, 930.0, 1280.0, 1280.0, 421.0, 829.0, 621.0, 210.0, 690.0, 1284.0, 883.0, 337.0, 531.0, 658.0, 286.0, 421.0, 210.0, 804.0, 642.0, 236.0, 1085.0, 421.0, 883.0, 248.0, 1183.0, 360.0, 275.0, 421.0, 1101.0, 883.0, 210.0, 236.0, 432.0, 797.0, 250.0, 210.0, 457.0, 621.0, 678.0, 237.0, 997.0, 118.0, 1284.0, 658.0, 24.0, 732.0, 1166.0, 883.0, 708.0, 210.0, 1117.0, 117.0, 210.0, 729.0, 248.0, 807.0, 621.0, 421.0, 421.0, 943.0, 827.0, 24.0, 337.0, 275.0, 75.0, 621.0, 421.0, 1062.0, 1062.0, 1264.0, 1299.0, 883.0, 916.0, 740.0, 1077.0, 421.0, 916.0, 883.0, 1207.0, 337.0, 622.0, 545.0, 993.0, 131.0, 1284.0, 275.0, 916.0, 634.0, 152.0, 690.0, 631.0, 37.0, 621.0, 791.0, 1071.0, 1012.0, 930.0, 459.0, 131.0, 75.0, 642.0, 99.0, 993.0, 1033.0, 1022.0, 1101.0, 1033.0, 1207.0, 621.0, 1207.0, 1095.0, 210.0, 1292.0, 717.0, 780.0, 421.0, 1153.0, 621.0, 883.0, 883.0, 673.0, 553.0, 1002.0, 275.0, 1249.0, 236.0, 529.0, 423.0, 700.0, 648.0, 1289.0, 883.0, 529.0, 830.0, 210.0, 529.0, 930.0, 337.0, 797.0, 47.0, 1164.0, 883.0, 236.0, 1053.0, 286.0, 1271.0, 1280.0, 421.0, 638.0, 421.0, 529.0, 248.0, 919.0, 690.0, 248.0, 210.0, 681.0, 621.0, 1138.0, 916.0, 28.0, 286.0, 1157.0, 275.0, 1168.0, 75.0, 621.0, 1228.0, 930.0, 966.0, 1249.0, 288.0, 811.0, 1077.0, 780.0, 1002.0, 883.0, 658.0, 935.0, 360.0, 1255.0, 466.0, 483.0, 131.0, 210.0, 421.0, 621.0, 236.0, 734.0, 275.0, 804.0, 545.0, 560.0, 337.0, 17.0, 131.0, 421.0, 454.0, 1166.0, 210.0, 1255.0, 700.0, 75.0, 883.0, 529.0, 883.0, 780.0, 529.0, 454.0, 634.0, 210.0, 690.0, 756.0, 117.0, 117.0, 1201.0, 99.0, 421.0, 1038.0, 33.0, 99.0, 1197.0, 483.0, 337.0, 1050.0, 788.0, 1054.0, 275.0, 236.0, 678.0, 780.0, 454.0, 210.0, 916.0, 1264.0, 469.0, 1225.0, 645.0, 454.0, 75.0, 132.0, 210.0, 1253.0, 152.0, 1258.0, 529.0, 275.0, 996.0, 236.0, 99.0, 621.0, 916.0, 1275.0, 47.0, 1033.0, 1189.0, 883.0, 621.0, 1022.0, 959.0, 75.0, 706.0, 337.0, 883.0, 621.0, 99.0, 996.0, 99.0, 529.0, 133.0, 1153.0, 1309.0, 673.0, 141.0, 621.0, 99.0, 631.0, 780.0, 1133.0, 529.0, 1164.0, 1138.0, 766.0, 883.0, 1073.0, 286.0, 210.0, 702.0, 1153.0, 1025.0, 780.0, 454.0, 1101.0, 1153.0, 662.0, 1045.0, 1123.0, 638.0, 542.0, 1249.0, 17.0, 621.0, 1197.0, 1299.0, 454.0, 542.0, 1069.0, 993.0, 210.0, 286.0, 673.0, 729.0, 562.0, 1138.0, 236.0, 621.0, 210.0, 785.0, 1225.0, 1035.0, 759.0, 529.0, 791.0, 1125.0, 117.0, 1189.0, 236.0, 152.0, 1271.0, 780.0, 1123.0, 1064.0, 930.0, 640.0, 529.0, 1280.0, 142.0, 634.0, 210.0, 1219.0, 236.0, 421.0, 1231.0, 117.0, 421.0, 794.0], \"xaxis\": \"x\", \"y\": [\" Mr. James\", \" Mrs. James (Ellen Needs)\", \" Mr. Thomas Francis\", \" Mr. Albert\", \" Mrs. Alexander (Helga E Lindqvist)\", \" Mr. Johan Cervin\", \" Miss. Kate\", \" Mr. Albert Francis\", \" Mrs. Joseph (Sophie Halaut Easu)\", \" Mr. John Samuel\", \" Mr. Ylio\", \" Mr. Charles Cresson\", \" Mrs. John Pillsbury (Nelle Stevenson)\", \" Mr. Benjamin\", \" Mrs. Herbert Fuller (Carrie Constance Toogood)\", \" Mrs. Sebastiano (Argenia Genovesi)\", \" Mr. Daniel\", \" Mr. Gerios\", \" Miss. Ida Livija\", \" Mrs. Mariana (Miriam\\\")\\\"\", \" Mr. Martin\", \" Master. Artur Karl\", \" Mrs. Alfred (Antoinette)\", \" Mr. Richard Norris II\", \" Mrs. Arthur Larned (Emily Maria Borie)\", \" Mr. Alexander A\", \" Miss. Helene Ragnhild\", \" Mr. Shedid\", \" Mr. John Bertram\", \" Mr. Elias\", \" Mr. Charles Alexander\", \" Mr. Clifford Thomas\", \" Mrs. Bertram (Eva Georgetta Light)\", \" Mrs. Andrew G (Elizabeth Lily\\\" Watson)\\\"\", \" Mr. Philipp Edmund\", \" Mr. Vassilios (Catavelas Vassilios\\\")\\\"\", \" Miss. Sarah A\", \" Miss. Manda\", \" Mr. Julius\", \" Mr. Ling\", \" Mr. Franz\", \" Mr. Thomas Parham\", \" Mr. Nathan\", \" Mrs. Walter H (Irene Colvin)\", \" Mrs. Edwin Nelson Jr (Gertrude Parsons)\", \" Mr. Nikolai Johannes\", \" Mr. Paul Romaine\", \" Mr. Patrick\", \" Mrs. William Robert (Emma Eliza Ward)\", \" Mrs. William (Winnie Minnie\\\" Treanor)\\\"\", \" Mr. Lucien Philip\", \" Mr. Franz\", \" Miss. Ellen Nellie\\\"\\\"\", \" Miss. Ethel Flora\", \" Mr. Serafino Emilio\", \" Master. Albert\", \" Mr. Bartol\", \" Mr. Olaus Jorgensen\", \" Mr. Thomas Henry\", \" Miss. Victorine\", \" Mr. Mirko\", \" Mr. Arthur Gordon\", \" Mr. Ernst Herbert\", \" Miss. Bridget Delia\", \" Master. John Borie\", \" Mrs. Percy C (Mary Phyllis Elizabeth Miller)\", \" Miss. Mary Delia\", \" Mr. Clarence Bloomfield\", \" Mr. Gilbert Milligan Jr\", \" Mrs. Mark (Mary McDougald)\", \" Miss. Bertha E\", \" Mr. Lazar\", \" Miss. Manta Josefina\", \" Mr. Servando\", \" Miss. Amalie\", \" Mr. Edwin\", \" Mr. Frank\", \" Mrs. Robert Clifford (Malvina Helen Lamson)\", \" Mr. Charles Augustus\", \" Miss. Elizabeth\", \" Master. Akar\", \" Mr. Isidor\", \" Mr. Howard Brown\", \" Mr. Marinko\", \" Mr. John Joseph\", \" Mr. Betros\", \" Miss. Julia\", \" Miss. Emily Louisa\", \" Ms. Bridget\", \" Master. Ralph Lester\", \" Mrs. Adolf Fredrik (Anna Elisabeth Judith Andersson)\", \" Mr. Olaf\", \" Mrs. Thornton (Orian Hays)\", \" Mr. Robert\", \" Mr. Jakob\", \" Mr. Gunnar Isidor\", \" Mrs. Tyrell William (Julia Florence Siegel)\", \" Mr. Kalle Edvard\", \" Miss. Elin Ester Maria\", \" Mr. William Henry\", \" Mrs. Charles Emil Henry (Annie May Morris)\", \" Mr. Leopold\", \" Mr. William\", \" Mr. Oskar Leander\", \" Mrs. Alexander (Thamine Thelma\\\")\\\"\", \" Mr. Johan Martin\", \" Mr. Daniel\", \" Mr. Edward\", \" Mr. Aaron (Abi Weller\\\")\\\"\", \" Mr. George\", \" Mr. Samuel Ward\", \" Miss. Ellen Natalia\", \" Miss. Edith Corse\", \" Miss. Katherine\", \" Mrs. Isidor (Rosalie Ida Blun)\", \" Mr. Demetrios\", \" Mr. John\", \" Miss. Beatrice Irene\", \" Mr. Thomson\", \" Mrs. John Henry (Sara Elizabeth Lawry)\", \" Miss. Bertha J\", \" Mr. John\", \" Mrs. Paul (Emma Mock)\", \" Mr. Alfred John\", \" Mr. John\", \" Miss. Laura Alice\", \" Mr. Karl Rudolf\", \" Miss. Alicia\", \" Mr. Solomon\", \" Mr. Marius\", \" Mr. Henry John\", \" Col. Archibald IV\", \" Mrs. Frank (Frances)\", \" Mr. Charles P\", \" Mr. Valtcho\", \" Mr. Carl Robert\", \" Mr. Mapriededer\", \" Mr. August\", \" Miss. Jennie\", \" Mr. Charles Frederick\", \" Miss. Jessie Allis\", \" Miss. Sarah\", \" Mr. Arthur Larned\", \" Mr. Henry James\", \" Mr. Erik Gustaf (Mr Edward Lingrey\\\")\\\"\", \" Mr. Julius\", \" Mr. Herbert Henry\", \" Mr. Evan\", \" Mr. John Bertram\", \" Rev. William\", \" Mrs. Boulton (Olive Potter)\", \" Mr. Nicola\", \" Mr. Thomas\", \" Mrs. (Hulda Kristina Eugenia Lofqvist)\", \" Master. Filip Oscar\", \" Mr. Joseph\", \" Miss. Ellen\", \" Miss. Olga Elida\", \" Mr. John James\", \" Mrs. Benjamin (Edith Nile)\", \" Miss. Julia\", \" Master. Georges Youssef\", \" Miss. Marion\", \" Mr. Ernest\", \" Rev. Joseph Maria\", \" Mrs. Anton (Luise Heilmann)\", \" Mr. Emil\", \" Mr. Edward Watson\", \" Mrs. Henry Arthur Jr (Eleanor Genevieve Fosdick)\", \" Miss. Hilda Maria\", \" Mr. Simon\", \" Mr. Ortin\", \" Mr. Adolf Fredrik\", \" Mr. Assad\", \" Mr. Carl Oscar Vilhelm Gustafsson\", \" Miss. Edith Eileen\", \" Miss. Maude\", \" Mr. Charles Emil Henry\", \" Mrs. Allen Oliver (Nellie E Baumgardner)\", \" Mrs. Alexander Taylor (Mary Eliza Ingersoll)\", \" Mr. James Matthew\", \" Mr. Alexander Taylor Jr\", \" Mrs. Daniel Warner (Mary Graham Carmichael Farquarson)\", \" Mr. Patrick\", \" Mrs. Frederick Charles (Mary Helene Baxter)\", \" Mr. Frank Hubert\", \" Miss. Alice Frances Louisa\", \" Mr. Joseph\", \" Miss. Ada\", \" Mr. James\", \" Mr. William A\", \" Mr. Abraham L\", \" Master. Walter John\", \" Mr. John\", \" Master. Marshall Brines\", \" Mr. Julius Konrad Eugen\", \" Master. Robert Douglas\", \" Miss. Berta Olivia\", \" Mr. Charles Robert\", \" Mrs. (Lena Jacobsen Solvang)\", \" Miss. Nora\", \" Master. Gilbert Sigvard Emanuel\", \" Col. John Jacob\", \" Miss. Winifred Vera\", \" Mr. Frank Thomas\", \" Mr. Alfred Fernand\", \" Miss. Katherine\", \" Mr. Sidney C Stuart\", \" Miss. Edith Louise\", \" Mr. Redjo\", \" Mr. Albert Karvin\", \" Mr. Luigi\", \" Mr. Percy William\", \" Mrs. Benjamin (Ellen Truelove Arman)\", \" Miss. Ida Augusta Margareta\", \" Mr. Christopher\", \" Miss. Bridget Delia\", \" Mr. George Dennick\", \" Mrs. George Dunton (Eleanor Elkins)\", \" Mr. Alexander Morrison\", \" Miss. Florentina\", \" Mr. Harold J\", \" Mrs. (Selena Rogers)\", \" Mr. Einar Gervasius\", \" Mrs. Edward (Helen Churchill Hungerford)\", \" Mrs. George (Omine Amenia\\\" Alexander)\\\"\", \" Mr. Johan Charles\", \" Miss. Bridget\", \" Mr. Thomas James\", \" Mr. Samuel James Metcalfe\", \" Mr. George Frederick\", \" Miss. Constance\", \" Mr. Karl Johan\", \" Mr. Michael\", \" Mr. John Bradley\", \" Mr. Olof Edvin\", \" Mr. Frank Manley\", \" Mr. Raffull\", \" Miss. Marta\", \" Mrs. Walter Donald (Mahala Dutton)\", \" Mrs. Carl Johan (Sigrid Posse)\", \" Mrs. (Alice Frances)\", \" Mr. Frederic Oakley\", \" Mr. Abraham\", \" Master. William Arthur Willie\\\"\\\"\", \" Mr. Frederick R\", \" Mrs. J Frank (Claire Bennett)\", \" Mr. James Vivian\", \" Mrs. Stephen (Annie Margaret Hill)\", \" Mrs. Betros (Zahie Maria\\\" Elias)\\\"\", \" Miss. Barbara J\", \" Mr. Abraham August Johannes\", \" Mr. Walter Miller\", \" Mr. Karl Johan\", \" Mr. Linhart\", \" Mr. George William\", \" Mr. John\", \" Mr. Samuel\", \" Miss. Lilian W\", \" Mr. Karl Albert\", \" Mr. Guillaume Joseph\", \" Mr. August Ferdinand\", \" Mrs. Arthur Henry (Addie\\\" Dart Trevaskis)\\\"\", \" Miss. Gertrud Emilia\", \" Mr. Emilio Ilario Giuseppe\", \" Mr. Stanko\", \" Mr. Roderick Robert Crispin\", \" Mr. Charles William\", \" Miss. May Elizabeth\", \" Mr. Mate\", \" Mr. Thomas Francis\", \" Mr. Patrick\", \" Mrs. Walter Miller (Virginia McDowell)\", \" Miss. Mary\", \" Mr. Jean Nassr\", \" Miss. Dagmar Jenny Ingeborg \", \" Mr. Clifford Richard\", \" Mr. Harry\", \" Mr. John James\", \" Mr. Percy Thomas\", \" Miss. Jelka\", \" Master. Alfred Edward\", \" Miss. Honora\", \" Miss. Maria Youssef\", \" Miss. Salli Helena\", \" Mr. William\", \" Mr. Charles (Charles Fardon)\", \" Mr. John Pillsbury\", \" Mr. Sarkis\", \" Mr. Arthur\", \" Mr. George Alexander Lucien\", \" Miss. Margaret Marcella Maggie\\\"\\\"\", \" Mr. Mustafa\", \" Dr. Washington\", \" Mr. Camille\", \" Mr. Minko\", \" Miss. Louise\", \" Mr. Hanna\", \" Mr. Joseph Holland\", \" Mr. Nils\", \" Mr. Oscar Wilhelm\", \" Mr. Noel\", \" Mr. Escott Robert\", \" Mr. Tome\", \" Miss. Catherine Katie\\\"\\\"\", \" Mrs. Edward Gifford (Catherine Elizabeth Halstead)\", \" Mr. Hudson Joshua Creighton\", \" Master. Philip Frank\", \" Mr. Charles Melville\", \" Mrs. Claus Peter (Jennie L Howard)\", \" Mr. Jego Grga\", \" Mr. David\", \" Mr. Harry\", \" Miss. Jeannie\", \" Mrs. John Stuart (Ella Holmes)\", \" Miss. Kate\", \" Mr. William Augustus\", \" Mr. Reginald Harry\", \" Mr. Nils Hilding\", \" Mr. Ernest Wilfred\", \" Mr. Johan Samuel\", \" Mr. Neshan\", \" Mr. Israel\", \" Mr. Alfred G\", \" Miss. Emilie\", \" Mr. Ali\", \" Miss. Ruth Elizabeth\", \" Mr. George (Mr George Thorne\\\")\\\"\", \" Mr. Charles Valentine\", \" Mr. Ingvar\", \" Mrs. John Morgan (Elizabeth Agnes Mary White) \", \" Mr. William Crothers\", \" Mr. Tannous\", \" Mrs. Said (Waika Mary\\\" Mowad)\\\"\", \" Mr. Ivan\", \" Mr. John Edward\", \" Mr. Jose Joaquim\", \" Mr. Joseph\", \" Mr. Herbert\", \" Master. Seman\", \" Mr. Joseph Charles\", \" Mr. Thure Edvin\", \" Mr. John George\", \" Mrs. James Warburton Martinez (Charlotte Wardle Drake)\", \" Master. James William\", \" Miss. Karen Marie\", \" Mr. William Hull\", \" Mrs. George Joseph (Shawneene Abi-Saab)\", \" Mr. Ralph\", \" Miss. Nellie\", \" Mrs. Leo David (Blanche Strouse)\", \" Mr. Philip Joseph\", \" Mr. William\", \" Mr. Samuel\", \" Miss. Elizabeth Gladys Millvina\\\"\\\"\", \" Mr. Henry Forbes\", \" Mrs. John Murray (Caroline Lane Lamson)\", \" Mr. Edward\", \" Mr. Patrick\", \" Mrs. Edvard Bengtsson (Elin Gerda Persson)\", \" Master. William Henry\", \" Mrs. Albert (Antoinette Magnin)\", \" Mrs. John James (Florence Louise Long)\", \" Mr. Ivan\", \" Mrs. George Achilles (Dorothy Annan)\", \" Mrs. John (Annie Bullen)\", \" Mr. Joseph\", \" Miss. Susanna Juhantytar Sanni\\\"\\\"\", \" Mrs. Leonard (Pauline C Boeson)\", \" Mr. Emilio\", \" Mr. Edgar\", \" Miss. Helen Alice\", \" Mr. Joseph Bruce\", \" Mr. William H\", \" Mrs. Washington (Ruth Vidaver)\", \" Miss. Grace Scott\", \" Miss. Maria\", \" Mr. Henry Harry\\\"\\\"\", \" Mr. William Edward\", \" Master. Carl Edgar\", \" Mr. Patrick\", \" Mr. Joseph\", \" Mrs. Samuel (Emma)\", \" Mrs. Neal (Eileen O'Leary)\", \" Mr. Edwin Frederick\\\"\\\"\", \" Miss. Kate\", \" Mr. Ernst Axel Algot\", \" Mr. John\", \" Mr. Patrick\", \" Master. Paul Folke\", \" Mr. Vivian Ponsonby\", \" Mrs. Ernest H (Elizabeth Lindsey James)\", \" Master. Eugene Joseph\", \" Mr. William\", \" Mr. Anton\", \" Mrs. Lucien Philip (Mary Eloise Hughes)\", \" Mr. Patrick\", \" Mrs. Maxmillian (Margaretha Emerentia Stehli)\", \" Mr. Edvard A\", \" Mr. Thomas Henry\", \" Miss. Caroline\", \" Mr. Harry\", \" Miss. Dorothy Winifred\", \" Mr. Jose Pedro\", \" Mr. Isaac Gerald\", \" Mr. Alfred (Baron von Drachstedt\\\")\\\"\", \" Mr. William Jeffery\", \" Mr. George Dunton\", \" Miss. Johanna Hannah\\\"\\\"\", \" Miss. Treasteall\", \" Miss. Hannah\", \" Mrs. William Edward (Lillian E Thorpe)\", \" Miss. Jenny Lovisa\", \" Mr. Woolf\", \" Dona. Fermina\", \" Mr. Simon Sivertsen\", \" Mr. Frederick\", \" Master. Michael J\"], \"yaxis\": \"y\"}],                        {\"height\": 500, \"legend\": {\"title\": {\"text\": \"Survived\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1200, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Fare\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Name\"}}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('db69a983-64de-4184-bd76-be8f3ac30abf');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"
                    ]
                },
                "mc_idx": 73,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 43,
                "o_idx": 0
            }
        },
        {
            "source": "df[df[\"Embarked\"].isna()]",
            "mc_idx": 75,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".isna": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    44,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "             Survived  Pclass                                 Name     Sex   Age  SibSp  Parch  Ticket    Fare  Cabin Embarked Deck  Side Ticket_p Surname  Namesakes Title  Kid  Old  Alone\nPassengerId                                                                                                                                                                                 \n62                1.0       1                         Miss. Amelie  female  38.0      0      0  113572  1194.0     14      NaN    B  -1.0      N/A   Other          0  Miss    0    0      1\n830               1.0       1   Mrs. George Nelson (Martha Evelyn)  female  62.0      0      0  113572  1194.0     14      NaN    B  -1.0      N/A   Other          0   Mrs    0    1      1"
                    ]
                },
                "mc_idx": 75,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 44,
                "o_idx": 0
            }
        },
        {
            "source": "df.loc[df[\"Embarked\"].isna(),\"Embarked\"] = \"S\"",
            "mc_idx": 77,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".isna": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    45,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 77,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 45,
                "o_idx": 0
            }
        },
        {
            "source": "onehot_df = pd.DataFrame(index=df.index)\n\nfor c in [\"Pclass\",\"Sex\",\"Embarked\",\"Deck\",\"Ticket_p\",\"Surname\",\"Title\"]:\n    encoded = OneHotEncoder().fit_transform(df[c].to_numpy().reshape(-1,1)).toarray()\n    columns = [f\"{c}_{i}\" for i in range(encoded.shape[1])]\n    _df =pd.DataFrame(data=encoded, columns=columns, index=df.index)\n    onehot_df = pd.concat([_df,onehot_df], axis=1)\n    \nonehot_df = pd.concat([onehot_df,df[[\"Survived\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Cabin\",\"Namesakes\",\"Kid\",\"Alone\",\"Side\"]]], axis=1)\n\nfor c in [\"Age\",\"Fare\",\"Cabin\",\"SibSp\",\"Parch\"]:\n    onehot_df[c] = MinMaxScaler().fit_transform(onehot_df[c].to_numpy().reshape(-1,1))",
            "mc_idx": 80,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.46153846153846156,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.23076923076923078,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 3,
                    "shape": 3
                },
                "Data_Transform": {
                    ".concat(": 2,
                    "fit_transform": 2,
                    "transform": 2,
                    "minmaxscaler": 2,
                    "onehotencoder": 1,
                    ".reshape": 2,
                    ".concat": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "shap": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    46,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 80,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 46,
                "o_idx": 0
            }
        },
        {
            "source": "onehot_df.head(10).style.background_gradient(cmap=\"Blues\")",
            "mc_idx": 81,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Exploratory_Data_Analysis",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 1.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.3333333333333333,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".head(": 1,
                    "head": 1,
                    ".head": 1
                },
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {
                    "gradient": 1
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    47,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<pandas.io.formats.style.Styler at 0x7f5589137350>"
                    ]
                },
                "mc_idx": 81,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 47,
                "o_idx": 0
            }
        },
        {
            "source": "df_train = onehot_df.copy(deep=True)\nmask = df_train[\"Survived\"].isna()\ntrain, deploy = df_train[~mask], df_train[mask]\ndeploy = deploy.drop(\"Survived\", axis=1)\ntrain.loc[:,\"Survived\"] = train.loc[:,\"Survived\"].astype(bool)\nx_train, y_train = train.drop(\"Survived\", axis=1), train[\"Survived\"].astype(int)",
            "mc_idx": 84,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Transform",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.25,
                "Data_Transform": 1.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    ".isna": 1
                },
                "Data_Transform": {
                    ".astype(": 2,
                    ".drop": 2
                },
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    48,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/pandas/core/indexing.py:1675: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"
                    ]
                },
                "mc_idx": 84,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 48,
                "o_idx": 0
            }
        },
        {
            "source": "deploy_acc, train_acc, models_dict= {},{},{}\n\ndef baseline(name, model, verbose=True):\n    models_dict[name] = model\n    models_dict[name].fit(x_train,y_train)\n    y_train_hat = models_dict[name].predict(x_train)\n    train_acc[name] = accuracy_score(y_train,y_train_hat)\n    if verbose:\n        skplt.metrics.plot_confusion_matrix(y_train, y_train_hat, normalize=True, figsize=(5,5))\n    submition = pd.DataFrame(models_dict[name].predict(deploy), index= deploy.index,columns = [\"Survived\"]).astype(int)\n    submition.to_csv(f'{name}.csv')",
            "mc_idx": 87,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.15384615384615385,
                "Data_Transform": 0.07692307692307693,
                "Model_Train": 0.6153846153846154,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5384615384615384,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.15384615384615385,
                "Debug": 0.0,
                "Data_Export": 0.15384615384615385,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "columns": 1,
                    "size": 1
                },
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {
                    ".fit(": 1,
                    "model": 7
                },
                "Model_Evaluation": {
                    "confusion_matrix": 2,
                    "accuracy_score": 2,
                    "model": 7,
                    ".predict(": 2
                },
                "Model_Interpretation": {
                    "model": 7
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plot_confusion_matrix": 1,
                    ".plot_confusion_matrix": 1
                },
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    49,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 87,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 49,
                "o_idx": 0
            }
        },
        {
            "source": "params = {\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}\nname, model = \"lr_baseline\", LogisticRegression(**params)\nbaseline(name, model, verbose=False)\n\nname, model = \"svm_baseline\", SVC(**{'C': 5, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'})\nbaseline(name, model, verbose=False)\n\nparams = {\"eta\":0.1,\"gamma\":0,\"max_depth\":6,\"lambda\":0.1,\"alpha\":10}\nname, model = \"xg_baseline\", XGBClassifier(**params)\nbaseline(name, model, verbose=False)\n\nparams = {\"rsm\":0.1, \"learning_rate\":0.005,\"iterations\":500,\"l2_leaf_reg\":5,\"verbose\":False}\nname, model = \"cb_baseline\", CatBoostClassifier(**params)\nbaseline(name, model, verbose=False)",
            "mc_idx": 89,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.8,
                "Model_Interpretation": 0.8,
                "Hyperparameter_Tuning": 0.6,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {
                    "model": 8,
                    "logisticregression": 1,
                    "svc": 1
                },
                "Model_Evaluation": {
                    "model": 8
                },
                "Model_Interpretation": {
                    "model": 8
                },
                "Hyperparameter_Tuning": {
                    "param": 6
                },
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    50,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/xgboost/sklearn.py:888: UserWarning:\n\nThe use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n\n",
                        "[06:08:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
                    ]
                },
                "mc_idx": 89,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 50,
                "o_idx": 1
            }
        },
        {
            "source": "fig = plt.figure(figsize=(35,10))\ncount=1\nfor k in models_dict:\n    ax = fig.add_subplot(1,len(models_dict),count)\n    count+=1\n    skplt.metrics.plot_confusion_matrix(y_train, models_dict[k].predict(x_train), normalize=True, figsize=(5,5),ax=ax, cmap=\"Blues\")\n    ax.set_title(k)\nplt.show()",
            "mc_idx": 90,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.16666666666666666,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.3333333333333333,
                "Data_Transform": 0.16666666666666666,
                "Model_Train": 0.5,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.3333333333333333,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {
                    ".show": 1
                },
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {
                    "size": 2
                },
                "Data_Transform": {
                    ".add": 1
                },
                "Model_Train": {
                    "model": 3
                },
                "Model_Evaluation": {
                    "confusion_matrix": 2,
                    "model": 3,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "model": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {
                    "plot_confusion_matrix": 1,
                    ".plot_confusion_matrix": 1
                },
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    "data/data_Kaggle/outp/images/d0001_c051_o000_image_4.png",
                    51,
                    0,
                    4
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "<Figure size 2520x720 with 8 Axes>"
                    ]
                },
                "mc_idx": 90,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 51,
                "o_idx": 0
            }
        },
        {
            "source": "deploy_acc[\"lr_baseline\"]  = 0.79904\ndeploy_acc[\"svm_baseline\"] = 0.80382\ndeploy_acc[\"xg_baseline\"]  = 0.78947\ndeploy_acc[\"cb_baseline\"]  = 0.79425 \nprint(\"Accuracy on the deployment set:\")\nfor k in deploy_acc:\n    print(f\"{k}\\t:\\t{deploy_acc[k]}\")",
            "mc_idx": 91,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    52,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Accuracy on the deployment set:\nlr_baseline\t:\t0.79904\nsvm_baseline\t:\t0.80382\nxg_baseline\t:\t0.78947\ncb_baseline\t:\t0.79425\n"
                    ]
                },
                "mc_idx": 91,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 52,
                "o_idx": 0
            }
        },
        {
            "source": "print(\"Accuracy on the training set:\")\nfor k in train_acc:\n    print(f\"{k}\\t:\\t{train_acc[k]}\")",
            "mc_idx": 92,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    53,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "Accuracy on the training set:\nlr_baseline\t:\t0.8417508417508418\nsvm_baseline\t:\t0.8911335578002245\nxg_baseline\t:\t0.8552188552188552\ncb_baseline\t:\t0.8451178451178452\n"
                    ]
                },
                "mc_idx": 92,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 53,
                "o_idx": 0
            }
        },
        {
            "source": "name, model = \"ensemble\", StackingClassifier(classifiers=(models_dict[\"svm_baseline\"],models_dict[\"lr_baseline\"],\n                                                                    models_dict[\"xg_baseline\"], models_dict[\"cb_baseline\"]),\n                                               meta_classifier=LogisticRegression(**{\"penalty\":\"l2\",\"solver\": \"liblinear\",\"C\":0.2,}),\n                                               use_features_in_secondary=True)\nbaseline(name, model, verbose=False)",
            "mc_idx": 94,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.125,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.75,
                "Model_Interpretation": 0.75,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    "stack": 1
                },
                "Model_Train": {
                    "model": 6,
                    "logisticregression": 1,
                    "stackingclassifier": 1
                },
                "Model_Evaluation": {
                    "model": 6
                },
                "Model_Interpretation": {
                    "model": 6
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    54,
                    1,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": [
                        "/opt/conda/lib/python3.7/site-packages/xgboost/sklearn.py:888: UserWarning:\n\nThe use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n\n",
                        "[06:08:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
                    ]
                },
                "mc_idx": 94,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 54,
                "o_idx": 1
            }
        },
        {
            "source": "deploy_acc[\"ensemble\"]  = 0.80622",
            "mc_idx": 95,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Other",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [],
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    55,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 95,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 55,
                "o_idx": 0
            }
        },
        {
            "source": "ens_train, ens_deploy = {}, {}\nfor k in models_dict:\n    ens_train[k] = models_dict[k].predict(x_train) * deploy_acc[k]\n    ens_deploy[k] = models_dict[k].predict(deploy) * deploy_acc[k]\nx_train = pd.concat([pd.DataFrame(ens_train, index=x_train.index),x_train], axis=1)        \ndeploy = pd.concat([pd.DataFrame(ens_deploy, index=deploy.index),deploy], axis=1)",
            "mc_idx": 97,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Evaluation",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.8,
                "Model_Train": 0.6,
                "Model_Evaluation": 1.0,
                "Model_Interpretation": 0.6,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".concat(": 2,
                    ".concat": 2
                },
                "Model_Train": {
                    "model": 3
                },
                "Model_Evaluation": {
                    "model": 3,
                    ".predict(": 2
                },
                "Model_Interpretation": {
                    "model": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    56,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 97,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 56,
                "o_idx": 0
            }
        },
        {
            "source": "model = SVC()\nmodel.fit(x_train,y_train)\nsubmition = pd.DataFrame({\"PassengerId\":deploy.index,\"Survived\":model.predict(deploy)}).astype(int)",
            "mc_idx": 98,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Model_Train",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.16666666666666666,
                "Model_Train": 1.0,
                "Model_Evaluation": 0.6666666666666666,
                "Model_Interpretation": 0.5,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 0.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {
                    ".astype(": 1
                },
                "Model_Train": {
                    "model.fit": 1,
                    ".fit(": 1,
                    "model": 3,
                    "svc": 1
                },
                "Model_Evaluation": {
                    "model": 3,
                    ".predict(": 1
                },
                "Model_Interpretation": {
                    "model": 3
                },
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {},
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    57,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 98,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 57,
                "o_idx": 0
            }
        },
        {
            "source": "submition.to_csv(\"mixture.csv\",index=False) #0.81100",
            "mc_idx": 99,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Data_Export",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0.0,
                "Data_Extraction": 0.0,
                "Exploratory_Data_Analysis": 0.0,
                "Data_Transform": 0.0,
                "Model_Train": 0.0,
                "Model_Evaluation": 0.0,
                "Model_Interpretation": 0.0,
                "Hyperparameter_Tuning": 0.0,
                "Visualization": 0.0,
                "Debug": 0.0,
                "Data_Export": 1.0,
                "Other": 0.0
            },
            "detailed_scores": {
                "Environment": {},
                "Data_Extraction": {},
                "Exploratory_Data_Analysis": {},
                "Data_Transform": {},
                "Model_Train": {},
                "Model_Evaluation": {},
                "Model_Interpretation": {},
                "Hyperparameter_Tuning": {},
                "Visualization": {},
                "Debug": {},
                "Data_Export": {
                    ".to_csv(": 1,
                    "to_csv": 1
                },
                "Other": {}
            },
            "emb": 0,
            "cell_type": "code",
            "image_path": [
                [
                    null,
                    58,
                    0,
                    null
                ]
            ],
            "output": {
                "source": {
                    "source": []
                },
                "mc_idx": 99,
                "nb_idx": 0,
                "embedding": {},
                "classification": null,
                "keywords": {},
                "summary": null,
                "q_number": null,
                "duration": null,
                "exception": null,
                "class_probability": {},
                "detailed_scores": {},
                "emb": 0,
                "cell_type": "output",
                "c_idx": 58,
                "o_idx": 0
            }
        }
    ],
    "markdown_cells": [
        {
            "source": "<h1 style=\"font-size:250%;color:#292F55\"> Titanic - Machine Learning from Disaster</h1>\n\n*Top 3% Titanic solution - For this last version best model score is 0.81100*.\n![](https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/2-rms-titanic-ship-plans-jose-elias-sofia-pereira.jpg)",
            "mc_idx": 1,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "<a style=\"font-size:200%;color:#292F55\">Table Of Content\n* [<a style=\"font-size:150%;color:#292F55\">1. EDA & Feature Engeneering](#1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.1 Passengers location analisys](#1.1_bullet) - Survival for different Deck / Cabin numbers\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.2 Groups and family bonds analisys](#1.2_bullet) - Ticket numbers analisys, Names / Surnames\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 1.3 Personal features analisys](#1.3_bullet) - Age / Status analisys\n* [<a style=\"font-size:150%;color:#292F55\">2. Data preparation](#2_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Filling None values](#2.1_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.2 Encoding features and droping unnecessary](#2.2_bullet)\n* [<a style=\"font-size:150%;color:#292F55\">3. Model development](#3_bullet)\n    * [<a style=\"font-size:130%;color:#3B61A3\"> 2.1 Catboost baseline](#2.1_bullet)\n    \n",
            "mc_idx": 3,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# <a class=\"anchor\" id=\"1_bullet\" style=\"color:#292F55\"> 1. Exploratory Data Analysis (EDA)",
            "mc_idx": 4,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## <a class=\"anchor\" id=\"1.1_bullet\" style=\"color:#3B61A3\"> 1.1 Passengers location analisys \n\nI assume, that the location of passengers at the moment of the disaster may affect on the surviving rate.\n\nFor this case we will try to analyze such location, referring to the time of the disaster - 23:40. It means that some passengers may already have been in their cabins, some of them was hanging on some restaurants and \"bars\" (linked to there Pclass and maby cabin location) etc.\n\nAnyway, we do not know their location at that moment, but we can create some feature to describe it somehow to help our model.\n\nOffcourse, we have smth like 80% None values in \"Cabin\" feature - but still some useful information can be extracted + we need to be careful with filling the gaps.",
            "mc_idx": 7,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.1.1_bullet\" style=\"color:#3B61A3\"> 1.1.1 Survival for different Deck numbers\nDeck descriptors are coded inside of the Cabin numbers\nWe will extract them as a new feature.\nUnknowns we will mark as \"N/A\"",
            "mc_idx": 8,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "What we can see from such graphs:\n*     Only one PassengerId have been on the Deck T - and he is in train set, so we can drop the \"T\" value\n*     There ara some dependancies between surviving rate and the Deck number:\n\n|deck|died|survived|ratio|\n|:--:|:--:|:------:|:---:|\n|C   |24  |35      |0.4  |\n|G   |2   |2       |0.5  |\n|D   |8   |25      |0.24 |\n|A   |8   |7       |0.53 |\n|B   |12  |35      |0.26 |\n|F   |5   |8       |0.38 |\n|E   |8   |24      |0.25 |\n        \nIn this case - we can put such new features into the model and encode them.",
            "mc_idx": 11,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.1.2_bullet\" style=\"color:#3B61A3\"> 1.1.2 Cabin numbers analisys\nSome of the passangers have shared several cabins - thay may have the same cabin number or leave in 3 of 4 cabins at the same time (families). But actually not only families or reletives shared cabins, but some collegues, friends etc. In this case i will try to create a features, which will describe the location of passangers, linked to there Cabin number.\n\nSome of the cabins has ambiquouse values - i will hardcode them - giving maximum values to multiple cabins \nfor a passanger. Or just rename them is several other ways, according to the Deck plans from https://www.encyclopedia-titanica.org/titanic-deckplans/",
            "mc_idx": 13,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We can see that there is no accurate dependency between Cabin number and the Survival in general - maby it can work on connection with some other features. Some extra information we can take from the Cabin number - is the Side of the ship (left or right) ,according to the even or odd number of it. The side of the ship can effect much on the serviving rate.",
            "mc_idx": 16,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "As we can see - passangers survived more often, living on the 1, then on the side -1\n\nTo fill the missing values for \"Cabin\", we will put median values for all passangers in specific Decks.\nBefore this, we will devide number of the Cabin by two - because the \"side\" location has been already taken from the data.\nIf Deck number is unknown - we will just mark Cabin as -1 - mwaning \"Unknown\"",
            "mc_idx": 18,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Now we gonna plot some developed \"coordinates\" of the passangers, to find some patterns in survival.",
            "mc_idx": 20,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We can see some patterns in the data:\n  - For example, all of the passangers on the \"1\" side of the Deck D survived.\n  - For only some of decks the \"closer\" location to zero may cause the better survival (maby those passangers was closer to the ladders)",
            "mc_idx": 22,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "In the end - we have to fillna for \"Side\" feature with 0 - refering to unknown side of the ship",
            "mc_idx": 24,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## <a class=\"anchor\" id=\"1.2_bullet\" style=\"color:#3B61A3\">  1.2 Groups and family bonds analisys\nSome groups of passangers, should be connected via ticket numbers, surnames, classP and etc. We will try to put the data into the shape in which our model will detect such connections\n### <a class=\"anchor\" id=\"1.2.1_bullet\" style=\"color:#3B61A3\">  1.2.1 Ticket numbers analisys",
            "mc_idx": 25,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "**\"LINE\" tickets:**\nAll Tickets number contains some numbers, except \"LINE\" tickets www.encyclopedia-titanica.org\nPhiladelphia's westbound voyage was cancelled, and several shipmates forced to travel aboard Titanic as passengers (Some of them have LINE ticket number):\n - August Johnson (Johnson, Mr. Alfred) - **LINE** - 370160\n - William Cahoone Jr. Johnson - **LINE** - 370160\n - William Henry T\u00f6rnquist - **LINE** - 370160\n - Andrew John Shannon (Lionel Leonard) - **LINE** - 370160\n\nWe will not analize them much, in this part, but we should take it into account",
            "mc_idx": 26,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Some of the tickets contains several prefixes refering for some specific sale policies - maby it may be usefull for the model (we will save it into Ticket_p) but at the same time wew will clear our ticket number from umbiques information (It may be some hidden connections in the ticket numbers).",
            "mc_idx": 28,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We can see that some of prefixes appear only one time or only in train dataset. Lets clean them in order not to confuse our model.\n\nWe wil do it manualy - couse it is not much off them, and we gonna check them, if maby there is some sintax mistakes.",
            "mc_idx": 31,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We do not know much about the meaning of this prefixes, but there are some dependencies:\n* No passangers survived with the prefix A4\n* Most of the passangers with WC prefix - died",
            "mc_idx": 34,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.2.2_bullet\" style=\"color:#3B61A3\">  1.2.2 Names, surnames and status feature\nTo get more information about the family bonds - we will extract surnames instead of Names, and put them into features list/",
            "mc_idx": 35,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We will get all same-surname groups into one list, to put some feature for it\nAll others will be marked with \"Other\".(*)",
            "mc_idx": 37,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Lets visualize Surviving rates for families:",
            "mc_idx": 39,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "The same thing as in (*) we gonna do for those Surnames who do not exist in test set.\nAgain, i gonna do it manually, cause i dont wanna work with automatization here =)\n\nBut just before this we will put some extra feature which mean \"Has any namesakes\" to determin if the person in som relatio-like group. It may look the same as SibSp, but guess, that som connections between people is hidden.",
            "mc_idx": 41,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Now we will delete all the Families, for which number of Survived equel to not Survived (Again ill do it manually)",
            "mc_idx": 47,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## <a class=\"anchor\" id=\"1.3_bullet\" style=\"color:#3B61A3\">  1.3 Personal features analisys\n### <a class=\"anchor\" id=\"1.3.1_bullet\" style=\"color:#3B61A3\">  1.3.1 Title features\nPassangers with different Titles may hav different survival rate (may be connected to so some position on groups, status of inner features)",
            "mc_idx": 49,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "I desided to delete values with low frequancy - for our model not to be messed up.",
            "mc_idx": 53,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"1.3.2_bullet\" style=\"color:#3B61A3\">  1.3.2 Parch and Age\nThis features may have crucial effect on the target. Parants was saving there children befor them, and many other connections may be inside of the just two attributes",
            "mc_idx": 55,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "In the end i desided not to fix it, cause if takes some extra information about the data, and it is kind of cheating.\nBut i will leave it there just in case someone will need it",
            "mc_idx": 58,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We will manually set two more features:\n* \"Kid\" feature - for less then 18 y.o passangers - there survival rate is higher \n* 'Alone' feature - for those who was travalling alone (>18 e.o, Parch & SibSp ==0). \n* 'Old' feature - elder people died more often. I took 60 y.o as a treashold, after checking several and chooseing the one",
            "mc_idx": 60,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# <a class=\"anchor\" id=\"2_bullet\" style=\"color:#292F55\">  2. Data preparation\n## <a class=\"anchor\" id=\"2.1_bullet\" style=\"color:#3B61A3\">  2.1 Filling None values\n### <a class=\"anchor\" id=\"2.1.1_bullet\" style=\"color:#3B61A3\">  2.1.1 Filling \"Age\" None values",
            "mc_idx": 64,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "For the \"Age\" feature we just can replace None values with some mean value, but we gonna do it in a bit more complex way.\nWe will locate some groups, based on Sex and Pclass - lets check the difference in ages in several groups.",
            "mc_idx": 66,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"2.1.2_bullet\" style=\"color:#3B61A3\">  2.1.2 Filling \"Fare\" feature\nI will manually fill None value with the mean value for passanger class.\nAfter that we can replace Fare with a rank, because i assume that the value of difference is not important.",
            "mc_idx": 70,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"2.1.3_bullet\" style=\"color:#3B61A3\">  2.1.3 Filling \"Embarked\" feature\nWe have two passangers, whose \"Embarked\" information is unknown",
            "mc_idx": 74,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "According to https://www.encyclopedia-titanica.org/titanic-survivor/amelia-icard.html we can fill nan values with \"S\"",
            "mc_idx": 76,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## <a class=\"anchor\" id=\"2.2_bullet\" style=\"color:#3B61A3\">  2.2 Encoding features and droping unnecessary",
            "mc_idx": 78,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We can try to apply OneHot encoder for all columns to see how spars will be the matrix",
            "mc_idx": 79,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "Resulting matrix looks like too spars, because of Surnames features, which should provide us some groups of survivals.\nNow we gonna try to use it for the baseline. In the next versions, i'll try some other configurations",
            "mc_idx": 82,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "# <a class=\"anchor\" id=\"3_bullet\" style=\"color:#292F55\">  3. Model development",
            "mc_idx": 83,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "## <a class=\"anchor\" id=\"3.1_bullet\" style=\"color:#3B61A3\">  3.1 Models baselines",
            "mc_idx": 85,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We will define the method, which fits the given model and puts all the neccesery data into different structures to use them further:\n\n* deploy_acc  - model accuracy for deploy dataset\n* train_acc   - model accuracy after the validation\n* models_dict - dictionary of the models\n",
            "mc_idx": 86,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "I've tried several Gridsearches for CVs with Kfold. And after a bunch of deploys, i chose those models.\nI chose models which gave me the best deploy accuracy. This models gonna be not \"Best model for Survival prediction\" , but \"The best model to predict the test set\", which is not the exect solution for the task.",
            "mc_idx": 88,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "### <a class=\"anchor\" id=\"3.2_bullet\" style=\"color:#3B61A3\"> 3.2 Ensemble models",
            "mc_idx": 93,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "We see, that all 5 models has different sepations on the data (even on the trains set)\nNow we gonna combine this models into peculiar ensemble.\nWe gonna put som waights, according to there deploy results.",
            "mc_idx": 96,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        },
        {
            "source": "![Upvote!](https://img.shields.io/badge/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)",
            "mc_idx": 100,
            "nb_idx": 1,
            "embedding": {},
            "classification": "Markdown",
            "keywords": {},
            "summary": null,
            "q_number": null,
            "duration": null,
            "exception": null,
            "class_probability": {
                "Environment": 0,
                "Data_Extraction": 0,
                "Exploratory_Data_Analysis": 0,
                "Data_Transform": 0,
                "Model_Train": 0,
                "Model_Evaluation": 0,
                "Model_Interpretation": 0,
                "Hyperparameter_Tuning": 0,
                "Visualization": 0,
                "Debug": 0,
                "Data_Export": 0,
                "Other": 0
            },
            "detailed_scores": [
                {
                    "Environment": [],
                    "Data_Extraction": [],
                    "Exploratory_Data_Analysis": [],
                    "Data_Transform": [],
                    "Model_Train": [],
                    "Model_Evaluation": [],
                    "Model_Interpretation": [],
                    "Hyperparameter_Tuning": [],
                    "Visualization": [],
                    "Debug": [],
                    "Data_Export": [],
                    "Other": []
                }
            ],
            "emb": 0,
            "cell_type": "markdown"
        }
    ],
    "sim_matrix": [
        0.9301309585571289,
        1.0000001192092896,
        0.9644686579704285
    ],
    "cell_sim_matrix": [],
    "nb_order": [],
    "summary_data_VA": null
}
## hardcoded_dictionary_keywords creation

class_keywords = {
    "Environment": {
        "PL_keywords": ["import", "requirements.txt", "environment.yml", "!pip install", "!conda install", "virtualenv", "venv", "docker-compose", "pip3 install", "conda install", "install.packages", "setup environment"],
        "NL_keywords": ["environment setup", "package installation", "dependency management", "virtual environment", "setup instructions", "installation guide", "libraries", "import packages", "import libraries"],
        "PL_keywords_weak": ["install", "setup.py", "pipenv", "pyenv", "sdk", "package.json", "Gemfile", "requirements", "dependency"],
        "NL_keywords_weak": ["setup environment", "installing dependencies", "manage packages", "setup guide", "configure", "environment configuration", "software installation", "installing software", "setup steps"],
        "PL_keywords_very_weak": ["import", "library", "package", "module", "install", "require", "setup.py", "pip install", "conda install", "importlib", "conda", "pip", "npm", "brew", "apt-get", "yum", "installing", "setting up", "configure", "setup", "environment", "dependencies", "packages", "library", "import", "install", "requirements", "setup.py", "requirements.txt", "environment.yml", "virtualenv", "venv", "docker-compose", "pip3 install", "conda install", "install.packages", "setup environment"], 
        "NL_keywords_very_weak": ["setup", "configuration", "dependencies", "environment setup", "install packages", "setup environment", "library versions", "dependency management", "environment setup", "package installation", "dependency management", "virtual environment", "setup instructions", "installation guide", "libraries", "import packages", "import libraries", "install", "setup.py", "pipenv", "pyenv", "sdk", "package.json", "Gemfile", "requirements", "dependency", "setup environment", "installing dependencies", "manage packages", "setup guide", "configure", "environment configuration", "software installation", "installing software", "setup steps"],
    
    },
    "Data_Extraction": {
        "PL_keywords": ["read_csv", "read_excel", "read_sql", "pd.read_", "BeautifulSoup", "scrapy.Spider", "API call", "load_dataset", "pd.read_json", "pd.read_html", "pd.read_"],
        "NL_keywords": ["data extraction", "extraction data", "data loading", "web scraping", "API request", "reading datasets", "data import", "load data", "load the data"],
        "PL_keywords_weak": ["fetch", "query", "open", "requests.get", "urllib.request", "pandasql", "read_table", "dataframe.read", "extract"],
        "NL_keywords_weak": ["getting data", "data retrieval", "fetching data", "data access", "collecting data", "data acquisition", "accessing web data", "downloading data", "importing data"],
        "PL_keywords_very_weak": ["read_csv", "read_excel", "load", "fetch", "API", "scrape", "DataFrame", "read_json", "pd.read_sql", "open", "requests.get", "read_sql", "pd.read_", "BeautifulSoup", "scrapy.Spider", "API call", "load_dataset", "pd.read_json", "pd.read_html", "pd.read_", "fetch", "query", "open", "requests.get", "urllib.request", "pandasql", "read_table", "dataframe.read", "extract"],
        "NL_keywords_very_weak": ["load data", "read data", "import data", "extract data", "source data", "retrieve data", "data acquisition", "fetch data", "API data", "data extraction", "extraction data", "data loading", "web scraping", "API request", "reading datasets", "data import", "load data", "load the data", "getting data", "data retrieval", "fetching data", "data access", "collecting data", "data acquisition", "accessing web data", "downloading data", "importing data"],
    },
    "Exploratory_Data_Analysis": {
        "PL_keywords": [".describe(", ".info(", "value_counts()", "df.isnull().sum", "sns.pairplot", ".corr", ".head(", ".tail("],
        "NL_keywords": ["exploratory data analysis", "data exploration", "exploration data", "data distribution", "missing values", "statistical summary", "initial observations", "data overview", "duplicates", "outliers"],
        "PL_keywords_weak": [".mean(", ".std(", ".plot(", ".histogram(", "plotly", "matplotlib", ".boxplot(", "scatter_matrix", "pairgrid", "distplot"],
        "NL_keywords_weak": ["data insights", "analyze data", "data trends", "data patterns", "visual analysis", "summary statistics", "data exploration", "analysis report", "data properties", "data characteristics", "data patterns", "data distribution", "data summary"],
        "PL_keywords_very_weak": ["head", "describe", "info", "histogram", "boxplot", ".boxplot(", "value_counts", "plt.show", "df.plot", "sns.pairplot", "sns.heatmap", "sns.countplot", "sns.distplot", "sns.scatterplot", "sns.lineplot", "sns.boxplot", "sns.violinplot", "sns.swarmplot", "sns.jointplot", "sns.lmplot", "sns.catplot", "sns.relplot", "sns.regplot", "sns.residplot", "sns.kdeplot", "sns.ecdfplot", "sns.barplot", "sns.pointplot", "sns.stripplot", "sns.boxenplot", "sns.violinplot", "sns.swarmplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatter", "sns.heatmap", "plt.boxplot", "fig, ax = plt.subplots", "plt.bar", ".hist(", ".plot(", ".scatter(", ".boxplot(", ".heatmap(", ".bar("],
        "NL_keywords_very_weak": ["summary statistics", "distribution", "data exploration", "initial analysis", "explore data", "data review", "first look", "data quality assessment", "data overview", "data summary", "data insights", "analyze data", "data trends", "data patterns", "visual analysis", "summary statistics", "data exploration", "analysis report", "data properties", "data characteristics", "data patterns", "data distribution", "data summary", "head", "describe", "info", "histogram", "boxplot", ".boxplot(", "value_counts", "plt.show", "df.plot", "sns.pairplot", "sns.heatmap", "sns.countplot", "sns.distplot", "sns.scatterplot", "sns.lineplot", "sns.boxplot", "sns.violinplot", "sns.swarmplot", "sns.jointplot", "sns.lmplot", "sns.catplot", "sns.relplot", "sns.regplot", "sns.residplot", "sns.kdeplot", "sns.ecdfplot", "sns.barplot", "sns.pointplot", "sns.stripplot", "sns.boxenplot", "sns.violinplot", "sns.swarmplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot", "sns.relplot", "sns.scatterplot", "sns.lineplot", "sns.histplot", "sns.kdeplot", "sns.ecdfplot", "sns.rugplot", "sns.barplot", "sns.countplot", "sns.pointplot", "sns.violinplot", "sns.boxenplot", "sns.stripplot", "sns.swarmplot", "sns.violinplot", "sns.catplot", "sns.pairplot", "sns.jointplot", "sns.lmplot"],
        "sci-kit-preprocessing": {"_label": [], "_function": [], "other": []},
        "sci-kit-feature-selection": {"_label": [], "_function": [], "other": []},
    },
    "Data_Transform": {
        "PL_keywords": [".merge(", ".join(", ".concat(", ".pivot(", ".groupby(", ".fillna(", ".dropna(", ".apply(", ".map(", ".replace(", ".to_datetime(", ".to_numeric("],
        "NL_keywords": ["data transformation", "transformation data", "data transforming", "transforming data", "data cleaning", "cleaning data", "feature engineering", "data manipulation", "transforming data", "data normalization", "data preprocessing", "data transformation"],
        "PL_keywords_weak": [".astype(", "pandas.get_dummies", ".cut(", ".qcut(", "DataFrameMapper", "ColumnTransformer", ".normalize(", ".standardize(", "MinMaxScaler", "LabelEncoder"],
        "NL_keywords_weak": ["altering data", "data adjustment", "modifying data", "data changes", "data conversion", "data format change", "data reshaping", "data restructuring", "data alteration"],
        "PL_keywords_very_weak": ["merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize"],
        "NL_keywords_very_weak": ["combine data", "transform data", "data manipulation", "clean data", "reshape data", "data cleaning", "restructure data", "data alignment", "data conversion", "data modification", "data adjustment", "data transformation", "data normalization", "data preprocessing", "data transformation", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder", "merge", "join", "concatenate", "groupby", "pivot", "filter", "map", "df.apply", "replace", "pd.melt", "pd.pivot_table", "pd.concat", "pd.merge", "pd.join", "pd.groupby", "pd.fillna", "pd.dropna", "pd.apply", "pd.map", "pd.replace", "pd.to_datetime", "pd.to_numeric", "astype", "pandas.get_dummies", "cut", "qcut", "DataFrameMapper", "ColumnTransformer", "normalize", "standardize", "MinMaxScaler", "LabelEncoder"],  
        "sci-kit-preprocessing": {"_label": [], "_function": [], "other": []},
        "sci-kit-feature-selection": {"_label": [], "_function": [], "other": []},
    },
    "Model_Train": {
        "PL_keywords": ["model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit("],
        "NL_keywords": ["model training", "training model", "model fitting", "learning algorithm", "supervised training", "model architecture"],
        "PL_keywords_weak": ["LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data"],
        "NL_keywords_weak": ["training algorithms", "learning models", "model development", "building model", "model creation", "learning from data", "training process", "model setup", "learning process"],
        "PL_keywords_very_weak": ["fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile"],
        "NL_keywords_very_weak": ["train model", "fit model", "model training", "supervised learning", "training phase", "learning process", "train classifier", "regression training", "classification training", "model fitting", "model training", "training model", "model fitting", "learning algorithm", "supervised training", "model architecture", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split", "cross_validate", "Sequential(", "estimator.fit", "compile", ".fit(", "LinearRegression", "RandomForestClassifier", "KMeans", ".train(", "fit_transform", "model_selection", "pipeline.Pipeline", "models.compile", "training_data", "fit", "train", "model", "regressor", "classifier", "predict", ".fit(", "sklearn.model_selection", "train_test_split", "xgboost.train", "model.fit", "train_test_split"],
        "sci-kit-supervised": {"_label": [], "_function": [], "other": []},
        "sci-kit-unsupervised": {"_label": [], "_function": [], "other": []},
        "sci-kit-ensemble": {"_label": [], "_function": [], "other": []},
        "sci-kit-neural-networks": {"_label": [], "_function": [], "other": []},
    },
    "Model_Evaluation": {
        "PL_keywords": ["model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score"],
        "NL_keywords": ["evaluation model", "model evaluation", "model performance", "evaluation metrics", "accuracy measurement", "model testing", "validation results"],
        "PL_keywords_weak": [".score(", "mean_squared_error", "log_loss", ".predict(", "validation_split", "train_validation_test", "model_selection.cross_val_predict", "evaluate_model", "testing_model"],
        "NL_keywords_weak": ["evaluating accuracy", "performance analysis", "results analysis", "accuracy testing", "validation of model", "test performance", "assessment of model", "model quality", "evaluation process"],
        "PL_keywords_very_weak": ["score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy"],
        "NL_keywords_very_weak": ["model evaluation", "test model", "model performance", "accuracy of the model", "evaluate results", "performance metrics", "validation results", "testing phase", "model assessment", "model quality", "evaluation model", "model evaluation", "model performance", "evaluation metrics", "accuracy measurement", "model testing", "validation results", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix", ".predict(", "model.evaluate", "confusion_matrix", "accuracy_score", "precision_score", "recall_score", "f1_score", ".evluate(", "precision", "recall", "f1_score", "roc_auc_score", "classification_report", "cross_val_score", "evaluate", "test", "validation", "accuracy", "precision", "recall", "f1_score", "confusion_matrix"],
        "sci-kit-evaluation-evaluate": {"_label": [], "_function": [], "other": []},
        "sci-kit-evaluation-scoring": {"_label": [], "_function": [], "other": []},
    },
    "Model_Interpretation": {
        "PL_keywords": ["feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance"],
        "NL_keywords": ["model interpretation", "interpretation model", "importance feature", "feature importance", "model insights", "interpretation techniques", "model explanation", "decision explanations"],
        "PL_keywords_weak": ["explain_model", "model_explainability", "FeatureImportance", "decision_path", "visualize_model", "interpret_model", "explain_predictions", "feature_contributions", "impact"],
        "NL_keywords_weak": ["understanding model", "model analysis", "explanation of predictions", "feature analysis", "model transparency", "interpretability techniques", "underlying patterns", "model rationale", "decision-making insight"],
        "PL_keywords_very_weak": ["feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_", "decision_function", "partial_dependence", "shap_values", "eli5.show_weights", "interpret_model", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importance_", "coef_"],
        "NL_keywords_very_weak": ["interpret model", "model insights", "feature importance", "understand model", "model explanation", "explain predictions", "interpretation techniques", "model reasoning", "decision-making insight", "model interpretation", "interpretation model", "importance feature", "feature importance", "model insights", "interpretation techniques", "model explanation", "decision explanations", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot", "eli5.show_weights", "LIME", "SHAP", "PermutationImportance", "plot_importance", "plot_partial_dependence", "plot_pdp", "plot_shap", "plot_lime", "plot_permutation_importance", "feature_importances_", "shap_values", "plot_tree", "partial_dependence_plot"],
        "sci-kit-evaluation": {"_label": [], "_function": [], "other": []},
        "sci-kit-feature-selection": {"_label": [], "_function": [], "other": []},
    },
    "Hyperparameter_Tuning": {
        "PL_keywords": ["GridSearchCV", "RandomizedSearchCV", "param_grid", "n_iter", "BayesianOptimization", "Optuna", "early_stopping", "hyperopt", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna"],
        "NL_keywords": ["hyperparameter tuning", "tune hyperparameters", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters"],
        "PL_keywords_weak": ["tune_model", "model_optimization", "search_parameters", "Hyperparameters", "parameter_search", "optimize_model", "adjust_parameters", "tuning_strategy", "optimization_process"],
        "NL_keywords_weak": ["adjusting model", "optimizing performance", "parameter adjustments", "fine-tuning models", "optimization of parameters", "model optimization", "tuning process", "optimization strategies", "parameter selection"],
        "PL_keywords_very_weak": ["GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin", "BayesianOptimization", "model_selection", "tune.run", "tune_grid", "tune_random", "tune_bayesian", "tune_optuna", "GridSearchCV", "RandomizedSearchCV", "cross_val_score", "param_grid", "hyperopt.fmin"],
        "NL_keywords_very_weak": ["tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters", "tune parameters", "hyperparameter optimization", "parameter search", "optimize model", "tuning strategy", "optimize performance", "search strategy", "parameter optimization", "model tuning", "search strategy", "optimization techniques", "tuning parameters"],
        "sci-kit-module-selection": {"_label": [], "_function": [], "other": []},
    },
    "Visualization": {
        "PL_keywords": ["plt.plot", "df.hist", "sns.scatterplot", "sns.heatmap", "plt.boxplot", "fig, ax = plt.subplots", "plt.bar", ".hist(", ".plot(", ".scatter(", ".boxplot(", ".heatmap(", ".bar("],
        "NL_keywords": ["plot data", "data plotting", "visualization tools", "charts and graphs", "visual insights", "plotting data", "graphical representation", "data visualization"],
        "PL_keywords_weak": ["sns.", "seaborn.", "plotly.express", "matplotlib.pyplot", "seaborn.factorplot", "bokeh.plotting", "ggplot", "pyplot", "visualize", "chart", "graph"],
        "NL_keywords_weak": ["creating plots", "drawing graphs", "charting data", "visual representations", "data charts", "graphical plots", "visual analysis tools", "data graphics", "plot creation"],
        "PL_keywords_very_weak": ["plot", "show", "figure", "hist", "scatter", "bar", "lineplot", "plt.xlabel", "sns.heatmap", "plotly.graph_objs", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.subplots", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express", "plotly.offline", "plotly.graph_objs", "plotly.express", "plotly.offline", "plotly.subplots", "plotly.express"],
        "NL_keywords_very_weak": ["plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph", "data visualization", "show data", "illustrate data", "visualization techniques", "chart analysis", "graphical representation", "plot data", "visualize", "chart", "graph"],
        "sci-kit-EDA": {"_label": [], "_function": [], "other": []},
    },
    "Debug": {
        "PL_keywords": ["assert", "try:", "except:", "pdb.set_trace", "logging.debug", "sys.exc_info"],
        "NL_keywords": ["debug", "error analysis", "troubleshooting steps", "debugging code", "error resolution", "problem solving", "code debugging", "error handling"],
        "PL_keywords_weak": ["debugger", "traceback", "exception", "error_log", "sys.tracebacklimit", "debug_mode", "stack_trace", "breakpoint", "error_report"],
        "NL_keywords_weak": ["finding errors", "code analysis", "fixing bugs", "problem identification", "error detection", "troubleshooting guide", "solving issues", "code inspection", "debugging steps"],
        "PL_keywords_very_weak": ["debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "break", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "debug", "error", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys"],
        "NL_keywords_very_weak": ["fix error", "debugging", "error handling", "troubleshoot", "resolve issues", "problem solving", "code correction", "error analysis", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:", "except:", "pdb.set_trace()", "logging.debug", "sys.exc_info", "error", "debug", "exception", "traceback", "breakpoint", "assert", "try:"],
    },
    "Data_Export": {
        "PL_keywords": [".to_csv(", ".to_excel(", ".to_sql(", ".to_json(", ".to_parquet(", "pickle.dump", "np.save"],
        "NL_keywords": ["data export", "export data", "data saving", "exporting results", "writing data", "output files", "saving tables"],
        "PL_keywords_weak": ["write", "to_hdf", "to_dict", "savefig", "to_markdown", "to_clipboard", "export", "save_data", "store"],
        "NL_keywords_weak": ["saving results", "data storage", "writing output", "export process", "result storage", "output generation", "saving process", "data archiving", "record saving"],
        "PL_keywords_very_weak": ["to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save", "to_csv", "to_excel", "save", "write", "output", "export", "df.to_json", "pickle.dump", "np.save", "torch.save"],
        "NL_keywords_very_weak": ["save data", "export data", "write file", "output data", "data output", "store results", "save results", "data preservation", "export analysis", "write data"],
    },
}
